
PlaterDB = {
	["captured_spells"] = {
		[83463] = {
			["encounterName"] = "Ozumat",
			["source"] = "Faceless Sapper",
			["npcID"] = 44752,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1047,
		},
		[6136] = {
			["source"] = "Mai'Zoth",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 818,
		},
		[14331] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stonespine",
			["npcID"] = 10809,
		},
		[80009] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Twilight Hunter",
			["npcID"] = 39437,
		},
		[76171] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["encounterID"] = 1046,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40825,
		},
		[8270] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Geomancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4520,
		},
		[8286] = {
			["isChanneled"] = false,
			["source"] = "Aggem Thorncurse",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4424,
		},
		[53646] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 17252,
		},
		[22833] = {
			["isChanneled"] = false,
			["source"] = "Stomper Kreeg",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14322,
		},
		[33624] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Undercity Mage",
			["npcID"] = 18971,
		},
		[12540] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Kagani Nightstrike",
			["npcID"] = 24557,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[50256] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bear",
			["npcID"] = 1778,
		},
		[80522] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shimmerspine Harvester",
			["npcID"] = 46474,
		},
		[78859] = {
			["encounterName"] = "Ozruk",
			["type"] = "DEBUFF",
			["source"] = "Ozruk",
			["encounterID"] = 1058,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 42188,
		},
		[14907] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "The Unforgiven",
			["npcID"] = 10516,
		},
		[35096] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodwarder Mender",
			["npcID"] = 19633,
		},
		[72335] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowy Mercenary",
			["npcID"] = 38177,
		},
		[8814] = {
			["isChanneled"] = false,
			["source"] = "Bloodmage Thalnos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4543,
		},
		[76813] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Naz'jar Spiritmender",
			["npcID"] = 41096,
		},
		[33625] = {
			["isChanneled"] = false,
			["source"] = "Gold Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 32340,
		},
		[46035] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunblade Magister",
			["npcID"] = 24685,
		},
		[79884] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Braddok",
			["npcID"] = 42858,
		},
		[8990] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Commander Mograine",
			["npcID"] = 3976,
		},
		[72208] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tortured Rifleman",
			["npcID"] = 38176,
		},
		[18100] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Archmage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9451,
		},
		[76686] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Obsidian Borer",
			["npcID"] = 40019,
		},
		[15243] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fireguard Destroyer",
			["npcID"] = 8911,
		},
		[59085] = {
			["encounterName"] = "Krystallus",
			["source"] = "Stormforged Tactician",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28581,
		},
		[24529] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dave",
			["npcID"] = 33776,
		},
		[32749] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Wizard",
			["npcID"] = 4300,
		},
		[88073] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Cloud Prince",
			["npcID"] = 45917,
		},
		[88201] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Young Storm Dragon",
			["npcID"] = 45919,
		},
		[76047] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1044,
		},
		[80781] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rockwing Screecher",
			["npcID"] = 10409,
		},
		[76815] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Naz'jar Spiritmender",
			["npcID"] = 41096,
		},
		[20787] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blazing Fireguard",
			["npcID"] = 8910,
		},
		[20819] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Sorcerer",
			["npcID"] = 4294,
		},
		[15547] = {
			["isChanneled"] = false,
			["source"] = "Riverpaw Poacher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46250,
		},
		[33626] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stormwind Soldier",
			["npcID"] = 18948,
		},
		[22994] = {
			["isChanneled"] = false,
			["source"] = "Tendris Warpwood",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11489,
		},
		[46036] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunblade Magister",
			["npcID"] = 24685,
		},
		[46164] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Kael'thas Sunstrider",
			["npcID"] = 24664,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1894,
		},
		[76560] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gilgoblin Aquamage",
			["npcID"] = 40943,
		},
		[76688] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Obsidian Borer",
			["npcID"] = 40019,
		},
		[21331] = {
			["isChanneled"] = false,
			["source"] = "Deeprot Tangler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13142,
		},
		[88075] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Cloud Prince",
			["npcID"] = 45917,
		},
		[69780] = {
			["encounterName"] = "Escaped from Arthas",
			["source"] = "The Lich King",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 36954,
		},
		[11837] = {
			["isChanneled"] = false,
			["source"] = "Chief Ukorz Sandscalp",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7267,
		},
		[25809] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Venomous Snake",
			["npcID"] = 19833,
		},
		[35290] = {
			["isChanneled"] = false,
			["source"] = "Pumba",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42719,
		},
		[6984] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Beast Trainer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4531,
		},
		[81039] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Irradiated Slime",
			["npcID"] = 6218,
		},
		[11981] = {
			["isChanneled"] = false,
			["source"] = "Shadowforge Darkcaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4848,
		},
		[58511] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Orgrimmar Grunt",
			["npcID"] = 3296,
		},
		[412947] = {
			["source"] = "Dragonflayer Ironhelm",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 23961,
		},
		[18101] = {
			["source"] = "Eldreth Apparition",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11471,
		},
		[10094] = {
			["isChanneled"] = false,
			["source"] = "Ancient Stone Keeper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7206,
		},
		[52754] = {
			["encounterName"] = "Krystallus",
			["source"] = "Hardened Steel Skycaller",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28580,
		},
		[75539] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["encounterID"] = 1040,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39665,
		},
		[59343] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Champion",
			["npcID"] = 29062,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 217,
		},
		[3589] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hate Shrieker",
			["npcID"] = 8541,
		},
		[5137] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Undead Postman",
			["npcID"] = 11142,
		},
		[32924] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shienor Sorcerer",
			["npcID"] = 18450,
		},
		[59599] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Bonecrusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24069,
		},
		[8271] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Dustweaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4522,
		},
		[59855] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 371,
		},
		[30991] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Inciter",
			["npcID"] = 39926,
		},
		[22835] = {
			["isChanneled"] = false,
			["source"] = "Stomper Kreeg",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14322,
		},
		[20820] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Adept",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4296,
		},
		[22899] = {
			["isChanneled"] = false,
			["source"] = "Immol'thar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11496,
		},
		[33564] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Justinius the Harbinger",
			["npcID"] = 18966,
		},
		[12557] = {
			["isChanneled"] = false,
			["source"] = "Skeletal Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10390,
		},
		[31279] = {
			["isChanneled"] = false,
			["source"] = "Plaguehound Runt",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8596,
		},
		[72342] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phantom Mage",
			["npcID"] = 38172,
		},
		[34204] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Frayer",
			["npcID"] = 18587,
		},
		[44503] = {
			["encounterName"] = "Selin Fireheart",
			["source"] = "Wretched Husk",
			["npcID"] = 24690,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1897,
		},
		[52755] = {
			["encounterName"] = "Krystallus",
			["source"] = "Hardened Steel Skycaller",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28580,
		},
		[5337] = {
			["isChanneled"] = false,
			["source"] = "Spectral Betrayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11288,
		},
		[79379] = {
			["isChanneled"] = false,
			["source"] = "Gilblin Plunderer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41746,
		},
		[34716] = {
			["encounterName"] = "Warp Splinter",
			["source"] = "Warp Splinter",
			["npcID"] = 17977,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1929,
		},
		[59344] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Champion",
			["npcID"] = 29062,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 217,
		},
		[53395] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Warrior",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27960,
		},
		[72215] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tortured Rifleman",
			["npcID"] = 38176,
		},
		[72343] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Phantom Mage",
			["npcID"] = 38172,
		},
		[25810] = {
			["encounterName"] = "Trollgore",
			["source"] = "Venomous Snake",
			["npcID"] = 19833,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[59856] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 371,
		},
		[93581] = {
			["encounterName"] = "Baron Ashbury",
			["source"] = "Baron Ashbury",
			["npcID"] = 46962,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1069,
		},
		[13005] = {
			["isChanneled"] = false,
			["source"] = "Green Paladin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 32342,
		},
		[79892] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Farseer Lopaa",
			["npcID"] = 50174,
		},
		[44120] = {
			["encounterName"] = "Priestess Delrissa",
			["type"] = "DEBUFF",
			["source"] = "Eramas Brightblaze",
			["npcID"] = 24554,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1895,
		},
		[11086] = {
			["isChanneled"] = false,
			["source"] = "Witch Doctor Zum'rah",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7271,
		},
		[72344] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phantom Hallucination",
			["npcID"] = 38567,
		},
		[44504] = {
			["encounterName"] = "Selin Fireheart",
			["source"] = "Wretched Husk",
			["npcID"] = 24690,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1897,
		},
		[87185] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gordok Captain",
			["npcID"] = 11445,
		},
		[75543] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["encounterID"] = 1040,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39665,
		},
		[80021] = {
			["isChanneled"] = false,
			["source"] = "Gurubashi Soldier",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42871,
		},
		[59601] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Forge Master",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24079,
		},
		[16567] = {
			["source"] = "Cursed Mage",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 8524,
		},
		[86930] = {
			["encounterName"] = "Asaad",
			["source"] = "Asaad",
			["npcID"] = 43875,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1042,
		},
		[89105] = {
			["isChanneled"] = false,
			["source"] = "Lurking Tempest",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45704,
		},
		[15532] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Mage",
			["npcID"] = 32324,
		},
		[15548] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Quilguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4436,
		},
		[16791] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magistrate Barthilas",
			["npcID"] = 10435,
		},
		[88082] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Mirror Image",
			["npcID"] = 47244,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 829,
		},
		[80022] = {
			["isChanneled"] = false,
			["source"] = "Captured Lashtail Hatchling",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42870,
		},
		[58514] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Orgrimmar Grunt",
			["npcID"] = 3296,
		},
		[76312] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Cindermaul",
			["npcID"] = 40844,
		},
		[50518] = {
			["isChanneled"] = false,
			["source"] = "Ravager",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 16934,
		},
		[17143] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Champion",
			["npcID"] = 4302,
		},
		[23380] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sebelia",
			["npcID"] = 40843,
		},
		[31600] = {
			["isChanneled"] = false,
			["source"] = "Crypt Stalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8555,
		},
		[69148] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Warden",
			["npcID"] = 36666,
		},
		[17399] = {
			["isChanneled"] = false,
			["source"] = "Balnazzar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10813,
		},
		[53333] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Necromancer",
			["npcID"] = 29098,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 217,
		},
		[86292] = {
			["encounterName"] = "Grand Vizier Ertan",
			["type"] = "DEBUFF",
			["source"] = "Ertan's Vortex",
			["npcID"] = 46007,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1043,
		},
		[76185] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["source"] = "Ascendant Lord Obsidius",
			["npcID"] = 39705,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1036,
		},
		[7992] = {
			["source"] = "Celebrian Dryad",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11793,
		},
		[21749] = {
			["isChanneled"] = false,
			["source"] = "Barbed Lasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12219,
		},
		[21909] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Princess Theradras",
			["npcID"] = 12201,
		},
		[77593] = {
			["source"] = "Revitalized Basilisk",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 35409,
		},
		[77721] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Burning Blade Apprentice",
			["npcID"] = 3198,
		},
		[88084] = {
			["encounterName"] = "Falric",
			["source"] = "Mirror Image",
			["npcID"] = 47243,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 841,
		},
		[75930] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Panther",
			["npcID"] = 736,
		},
		[16172] = {
			["isChanneled"] = false,
			["source"] = "Commander Malor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11032,
		},
		[44314] = {
			["encounterName"] = "Selin Fireheart",
			["source"] = "Selin Fireheart",
			["npcID"] = 24723,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1897,
		},
		[50519] = {
			["source"] = "snuffel",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28233,
		},
		[48920] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 373,
		},
		[34655] = {
			["encounterName"] = "Trollgore",
			["type"] = "DEBUFF",
			["source"] = "Viper",
			["npcID"] = 19921,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 369,
		},
		[16380] = {
			["isChanneled"] = false,
			["source"] = "Eye of Naxxramas",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10411,
		},
		[77978] = {
			["isChanneled"] = false,
			["source"] = "Patchwork Horror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10414,
		},
		[59603] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Heartsplitter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24071,
		},
		[8272] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Earthbreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4525,
		},
		[51799] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Scholar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27964,
		},
		[20822] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Adept",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4516,
		},
		[16856] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scourge Brute",
			["npcID"] = 26623,
		},
		[12542] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gordok Captain",
			["npcID"] = 11445,
		},
		[76188] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["source"] = "Ascendant Lord Obsidius",
			["npcID"] = 39705,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1036,
		},
		[72222] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tortured Rifleman",
			["npcID"] = 38176,
		},
		[76572] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Twilight Sadist",
			["encounterID"] = 1040,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39980,
		},
		[29426] = {
			["isChanneled"] = false,
			["source"] = "Risen Gallant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10424,
		},
		[23381] = {
			["isChanneled"] = false,
			["source"] = "Druid of the Fang",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3840,
		},
		[12734] = {
			["isChanneled"] = false,
			["source"] = "Commander Malor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11032,
		},
		[59348] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Crypt Fiend",
			["npcID"] = 29097,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 217,
		},
		[76189] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["type"] = "DEBUFF",
			["source"] = "Shadow of Obsidius",
			["npcID"] = 40817,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1036,
		},
		[70176] = {
			["encounterName"] = "Escaped from Arthas",
			["type"] = "DEBUFF",
			["source"] = "Lumbering Abomination",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 37069,
		},
		[86808] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Living Blood",
			["npcID"] = 43123,
		},
		[89751] = {
			["isChanneled"] = false,
			["source"] = "Veegoril",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17252,
		},
		[69409] = {
			["encounterName"] = "Escaped from Arthas",
			["source"] = "The Lich King",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 36954,
		},
		[46043] = {
			["isChanneled"] = false,
			["source"] = "Sunblade Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24686,
		},
		[73887] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Grandmatron Tekla",
			["npcID"] = 39325,
		},
		[18072] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gordok Brute",
			["npcID"] = 11441,
		},
		[15245] = {
			["isChanneled"] = false,
			["source"] = "Commander Malor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11032,
		},
		[101650] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dragonmaw Shaman",
			["npcID"] = 43629,
		},
		[36576] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shaleskin Flayer",
			["npcID"] = 20210,
		},
		[36640] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Warp Aberration",
			["npcID"] = 18865,
		},
		[93974] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Hand of Gul'dan",
			["npcID"] = 46157,
		},
		[59349] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'ar Darter",
			["npcID"] = 29213,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 218,
		},
		[9232] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Inquisitor Whitemane",
			["npcID"] = 3977,
		},
		[71841] = {
			["isChanneled"] = false,
			["source"] = "Val'kyr Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 38391,
		},
		[59605] = {
			["isChanneled"] = false,
			["source"] = "Proto-Drake Rider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24849,
		},
		[84507] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Naz'jar Invader",
			["npcID"] = 39616,
		},
		[6713] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Warrior",
			["npcID"] = 32321,
		},
		[15501] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Earthbreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4525,
		},
		[20823] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Conjuror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4297,
		},
		[16793] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magistrate Barthilas",
			["npcID"] = 10435,
		},
		[91800] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Gravelhead",
			["npcID"] = 26125,
		},
		[93975] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Hand of Gul'dan",
			["npcID"] = 46157,
		},
		[46044] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunblade Imp",
			["npcID"] = 24815,
		},
		[18968] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Evoker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4289,
		},
		[71842] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Val'kyr Protector",
			["npcID"] = 38392,
		},
		[54424] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thoodhum",
			["npcID"] = 417,
		},
		[29363] = {
			["source"] = "Vampiric Duskbat",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1554,
		},
		[54680] = {
			["isChanneled"] = false,
			["source"] = "Devilsaur",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6498,
		},
		[17145] = {
			["isChanneled"] = false,
			["source"] = "Risen Battle Mage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10425,
		},
		[31602] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nerub'enkan",
			["npcID"] = 10437,
		},
		[27572] = {
			["source"] = "Kwee Q. Peddlefeet",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 16075,
		},
		[85788] = {
			["source"] = "Hungering Wraith",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1802,
		},
		[53401] = {
			["isChanneled"] = false,
			["source"] = "Járnviðr",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30164,
		},
		[59606] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Ironhelm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23961,
		},
		[21655] = {
			["isChanneled"] = false,
			["source"] = "Lord Vyletongue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12236,
		},
		[21687] = {
			["isChanneled"] = false,
			["source"] = "Noxxion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13282,
		},
		[23766] = {
			["source"] = "Sayge",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14822,
		},
		[53721] = {
			["isChanneled"] = false,
			["source"] = "Lady Alistra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29195,
		},
		[4962] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crypt Beast",
			["npcID"] = 10413,
		},
		[14030] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anvilrage Warden",
			["npcID"] = 8890,
		},
		[46045] = {
			["isChanneled"] = false,
			["source"] = "Sunblade Physician",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24687,
		},
		[7057] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Haunted Servitor",
			["npcID"] = 3875,
		},
		[58519] = {
			["source"] = "Tyelis",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45337,
		},
		[52442] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Arthas",
			["npcID"] = 26499,
		},
		[84510] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Red Mist",
			["npcID"] = 43370,
		},
		[91419] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spitebone Skeleton",
			["npcID"] = 47143,
		},
		[16333] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Citizen",
			["npcID"] = 10384,
		},
		[81568] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Berserker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43430,
		},
		[75683] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1045,
		},
		[8257] = {
			["isChanneled"] = false,
			["source"] = "Venomlash Scorpid",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7022,
		},
		[59735] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 575,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23954,
		},
		[86814] = {
			["isChanneled"] = false,
			["source"] = "Riverpaw Basher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46248,
		},
		[2602] = {
			["isChanneled"] = false,
			["source"] = "Earthen Sculptor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7012,
		},
		[20824] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Geomancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4520,
		},
		[2610] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nezzliok the Dire",
			["npcID"] = 1062,
		},
		[81441] = {
			["isChanneled"] = false,
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43391,
		},
		[81569] = {
			["source"] = "Stonecore Berserker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 43430,
		},
		[43935] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Bonecrusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24069,
		},
		[83872] = {
			["source"] = "Zen'Kiki",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44904,
		},
		[80418] = {
			["isChanneled"] = false,
			["source"] = "Captured Lashtail Hatchling",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42870,
		},
		[93468] = {
			["encounterName"] = "Baron Ashbury",
			["source"] = "Baron Ashbury",
			["npcID"] = 46962,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1069,
		},
		[91677] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Pustulant Monstrosity",
			["npcID"] = 47138,
		},
		[23511] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Orgrimmar Grunt",
			["npcID"] = 18950,
		},
		[59352] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anub'ar Prime Guard",
			["npcID"] = 29128,
		},
		[75813] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Naz'jar Tempest Witch",
			["npcID"] = 40634,
		},
		[53403] = {
			["source"] = "Járnviðr",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 30164,
		},
		[59608] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Metalworker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24078,
		},
		[76325] = {
			["isChanneled"] = false,
			["source"] = "Twilight Flame Caller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39708,
		},
		[21688] = {
			["isChanneled"] = false,
			["source"] = "Weegli Blastfuse",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7607,
		},
		[51612] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Scholar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27964,
		},
		[59992] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Foreman Thaldrin",
			["npcID"] = 31399,
		},
		[39586] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gold Shaman",
			["npcID"] = 32340,
		},
		[43936] = {
			["source"] = "Dragonflayer Bonecrusher",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 24069,
		},
		[46047] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Sunblade Physician",
			["npcID"] = 24687,
		},
		[46367] = {
			["source"] = "Anveena Replica",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26579,
		},
		[72360] = {
			["encounterName"] = "Marwyn",
			["source"] = "Marwyn",
			["npcID"] = 38113,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 839,
		},
		[76582] = {
			["isChanneled"] = false,
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39990,
		},
		[44640] = {
			["isChanneled"] = false,
			["source"] = "Sister of Torment",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24697,
		},
		[18266] = {
			["source"] = "Beeble'phod",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 46018,
		},
		[91807] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Brainface",
			["npcID"] = 26125,
		},
		[53148] = {
			["source"] = "Pumba",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 42719,
		},
		[59417] = {
			["encounterName"] = "Hadronox",
			["source"] = "Hadronox",
			["npcID"] = 28921,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 217,
		},
		[20537] = {
			["isChanneled"] = false,
			["source"] = "Prince Tortheldrin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11486,
		},
		[7713] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Undead Postman",
			["npcID"] = 11142,
		},
		[76583] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Monk",
			["npcID"] = 51659,
		},
		[51805] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Controller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27966,
		},
		[20825] = {
			["isChanneled"] = false,
			["source"] = "Bloodmage Thalnos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4543,
		},
		[16827] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Raptor",
			["npcID"] = 3256,
		},
		[35877] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunfury Bloodwarder",
			["npcID"] = 18853,
		},
		[80038] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Magmalord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42789,
		},
		[76200] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["type"] = "BUFF",
			["source"] = "Ascendant Lord Obsidius",
			["npcID"] = 39705,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1036,
		},
		[23224] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Baron Silverlaine",
			["npcID"] = 3887,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1070,
		},
		[76584] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Zealot",
			["npcID"] = 39990,
		},
		[21337] = {
			["isChanneled"] = false,
			["source"] = "Deeprot Tangler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13142,
		},
		[21401] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gold Shaman",
			["npcID"] = 32340,
		},
		[81574] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Berserker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43430,
		},
		[59354] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anub'ar Prime Guard",
			["npcID"] = 29128,
		},
		[75817] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Corla, Herald of Twilight",
			["npcID"] = 39679,
		},
		[17467] = {
			["source"] = "Lord Aurius Rivendare",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45412,
		},
		[70188] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Lady Sylvanas Windrunner",
			["npcID"] = 37554,
		},
		[744] = {
			["isChanneled"] = false,
			["source"] = "Deviate Adder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5048,
		},
		[745] = {
			["isChanneled"] = false,
			["source"] = "Crypt Walker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8556,
		},
		[55964] = {
			["isChanneled"] = false,
			["source"] = "Randolph Moloch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46383,
		},
		[83366] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stranglethorn Raptor",
			["npcID"] = 685,
		},
		[8041] = {
			["isChanneled"] = false,
			["source"] = "Druid of the Fang",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3840,
		},
		[93857] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Baron Silverlaine",
			["npcID"] = 3887,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1070,
		},
		[69933] = {
			["encounterName"] = "Escaped from Arthas",
			["source"] = "Spiritual Reflection",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 37068,
		},
		[18267] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unseen Servant",
			["npcID"] = 8538,
		},
		[42723] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 575,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23954,
		},
		[81576] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Earthshaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43537,
		},
		[93986] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Hand of Gul'dan",
			["npcID"] = 46157,
		},
		[34791] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tempest-Forge Peacekeeper",
			["npcID"] = 18405,
		},
		[59419] = {
			["encounterName"] = "Hadronox",
			["source"] = "Hadronox",
			["npcID"] = 28921,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 217,
		},
		[8242] = {
			["isChanneled"] = false,
			["source"] = "Olaf",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6908,
		},
		[8258] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Quilguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4436,
		},
		[8274] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Handler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4530,
		},
		[59803] = {
			["encounterName"] = "Trollgore",
			["source"] = "Trollgore",
			["npcID"] = 26630,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[3110] = {
			["isChanneled"] = false,
			["source"] = "Abaloz",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 416,
		},
		[103582] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Darkmoon Faire Mystic Mage",
			["npcID"] = 55382,
		},
		[93987] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Hand of Gul'dan",
			["npcID"] = 46157,
		},
		[12544] = {
			["isChanneled"] = false,
			["source"] = "Mosh'Ogg Spellcrafter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 710,
		},
		[33832] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dread Scryer",
			["npcID"] = 47141,
		},
		[52383] = {
			["isChanneled"] = false,
			["source"] = "Lightning Construct",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27972,
		},
		[19131] = {
			["isChanneled"] = false,
			["source"] = "Risen Guardsman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10418,
		},
		[76588] = {
			["isChanneled"] = false,
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39990,
		},
		[76716] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defiled Earth Rager",
			["npcID"] = 40023,
		},
		[17244] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Baroness Anastari",
			["npcID"] = 10436,
		},
		[42724] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Warrior",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27960,
		},
		[79403] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Orgrimmar Thief",
			["npcID"] = 42594,
		},
		[89766] = {
			["isChanneled"] = false,
			["source"] = "Kirvazin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17252,
		},
		[34856] = {
			["isChanneled"] = false,
			["source"] = "Bloodfalcon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18155,
		},
		[19579] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 1509,
		},
		[19643] = {
			["isChanneled"] = false,
			["source"] = "Argent Sentry",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 51986,
		},
		[76589] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Zealot",
			["npcID"] = 39990,
		},
		[76717] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defiled Earth Rager",
			["npcID"] = 40023,
		},
		[3242] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unstable Ravager",
			["npcID"] = 47136,
		},
		[75054] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Shadow of Obsidius",
			["npcID"] = 40817,
		},
		[33641] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Justinius the Harbinger",
			["npcID"] = 18966,
		},
		[15087] = {
			["isChanneled"] = false,
			["source"] = "Putridus Shadowstalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11792,
		},
		[33833] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dread Scryer",
			["npcID"] = 47141,
		},
		[8994] = {
			["isChanneled"] = false,
			["source"] = "Gordok Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11448,
		},
		[76590] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Faceless Watcher",
			["npcID"] = 40936,
		},
		[76718] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Incendiary Spark",
			["npcID"] = 40021,
		},
		[87081] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spitebone Guardian",
			["npcID"] = 47145,
		},
		[32693] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Elementalist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27962,
		},
		[85802] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stonescale Matriarch",
			["npcID"] = 44148,
		},
		[20475] = {
			["encounterName"] = "Baron Geddon",
			["source"] = "Baron Geddon",
			["npcID"] = 12056,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 668,
		},
		[59421] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hadronox",
			["npcID"] = 28921,
		},
		[76207] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["npcID"] = 40788,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1046,
		},
		[70194] = {
			["encounterName"] = "Escaped from Arthas",
			["source"] = "Lady Sylvanas Windrunner",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 37554,
		},
		[76591] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Zealot",
			["npcID"] = 39990,
		},
		[76719] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Incendiary Spark",
			["npcID"] = 40021,
		},
		[39591] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Braddok",
			["npcID"] = 42858,
		},
		[85419] = {
			["isChanneled"] = false,
			["source"] = "Hulking Plaguebear",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44482,
		},
		[22938] = {
			["isChanneled"] = false,
			["source"] = "Mana Burst",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14397,
		},
		[33642] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Melgromm Highmountain",
			["npcID"] = 18969,
		},
		[15615] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gordok Brute",
			["npcID"] = 11441,
		},
		[13584] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Theradrim Shardling",
			["npcID"] = 11783,
		},
		[46180] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Apoko",
			["npcID"] = 24553,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[80174] = {
			["source"] = "Burning Blade Apprentice",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 3198,
		},
		[76592] = {
			["source"] = "Twilight Zealot",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39990,
		},
		[44517] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunblade Warlock",
			["npcID"] = 24686,
		},
		[91561] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fetid Ghoul",
			["npcID"] = 47135,
		},
		[75441] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Mad Prisoner",
			["encounterID"] = 1040,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40447,
		},
		[75697] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Twilight Zealot",
			["npcID"] = 50284,
		},
		[59422] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 373,
		},
		[17501] = {
			["isChanneled"] = false,
			["source"] = "Crimson Cannon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11199,
		},
		[59614] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Overseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24085,
		},
		[63900] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tøttern",
			["npcID"] = 26482,
		},
		[76721] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Naz'jar Sentinel",
			["npcID"] = 40577,
		},
		[9874] = {
			["isChanneled"] = false,
			["source"] = "Stone Keeper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4857,
		},
		[9906] = {
			["isChanneled"] = false,
			["source"] = "Jadespine Basilisk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4863,
		},
		[11969] = {
			["isChanneled"] = false,
			["source"] = "Bloodscalp Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 697,
		},
		[54049] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wraanum",
			["npcID"] = 417,
		},
		[33643] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Melgromm Highmountain",
			["npcID"] = 18969,
		},
		[81711] = {
			["source"] = "Unbound Earth Rager",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 43662,
		},
		[16143] = {
			["source"] = "Mangled Cadaver",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 10382,
		},
		[46181] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Apoko",
			["npcID"] = 24553,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[78129] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Dragonstalker",
			["npcID"] = 43992,
		},
		[12097] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Decomposed Ghoul",
			["npcID"] = 31812,
		},
		[76594] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Zealot",
			["npcID"] = 39990,
		},
		[30615] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stone Sleeper",
			["npcID"] = 3870,
		},
		[7154] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Spectre",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11473,
		},
		[75571] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["encounterID"] = 1040,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39665,
		},
		[59359] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'ar Venomancer",
			["npcID"] = 29217,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 218,
		},
		[10258] = {
			["isChanneled"] = false,
			["source"] = "Archaedas",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2748,
		},
		[8259] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Spearhide",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4438,
		},
		[76339] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["npcID"] = 40788,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1046,
		},
		[53602] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Anub'ar Darter",
			["npcID"] = 29213,
		},
		[59807] = {
			["encounterName"] = "Trollgore",
			["source"] = "Trollgore",
			["npcID"] = 26630,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[18813] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Patchwork Horror",
			["npcID"] = 10414,
		},
		[22939] = {
			["isChanneled"] = false,
			["source"] = "Residual Monstrosity",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11484,
		},
		[424340] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Greater Fire Elemental",
			["npcID"] = 15438,
		},
		[87854] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skyfall Star",
			["npcID"] = 45932,
		},
		[77747] = {
			["source"] = "Searing Totem",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 2523,
		},
		[79922] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Flayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42808,
		},
		[46182] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Eramas Brightblaze",
			["npcID"] = 24554,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[44199] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Phoenix",
			["npcID"] = 24674,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1894,
		},
		[52643] = {
			["encounterName"] = "Krystallus",
			["type"] = "DEBUFF",
			["source"] = "Hardened Steel Reaver",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28578,
		},
		[17150] = {
			["isChanneled"] = false,
			["source"] = "Risen Sorcerer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10422,
		},
		[27577] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Warrior",
			["npcID"] = 32321,
		},
		[27609] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Priestess Delrissa",
			["npcID"] = 24560,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[17470] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Timmy the Cruel",
			["npcID"] = 10808,
		},
		[59616] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Runecaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23960,
		},
		[19645] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wailing Banshee",
			["npcID"] = 10464,
		},
		[35244] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fungal Monstrosity",
			["npcID"] = 44035,
		},
		[57825] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Apparition",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11471,
		},
		[81459] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Earthshaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43537,
		},
		[46183] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Eramas Brightblaze",
			["npcID"] = 24554,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[80180] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Bruiser",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42692,
		},
		[80308] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Rift Conjurer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42691,
		},
		[80564] = {
			["encounterName"] = "Lady Naz'jar",
			["type"] = "DEBUFF",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1045,
		},
		[15232] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[15248] = {
			["isChanneled"] = false,
			["source"] = "Riverpaw Looter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46251,
		},
		[3826] = {
			["source"] = "Ward of Laze",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 2667,
		},
		[79413] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gilblin Collector",
			["npcID"] = 41017,
		},
		[13281] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Groundshaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4523,
		},
		[34797] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodwarder Greenkeeper",
			["npcID"] = 18419,
		},
		[32942] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Warp Chaser",
			["npcID"] = 18884,
		},
		[59617] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Runecaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23960,
		},
		[51493] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Giant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27969,
		},
		[20829] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Summoner",
			["npcID"] = 8551,
		},
		[69051] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["npcID"] = 36502,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 831,
		},
		[79414] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Salty Dog",
			["npcID"] = 41037,
		},
		[9459] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Corrosive Lurker",
			["npcID"] = 6219,
		},
		[15616] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Orgrimmar Shaman",
			["npcID"] = 18972,
		},
		[15664] = {
			["source"] = "Flamekin Spitter",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 9776,
		},
		[19134] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Warrior",
			["npcID"] = 32321,
		},
		[34222] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunseeker Channeler",
			["npcID"] = 19505,
		},
		[17151] = {
			["isChanneled"] = false,
			["source"] = "Risen Inquisitor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10426,
		},
		[34350] = {
			["isChanneled"] = false,
			["source"] = "Sunseeker Botanist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18422,
		},
		[13745] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Doomforge Arcanasmith",
			["npcID"] = 8900,
		},
		[36589] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sinewy Wolf",
			["npcID"] = 31233,
		},
		[34798] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodwarder Greenkeeper",
			["npcID"] = 18419,
		},
		[17439] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Black Guard Sentry",
			["npcID"] = 10394,
		},
		[32943] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Warp Chaser",
			["npcID"] = 18884,
		},
		[53477] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tøttern",
			["npcID"] = 26482,
		},
		[51494] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Giant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27969,
		},
		[76473] = {
			["isChanneled"] = false,
			["source"] = "Twilight Flame Caller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39708,
		},
		[16000] = {
			["isChanneled"] = false,
			["source"] = "Celebrian Dryad",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11793,
		},
		[11922] = {
			["isChanneled"] = false,
			["source"] = "Constrictor Vine",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12220,
		},
		[69053] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Soulguard Watchman",
			["npcID"] = 36478,
		},
		[14033] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Interrogator Gerstahn",
			["npcID"] = 9018,
		},
		[62305] = {
			["isChanneled"] = false,
			["source"] = "bakacaaz",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 683,
		},
		[16128] = {
			["isChanneled"] = false,
			["source"] = "Immol'thar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11496,
		},
		[48168] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Matron Ossela",
			["npcID"] = 50148,
		},
		[14145] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gordok Mage-Lord",
			["npcID"] = 11444,
		},
		[86581] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jadecrest Basilisk",
			["npcID"] = 43981,
		},
		[34351] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mutate Fleshlasher",
			["npcID"] = 19598,
		},
		[55077] = {
			["isChanneled"] = false,
			["source"] = "Savage Worg",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29735,
		},
		[18399] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gordok Mage-Lord",
			["npcID"] = 11444,
		},
		[34799] = {
			["encounterName"] = "Commander Sarannis",
			["source"] = "Commander Sarannis",
			["encounterID"] = 1925,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17976,
		},
		[24604] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wolf",
			["npcID"] = 2959,
		},
		[16448] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plagued Rat",
			["npcID"] = 10441,
		},
		[8260] = {
			["isChanneled"] = false,
			["source"] = "Herod",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3975,
		},
		[8276] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Beastmaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4532,
		},
		[8292] = {
			["isChanneled"] = false,
			["source"] = "Charlga Razorflank",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4421,
		},
		[30937] = {
			["source"] = "Shadowmoon Channeler",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17653,
		},
		[49704] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkweb Recluse",
			["npcID"] = 26625,
		},
		[20798] = {
			["isChanneled"] = false,
			["source"] = "Sandfury Shadowcaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5648,
		},
		[22877] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lothos Riftwaker",
			["npcID"] = 14387,
		},
		[22909] = {
			["isChanneled"] = false,
			["source"] = "Eye of Immol'thar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14396,
		},
		[12530] = {
			["source"] = "Chosen Zealot",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 32175,
		},
		[31289] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Young Stranglethorn Tiger",
			["npcID"] = 681,
		},
		[6307] = {
			["isChanneled"] = false,
			["source"] = "Abatip",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 416,
		},
		[38254] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Skethyl Owl",
			["npcID"] = 21450,
		},
		[76604] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Faceless Watcher",
			["npcID"] = 40936,
		},
		[34352] = {
			["isChanneled"] = false,
			["source"] = "Sunseeker Researcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18421,
		},
		[81210] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Furious Hyjal Warden",
			["npcID"] = 43427,
		},
		[48873] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 373,
		},
		[55078] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["type"] = "DEBUFF",
			["source"] = "Rune Weapon",
			["npcID"] = 27893,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1046,
		},
		[59364] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Gashra",
			["npcID"] = 28730,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[51240] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Death Knight",
			["npcID"] = 26830,
		},
		[82362] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Evolved Twilight Zealot",
			["npcID"] = 39987,
		},
		[8788] = {
			["isChanneled"] = false,
			["source"] = "Bloodscalp Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 697,
		},
		[19647] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nheemon",
			["npcID"] = 417,
		},
		[21790] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thessala Hydra",
			["npcID"] = 12207,
		},
		[33393] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Pit Commander",
			["npcID"] = 18945,
		},
		[35696] = {
			["source"] = "Chiniltom",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[15089] = {
			["isChanneled"] = false,
			["source"] = "Ghost of the Past",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10940,
		},
		[76094] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1044,
		},
		[76478] = {
			["isChanneled"] = false,
			["source"] = "Twilight Torturer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39978,
		},
		[18144] = {
			["isChanneled"] = false,
			["source"] = "Bloodfalcon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18155,
		},
		[34353] = {
			["isChanneled"] = false,
			["source"] = "Sunseeker Researcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18421,
		},
		[42669] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 575,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23954,
		},
		[69058] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Soulguard Reaper",
			["npcID"] = 36499,
		},
		[13298] = {
			["source"] = "Putridus Trickster",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11791,
		},
		[16449] = {
			["isChanneled"] = false,
			["source"] = "Carrion Devourer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8605,
		},
		[59685] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Strategist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23956,
		},
		[16577] = {
			["isChanneled"] = false,
			["source"] = "Blighthound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45453,
		},
		[30938] = {
			["source"] = "Keli'dan the Breaker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17377,
		},
		[91064] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Frantic Geist",
			["npcID"] = 47131,
		},
		[20831] = {
			["isChanneled"] = false,
			["source"] = "Mana Remnant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11483,
		},
		[22910] = {
			["isChanneled"] = false,
			["source"] = "Illyanna Ravenoak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11488,
		},
		[15585] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anvilrage Medic",
			["npcID"] = 8894,
		},
		[9460] = {
			["isChanneled"] = false,
			["source"] = "Corrosive Lurker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6219,
		},
		[23038] = {
			["isChanneled"] = false,
			["source"] = "Bloodmage Thalnos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4543,
		},
		[44141] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[86331] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Grand Vizier Ertan",
			["npcID"] = 43878,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1043,
		},
		[23262] = {
			["source"] = "Jotunheim Warrior",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 29880,
		},
		[34354] = {
			["isChanneled"] = false,
			["source"] = "Sunseeker Researcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18421,
		},
		[13730] = {
			["isChanneled"] = false,
			["source"] = "Skeletal Berserker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10391,
		},
		[69060] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Soulguard Reaper",
			["npcID"] = 36499,
		},
		[85692] = {
			["encounterName"] = "Corla, Herald of Twilight",
			["source"] = "Doomguard",
			["encounterID"] = 1038,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11859,
		},
		[13810] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Tortured Rifleman",
			["npcID"] = 38176,
		},
		[59430] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 218,
		},
		[13874] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anvilrage Officer",
			["npcID"] = 8895,
		},
		[70340] = {
			["source"] = "Jorn Skyseer",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 3387,
		},
		[25821] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Argent Sentry",
			["npcID"] = 16378,
		},
		[37361] = {
			["isChanneled"] = false,
			["source"] = "Skeletal Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10390,
		},
		[53801] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anub'ar Crusher",
			["npcID"] = 28922,
		},
		[33395] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Water Elemental",
			["npcID"] = 510,
		},
		[11971] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Talrendis Saboteur",
			["npcID"] = 35312,
		},
		[14034] = {
			["isChanneled"] = false,
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4853,
		},
		[75842] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Karsh Steelbender",
			["npcID"] = 39698,
		},
		[46189] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Kagani Nightstrike",
			["npcID"] = 24557,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[80576] = {
			["isChanneled"] = false,
			["source"] = "Twilight Nightblade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42707,
		},
		[52778] = {
			["encounterName"] = "Krystallus",
			["source"] = "Stormforged Tactician",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28581,
		},
		[81216] = {
			["isChanneled"] = false,
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43391,
		},
		[59367] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Krik'thir the Gatewatcher",
			["npcID"] = 28684,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[59431] = {
			["encounterName"] = "Anub'arak",
			["type"] = "DEBUFF",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 218,
		},
		[53418] = {
			["encounterName"] = "Hadronox",
			["source"] = "Hadronox",
			["npcID"] = 28921,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 217,
		},
		[51499] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Worker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27961,
		},
		[78530] = {
			["isChanneled"] = false,
			["source"] = "Petrified Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11458,
		},
		[76611] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Zealot",
			["npcID"] = 39990,
		},
		[51755] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Coffer",
			["npcID"] = 17280,
		},
		[20800] = {
			["source"] = "Jergosh the Invoker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11518,
		},
		[83264] = {
			["isChanneled"] = false,
			["source"] = "Dark Ranger Velonara",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44637,
		},
		[10452] = {
			["isChanneled"] = false,
			["source"] = "Earthen Sculptor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7012,
		},
		[25054] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Inquisitor Whitemane",
			["npcID"] = 3977,
		},
		[79938] = {
			["isChanneled"] = false,
			["source"] = "Death's Step Putrifier",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45443,
		},
		[46190] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[76100] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1044,
		},
		[12611] = {
			["isChanneled"] = false,
			["source"] = "Dread Scryer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 47141,
		},
		[72390] = {
			["encounterName"] = "Falric",
			["source"] = "Falric",
			["npcID"] = 38112,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 841,
		},
		[76612] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Zealot",
			["npcID"] = 39990,
		},
		[75077] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Conflagration",
			["npcID"] = 39994,
		},
		[12739] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowy Attendant",
			["npcID"] = 47231,
		},
		[31707] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Water Elemental",
			["npcID"] = 510,
		},
		[10772] = {
			["isChanneled"] = false,
			["source"] = "Weegli Blastfuse",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7607,
		},
		[31803] = {
			["source"] = "Tarenar Sunstrike",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45445,
		},
		[80195] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Bruiser",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42692,
		},
		[72391] = {
			["encounterName"] = "Falric",
			["source"] = "Falric",
			["npcID"] = 38112,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 841,
		},
		[78660] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Executor of the Caliph",
			["npcID"] = 45928,
		},
		[80835] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Raging Crystal-walker",
			["npcID"] = 43373,
		},
		[58025] = {
			["source"] = "Twilight Element Warden",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 40017,
		},
		[93629] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["npcID"] = 46964,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1072,
		},
		[91838] = {
			["source"] = "Brainchomp",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[75590] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Sadist",
			["npcID"] = 39980,
		},
		[75846] = {
			["encounterName"] = "Karsh Steelbender",
			["type"] = "BUFF",
			["source"] = "Karsh Steelbender",
			["npcID"] = 39698,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1039,
		},
		[46191] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[50541] = {
			["isChanneled"] = false,
			["source"] = "Lynda",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3250,
		},
		[58921] = {
			["source"] = "Father Kamaros",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 31279,
		},
		[81220] = {
			["isChanneled"] = false,
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43391,
		},
		[48878] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 373,
		},
		[32731] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spitebone Flayer",
			["npcID"] = 47146,
		},
		[96189] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shattered Sun Marksman",
			["npcID"] = 24938,
		},
		[59433] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 218,
		},
		[22592] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Princess Theradras",
			["npcID"] = 12201,
		},
		[72393] = {
			["encounterName"] = "Falric",
			["source"] = "Falric",
			["npcID"] = 38112,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 841,
		},
		[84931] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["npcID"] = 40825,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1046,
		},
		[49710] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Gutripper",
			["npcID"] = 26641,
		},
		[11428] = {
			["isChanneled"] = false,
			["source"] = "Unliving Mossflayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11291,
		},
		[33462] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stormwind Mage",
			["npcID"] = 18949,
		},
		[49966] = {
			["isChanneled"] = false,
			["source"] = "Monkey",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43417,
		},
		[15586] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Priest",
			["npcID"] = 10423,
		},
		[25055] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Enchanter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9452,
		},
		[15618] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Furious Hyjal Warden",
			["npcID"] = 43427,
		},
		[46192] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Priestess Delrissa",
			["npcID"] = 24560,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[13619] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Twilight's Hammer Torturer",
			["npcID"] = 8912,
		},
		[54508] = {
			["source"] = "Chiniltom",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[78535] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Phantasm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11475,
		},
		[34358] = {
			["isChanneled"] = false,
			["source"] = "Sunseeker Chemist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19486,
		},
		[52909] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Librarian Garren",
			["npcID"] = 25291,
		},
		[34550] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["npcID"] = 17975,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1926,
		},
		[5884] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hate Shrieker",
			["npcID"] = 8541,
		},
		[7947] = {
			["isChanneled"] = false,
			["source"] = "Deviate Viper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5755,
		},
		[53549] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Disciple of Frost",
			["npcID"] = 28490,
		},
		[11876] = {
			["isChanneled"] = false,
			["source"] = "Ironaya",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7228,
		},
		[11892] = {
			["isChanneled"] = false,
			["source"] = "Grimlok",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4854,
		},
		[49711] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Handler",
			["npcID"] = 26637,
		},
		[81095] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Red Mist",
			["npcID"] = 43370,
		},
		[33463] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Undercity Mage",
			["npcID"] = 18971,
		},
		[11972] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spitebone Guardian",
			["npcID"] = 47145,
		},
		[9941] = {
			["isChanneled"] = false,
			["source"] = "Obsidian Sentinel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7023,
		},
		[75722] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1045,
		},
		[14099] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stitched Horror",
			["npcID"] = 8543,
		},
		[46193] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Priestess Delrissa",
			["npcID"] = 24560,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[33975] = {
			["isChanneled"] = false,
			["source"] = "Instructor Galford",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10811,
		},
		[76234] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["npcID"] = 40788,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1046,
		},
		[72268] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tortured Rifleman",
			["npcID"] = 38176,
		},
		[10101] = {
			["isChanneled"] = false,
			["source"] = "Willey Hopebreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10997,
		},
		[95169] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Colossal Gyreworm",
			["npcID"] = 44258,
		},
		[34359] = {
			["isChanneled"] = false,
			["source"] = "Sunseeker Chemist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19486,
		},
		[8147] = {
			["isChanneled"] = false,
			["source"] = "Lord Pythas",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3670,
		},
		[34551] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["npcID"] = 17975,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1926,
		},
		[30621] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nethervine Inciter",
			["npcID"] = 19511,
		},
		[81608] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Stone Trogg Earthrager",
			["npcID"] = 43616,
		},
		[413174] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Guardian",
			["npcID"] = 26620,
		},
		[10277] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkspear Axe Thrower",
			["npcID"] = 18970,
		},
		[78154] = {
			["source"] = "Earthguard Sentinel",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 42792,
		},
		[8262] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Sage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4518,
		},
		[76363] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unstable Corruption",
			["npcID"] = 40923,
		},
		[86726] = {
			["isChanneled"] = false,
			["source"] = "Randolph Moloch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46383,
		},
		[12420] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thuzadin Necromancer",
			["npcID"] = 10400,
		},
		[22817] = {
			["source"] = "Guard Fengus",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14321,
		},
		[79050] = {
			["encounterName"] = "High Priestess Azil",
			["source"] = "High Priestess Azil",
			["encounterID"] = 1057,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42333,
		},
		[8374] = {
			["isChanneled"] = false,
			["source"] = "Ironaya",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7228,
		},
		[22945] = {
			["isChanneled"] = false,
			["source"] = "Arcane Torrent",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14399,
		},
		[67280] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "High Commander Halford Wyrmbane",
			["npcID"] = 34924,
		},
		[6268] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lashtail Raptor",
			["npcID"] = 686,
		},
		[90309] = {
			["isChanneled"] = false,
			["source"] = "Devilsaur",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6498,
		},
		[44531] = {
			["isChanneled"] = false,
			["source"] = "Captured Lashtail Hatchling",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42870,
		},
		[34616] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nethervine Inciter",
			["npcID"] = 19511,
		},
		[27615] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Kagani Nightstrike",
			["npcID"] = 24557,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[1604] = {
			["source"] = "Shifty Thief",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 46381,
		},
		[47346] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
		},
		[57645] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Twisted Visage",
			["npcID"] = 30623,
		},
		[15043] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gold Mage",
			["npcID"] = 32341,
		},
		[77645] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Burning Blade Augur",
			["npcID"] = 4663,
		},
		[83914] = {
			["encounterName"] = "Ozumat",
			["source"] = "Vicious Mindlasher",
			["npcID"] = 44715,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1047,
		},
		[86729] = {
			["isChanneled"] = false,
			["source"] = "Randolph Moloch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46383,
		},
		[76622] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bellows Slave",
			["npcID"] = 40084,
		},
		[38391] = {
			["isChanneled"] = false,
			["source"] = "Searing Destroyer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46260,
		},
		[34361] = {
			["isChanneled"] = false,
			["source"] = "Sunseeker Botanist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18422,
		},
		[34809] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodwarder Mender",
			["npcID"] = 19633,
		},
		[79949] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Earthmender Norsala",
			["npcID"] = 43503,
		},
		[47283] = {
			["source"] = "Kupfip",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 416,
		},
		[13444] = {
			["isChanneled"] = false,
			["source"] = "Skeletal Highborne",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11476,
		},
		[22818] = {
			["source"] = "Guard Mol'dar",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14326,
		},
		[22914] = {
			["isChanneled"] = false,
			["source"] = "Illyanna Ravenoak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11488,
		},
		[22946] = {
			["isChanneled"] = false,
			["source"] = "Arcane Torrent",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14399,
		},
		[15587] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Cleric",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9449,
		},
		[85835] = {
			["isChanneled"] = false,
			["source"] = "Diseased Wolf",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1817,
		},
		[6788] = {
			["encounterName"] = "Priestess Delrissa",
			["type"] = "DEBUFF",
			["source"] = "Priestess Delrissa",
			["npcID"] = 24560,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1895,
		},
		[15667] = {
			["isChanneled"] = false,
			["source"] = "Putridus Satyr",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11790,
		},
		[34170] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunseeker Geomancer",
			["npcID"] = 18420,
		},
		[44533] = {
			["encounterName"] = "Selin Fireheart",
			["source"] = "Wretched Skulker",
			["npcID"] = 24688,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1897,
		},
		[68820] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["npcID"] = 36502,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 831,
		},
		[17253] = {
			["isChanneled"] = false,
			["source"] = "Járnviðr",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30164,
		},
		[55216] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ymirjar Element Shaper",
			["npcID"] = 31267,
		},
		[9734] = {
			["isChanneled"] = false,
			["source"] = "Murta Grimgut",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7608,
		},
		[17445] = {
			["isChanneled"] = false,
			["source"] = "Risen Hammersmith",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11120,
		},
		[90314] = {
			["isChanneled"] = false,
			["source"] = "Fox",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45335,
		},
		[9798] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Irradiated Pillager",
			["npcID"] = 6329,
		},
		[86604] = {
			["isChanneled"] = false,
			["source"] = "Hogger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46254,
		},
		[1742] = {
			["isChanneled"] = false,
			["source"] = "tummalaine",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 683,
		},
		[47668] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scourge Brute",
			["npcID"] = 26623,
		},
		[32062] = {
			["isChanneled"] = false,
			["source"] = "Antu'sul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8127,
		},
		[35706] = {
			["source"] = "Chiniltom",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[21987] = {
			["isChanneled"] = false,
			["source"] = "Whip Lasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13022,
		},
		[7068] = {
			["isChanneled"] = false,
			["source"] = "Anguished Dead",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6426,
		},
		[76242] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["type"] = "BUFF",
			["source"] = "Ascendant Lord Obsidius",
			["npcID"] = 39705,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1036,
		},
		[44406] = {
			["isChanneled"] = false,
			["source"] = "Brightscale Wyrm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24761,
		},
		[388128] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Pebble",
			["npcID"] = 194870,
		},
		[44534] = {
			["encounterName"] = "Selin Fireheart",
			["source"] = "Wretched Bruiser",
			["npcID"] = 24689,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1897,
		},
		[40504] = {
			["isChanneled"] = false,
			["source"] = "Razorlash",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12258,
		},
		[24450] = {
			["isChanneled"] = false,
			["source"] = "Mietze",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3415,
		},
		[3583] = {
			["source"] = "Shifty Thief",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 46381,
		},
		[51507] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Controller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27966,
		},
		[388132] = {
			["source"] = "Pebble",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194870,
		},
		[78802] = {
			["isChanneled"] = false,
			["source"] = "Hydromancer Velratha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7795,
		},
		[14516] = {
			["isChanneled"] = false,
			["source"] = "Riverpaw Slayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46249,
		},
		[3639] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Soldier",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4286,
		},
		[16838] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11472,
		},
		[25058] = {
			["isChanneled"] = false,
			["source"] = "Charlga Razorflank",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4421,
		},
		[75732] = {
			["encounterName"] = "Corla, Herald of Twilight",
			["source"] = "Corla, Herald of Twilight",
			["encounterID"] = 1038,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39679,
		},
		[65753] = {
			["source"] = "Tonga's Eyes",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 34615,
		},
		[388135] = {
			["isChanneled"] = false,
			["source"] = "Pebble",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194870,
		},
		[76500] = {
			["isChanneled"] = false,
			["source"] = "Twilight Sadist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39980,
		},
		[76628] = {
			["encounterName"] = "Beauty",
			["source"] = "Lucky",
			["npcID"] = 40008,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1037,
		},
		[80850] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thuzadin Necromancer",
			["npcID"] = 10400,
		},
		[8599] = {
			["isChanneled"] = false,
			["source"] = "Bloodscalp Axe Thrower",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 694,
		},
		[50868] = {
			["encounterName"] = "Krystallus",
			["source"] = "Krystallus",
			["encounterID"] = 563,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27977,
		},
		[69080] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Soulguard Bonecaster",
			["npcID"] = 36564,
		},
		[51491] = {
			["isChanneled"] = false,
			["source"] = "Unrelenting Construct",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27971,
		},
		[87759] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Executor of the Caliph",
			["npcID"] = 45928,
		},
		[15571] = {
			["source"] = "Devilsaur",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 6498,
		},
		[16509] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Foreman Thaldrin",
			["npcID"] = 31399,
		},
		[14868] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Guzzling Patron",
			["npcID"] = 9547,
		},
		[17141] = {
			["isChanneled"] = false,
			["source"] = "Risen Priest",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10423,
		},
		[8275] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Beastmaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4532,
		},
		[5413] = {
			["isChanneled"] = false,
			["source"] = "Spewed Larva",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13533,
		},
		[59696] = {
			["isChanneled"] = false,
			["source"] = "Proto-Drake Handler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24082,
		},
		[86736] = {
			["isChanneled"] = false,
			["source"] = "Hogger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46254,
		},
		[58729] = {
			["source"] = "Taunka Spirit Guide",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 31841,
		},
		[30931] = {
			["isChanneled"] = false,
			["source"] = "Aggem Thorncurse",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4424,
		},
		[9438] = {
			["isChanneled"] = false,
			["source"] = "Arcanist Doan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6487,
		},
		[48400] = {
			["encounterName"] = "Prince Keleseth",
			["type"] = "DEBUFF",
			["source"] = "Frost Tomb",
			["encounterID"] = 571,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 23965,
		},
		[10341] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Irradiated Slime",
			["npcID"] = 6218,
		},
		[16170] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gordok Mage-Lord",
			["npcID"] = 11444,
		},
		[10966] = {
			["isChanneled"] = false,
			["source"] = "Noxxion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13282,
		},
		[33661] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Elder Snapjaw Crocolisk",
			["npcID"] = 2635,
		},
		[50285] = {
			["isChanneled"] = false,
			["source"] = "Kringo",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3068,
		},
		[77773] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Scryer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4293,
		},
		[52174] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kor'kron Elite",
			["npcID"] = 14304,
		},
		[4971] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Totemic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4440,
		},
		[69526] = {
			["source"] = "Wind Rider Gorsch",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 36902,
		},
		[93697] = {
			["encounterName"] = "Lord Walden",
			["source"] = "Lord Walden",
			["npcID"] = 46963,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1073,
		},
		[82611] = {
			["isChanneled"] = false,
			["source"] = "Sauranok the Mystic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44120,
		},
		[24259] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Nheemon",
			["npcID"] = 417,
		},
		[11085] = {
			["isChanneled"] = false,
			["source"] = "Electrocutioner 6000",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6235,
		},
		[15284] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nethervine Reaper",
			["npcID"] = 19512,
		},
		[80467] = {
			["encounterName"] = "Ozruk",
			["source"] = "Ozruk",
			["encounterID"] = 1058,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42188,
		},
		[79002] = {
			["encounterName"] = "High Priestess Azil",
			["source"] = "High Priestess Azil",
			["encounterID"] = 1057,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42333,
		},
		[9143] = {
			["isChanneled"] = false,
			["source"] = "Tinkerer Gizlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13601,
		},
		[5605] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodscalp Witch Doctor",
			["npcID"] = 660,
		},
		[82858] = {
			["encounterName"] = "High Priestess Azil",
			["source"] = "High Priestess Azil",
			["encounterID"] = 1057,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42333,
		},
		[87761] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Executor of the Caliph",
			["npcID"] = 45928,
		},
		[85842] = {
			["isChanneled"] = false,
			["source"] = "Hulking Plaguebear",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44482,
		},
		[80279] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Rift Conjurer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42691,
		},
		[65628] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Captured Razormane",
			["npcID"] = 34523,
		},
		[53517] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bonesacek",
			["npcID"] = 19349,
		},
		[59357] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Anub'ar Shadowcaster",
			["npcID"] = 28733,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[23768] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sayge",
			["npcID"] = 14822,
		},
		[23600] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Warrior",
			["npcID"] = 32321,
		},
		[16583] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Foreman Marcrid",
			["npcID"] = 1844,
		},
		[52341] = {
			["isChanneled"] = false,
			["source"] = "Lightning Construct",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27972,
		},
		[13445] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gordok Mastiff",
			["npcID"] = 13036,
		},
		[22820] = {
			["source"] = "Guard Slip'kik",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14323,
		},
		[20805] = {
			["isChanneled"] = false,
			["source"] = "Lord Cobrahn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3669,
		},
		[80158] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Warbringer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42696,
		},
		[81463] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Earthshaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43537,
		},
		[15572] = {
			["isChanneled"] = false,
			["source"] = "Quilguard Champion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4623,
		},
		[87762] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Minister of Air",
			["npcID"] = 45930,
		},
		[75608] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Twilight Zealot",
			["npcID"] = 50284,
		},
		[15620] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darnassian Archer",
			["npcID"] = 18965,
		},
		[65629] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Captured Razormane",
			["npcID"] = 34523,
		},
		[75992] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Naz'jar Tempest Witch",
			["npcID"] = 40634,
		},
		[23379] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Bael'Gar",
			["npcID"] = 9016,
		},
		[36093] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Warrior",
			["npcID"] = 26635,
		},
		[14443] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Leprous Defender",
			["npcID"] = 6223,
		},
		[15716] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Decomposed Ghoul",
			["npcID"] = 31812,
		},
		[15732] = {
			["source"] = "Risen Battle Mage",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 10425,
		},
		[78807] = {
			["encounterName"] = "Ozruk",
			["source"] = "Ozruk",
			["encounterID"] = 1058,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42188,
		},
		[9775] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Irradiated Pillager",
			["npcID"] = 6329,
		},
		[15786] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Apoko",
			["npcID"] = 24553,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[93520] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["npcID"] = 46964,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1072,
		},
		[59611] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Overseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24085,
		},
		[13692] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodhound",
			["npcID"] = 8921,
		},
		[17139] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Darter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14398,
		},
		[59613] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Overseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24085,
		},
		[34814] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phase Hunter",
			["npcID"] = 18879,
		},
		[81439] = {
			["isChanneled"] = false,
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43391,
		},
		[16869] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Maleki the Pallid",
			["npcID"] = 10438,
		},
		[7964] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ezra Grimm",
			["npcID"] = 11058,
		},
		[59346] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anub'ar Crusher",
			["npcID"] = 28922,
		},
		[96847] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Toy Cart",
			["npcID"] = 52812,
		},
		[86740] = {
			["isChanneled"] = false,
			["source"] = "Rowdy Troublemaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46375,
		},
		[11894] = {
			["isChanneled"] = false,
			["source"] = "Antu'sul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8127,
		},
		[58506] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deathstalker Commander Belmont",
			["npcID"] = 47293,
		},
		[80983] = {
			["source"] = "Warlord Zaela",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 46897,
		},
		[32064] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Gamon",
			["npcID"] = 6466,
		},
		[15588] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phalanx",
			["npcID"] = 9502,
		},
		[11974] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Priest",
			["npcID"] = 32343,
		},
		[78903] = {
			["encounterName"] = "Ozruk",
			["source"] = "Ozruk",
			["encounterID"] = 1058,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42188,
		},
		[16100] = {
			["encounterName"] = "Krystallus",
			["source"] = "Hardened Steel Skycaller",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28580,
		},
		[75610] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Corla, Herald of Twilight",
			["npcID"] = 39679,
		},
		[54261] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Mage",
			["npcID"] = 32324,
		},
		[13589] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anvilrage Overseer",
			["npcID"] = 8889,
		},
		[4043] = {
			["isChanneled"] = false,
			["source"] = "Goblin Land Mine",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7527,
		},
		[87481] = {
			["isChanneled"] = false,
			["source"] = "Flame Ascendant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40709,
		},
		[80344] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Imp",
			["npcID"] = 43014,
		},
		[15507] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Golem Lord Argelmach",
			["npcID"] = 8983,
		},
		[53717] = {
			["isChanneled"] = false,
			["source"] = "Lady Alistra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29195,
		},
		[76634] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tainted Sentry",
			["npcID"] = 40925,
		},
		[44538] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ethereum Smuggler",
			["npcID"] = 24698,
		},
		[42972] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Strategist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23956,
		},
		[8148] = {
			["isChanneled"] = false,
			["source"] = "Lady Anacondra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3671,
		},
		[15530] = {
			["source"] = "Azure Magus",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26722,
		},
		[16324] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ravaged Cadaver",
			["npcID"] = 10381,
		},
		[22427] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Weaponsmith",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24080,
		},
		[51725] = {
			["isChanneled"] = false,
			["source"] = "Arcane Aberration",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11480,
		},
		[32736] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Warrior",
			["npcID"] = 32321,
		},
		[59694] = {
			["isChanneled"] = false,
			["source"] = "Proto-Drake Handler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24082,
		},
		[83861] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stonescale Matriarch",
			["npcID"] = 44148,
		},
		[18396] = {
			["isChanneled"] = false,
			["source"] = "Sandfury Shadowcaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5648,
		},
		[412964] = {
			["source"] = "Dragonflayer Ironhelm",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 23961,
		},
		[8264] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Seer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4519,
		},
		[11443] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thuzadin Shadowcaster",
			["npcID"] = 10398,
		},
		[14517] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Gallant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4287,
		},
		[57780] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bound Air Elemental",
			["npcID"] = 44885,
		},
		[52086] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Narjil",
			["npcID"] = 28729,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[8376] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Totemic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4440,
		},
		[59691] = {
			["isChanneled"] = false,
			["source"] = "Enslaved Proto-Drake",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24083,
		},
		[12470] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gold Shaman",
			["npcID"] = 32340,
		},
		[22917] = {
			["isChanneled"] = false,
			["source"] = "Magister Kalendris",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11487,
		},
		[6253] = {
			["encounterName"] = "King Dred",
			["source"] = "Risen Drakkari Handler",
			["npcID"] = 26637,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 373,
		},
		[83672] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ozumat",
			["npcID"] = 44566,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1047,
		},
		[53605] = {
			["isChanneled"] = false,
			["source"] = "Lady Alistra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29195,
		},
		[12550] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kurzen Medicine Man",
			["npcID"] = 940,
		},
		[79962] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nelur Lightsown",
			["npcID"] = 50150,
		},
		[21062] = {
			["source"] = "Putridus Satyr",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11790,
		},
		[80218] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Raz the Crazed",
			["npcID"] = 39670,
		},
		[82393] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ascendant Lord Obsidius",
			["npcID"] = 39705,
		},
		[440366] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Razik Chumpchanger",
			["npcID"] = 219980,
		},
		[76508] = {
			["isChanneled"] = false,
			["source"] = "Crazed Mage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39982,
		},
		[44475] = {
			["isChanneled"] = false,
			["source"] = "Sunblade Mage Guard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24683,
		},
		[46046] = {
			["isChanneled"] = false,
			["source"] = "Sunblade Physician",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24687,
		},
		[78939] = {
			["encounterName"] = "Ozruk",
			["source"] = "Ozruk",
			["encounterID"] = 1058,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42188,
		},
		[74973] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sister Goldskimmer",
			["npcID"] = 34692,
		},
		[16727] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "King Gordok",
			["npcID"] = 11501,
		},
		[12742] = {
			["isChanneled"] = false,
			["source"] = "Gordok Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11448,
		},
		[59362] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Webspinner",
			["npcID"] = 29335,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 217,
		},
		[86820] = {
			["isChanneled"] = false,
			["source"] = "Riverpaw Looter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46251,
		},
		[31713] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Protector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4292,
		},
		[33663] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earth Elemental Totem",
			["npcID"] = 15430,
		},
		[79963] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Nelur Lightsown",
			["npcID"] = 50150,
		},
		[398145] = {
			["source"] = "Flaakun",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 417,
		},
		[44977] = {
			["source"] = "Cult-Sworn Warlock",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44443,
		},
		[46033] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunblade Blood Knight",
			["npcID"] = 24684,
		},
		[79400] = {
			["isChanneled"] = false,
			["source"] = "Akasha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39964,
		},
		[76509] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Crazed Mage",
			["encounterID"] = 1040,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39982,
		},
		[15471] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crypt Crawler",
			["npcID"] = 10412,
		},
		[10887] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magistrate Barthilas",
			["npcID"] = 10435,
		},
		[15583] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blackbreath Crony",
			["npcID"] = 9541,
		},
		[51832] = {
			["isChanneled"] = false,
			["source"] = "Unrelenting Construct",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27971,
		},
		[59695] = {
			["isChanneled"] = false,
			["source"] = "Proto-Drake Handler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24082,
		},
		[8989] = {
			["isChanneled"] = false,
			["source"] = "Herod",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3975,
		},
		[15061] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "General Angerforge",
			["npcID"] = 9033,
		},
		[87768] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Minister of Air",
			["npcID"] = 45930,
		},
		[81096] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Red Mist",
			["npcID"] = 43370,
		},
		[6533] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodscalp Hunter",
			["npcID"] = 595,
		},
		[83796] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Verlok Shroomtender",
			["npcID"] = 43368,
		},
		[75998] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["npcID"] = 40633,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1045,
		},
		[36032] = {
			["encounterName"] = "Falric",
			["type"] = "DEBUFF",
			["source"] = "Mirror Image",
			["npcID"] = 47243,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 841,
		},
		[58867] = {
			["isChanneled"] = false,
			["source"] = "Spirit Wolf",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29264,
		},
		[74720] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mekgineer Thermaplugg",
			["npcID"] = 7800,
		},
		[80604] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tortolla",
			["npcID"] = 40999,
		},
		[9080] = {
			["isChanneled"] = false,
			["source"] = "Vicious Thug",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46379,
		},
		[13398] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Leprous Technician",
			["npcID"] = 6222,
		},
		[6605] = {
			["isChanneled"] = false,
			["source"] = "Plaguebat",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8600,
		},
		[9128] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mosh'Ogg Lord",
			["npcID"] = 680,
		},
		[15285] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phalanx",
			["npcID"] = 9502,
		},
		[13446] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ravaged Cadaver",
			["npcID"] = 10381,
		},
		[55095] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["type"] = "DEBUFF",
			["source"] = "Rune Weapon",
			["npcID"] = 27893,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1046,
		},
		[6685] = {
			["isChanneled"] = false,
			["source"] = "Shadowforge Sharpshooter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7290,
		},
		[85850] = {
			["source"] = "Instructor Malicia",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44442,
		},
		[15493] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anvilrage Marshal",
			["npcID"] = 8898,
		},
		[79965] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gidwin Goldbraids",
			["npcID"] = 45677,
		},
		[90328] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Schrodinger",
			["npcID"] = 33776,
		},
		[80221] = {
			["source"] = "Stonecore Bruiser",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 42692,
		},
		[20615] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Gold Warrior",
			["npcID"] = 32322,
		},
		[16553] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ghoul Ravener",
			["npcID"] = 10406,
		},
		[80605] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tortolla",
			["npcID"] = 40999,
		},
		[84037] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["npcID"] = 40792,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1047,
		},
		[57846] = {
			["isChanneled"] = false,
			["source"] = "Mosh'Ogg Brute",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1142,
		},
		[49722] = {
			["isChanneled"] = false,
			["source"] = "Enslaved Proto-Drake",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24083,
		},
		[11431] = {
			["isChanneled"] = false,
			["source"] = "Lord Pythas",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3670,
		},
		[93527] = {
			["encounterName"] = "Lord Walden",
			["source"] = "Lord Walden",
			["npcID"] = 46963,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1073,
		},
		[93655] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mekgineer Thermaplugg",
			["npcID"] = 7800,
		},
		[22950] = {
			["isChanneled"] = false,
			["source"] = "Immol'thar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11496,
		},
		[15589] = {
			["isChanneled"] = false,
			["source"] = "Prince Tortheldrin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11486,
		},
		[15605] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Golem Lord Argelmach",
			["npcID"] = 8983,
		},
		[76677] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Element Warden",
			["npcID"] = 40017,
		},
		[79966] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gidwin Goldbraids",
			["npcID"] = 45677,
		},
		[88282] = {
			["encounterName"] = "Altairus",
			["type"] = "DEBUFF",
			["source"] = "Air Current",
			["npcID"] = 47305,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1041,
		},
		[53608] = {
			["isChanneled"] = false,
			["source"] = "Cenarion Scout",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29220,
		},
		[17620] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Maleki the Pallid",
			["npcID"] = 10438,
		},
		[52537] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["type"] = "BUFF",
			["source"] = "Searing Totem",
			["npcID"] = 2523,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 216,
		},
		[76512] = {
			["source"] = "Mad Prisoner",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39985,
		},
		[11639] = {
			["isChanneled"] = false,
			["source"] = "Sandfury Acolyte",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8876,
		},
		[15749] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Guard Mol'dar",
			["npcID"] = 14326,
		},
		[44605] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sunblade Magister",
			["npcID"] = 24685,
		},
		[50810] = {
			["encounterName"] = "Krystallus",
			["source"] = "Krystallus",
			["encounterID"] = 563,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27977,
		},
		[5416] = {
			["isChanneled"] = false,
			["source"] = "Carrion Swarmer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13160,
		},
		[9672] = {
			["isChanneled"] = false,
			["source"] = "Skeletal Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10390,
		},
		[75361] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Salty Dog",
			["npcID"] = 41037,
		},
		[17353] = {
			["isChanneled"] = false,
			["source"] = "Risen Rifleman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11054,
		},
		[17434] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lord Aurius Rivendare",
			["npcID"] = 45412,
		},
		[76575] = {
			["source"] = "Evolved Twilight Zealot",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39987,
		},
		[79967] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gidwin Goldbraids",
			["npcID"] = 45677,
		},
		[76001] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1045,
		},
		[69056] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Soulguard Watchman",
			["npcID"] = 36478,
		},
		[72163] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phantom Mage",
			["npcID"] = 38172,
		},
		[86620] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hogger",
			["npcID"] = 46254,
		},
		[87771] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Servant of Asaad",
			["npcID"] = 45926,
		},
		[87622] = {
			["encounterName"] = "Asaad",
			["source"] = "Asaad",
			["npcID"] = 43875,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1042,
		},
		[44520] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunblade Warlock",
			["npcID"] = 24686,
		},
		[17435] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lord Aurius Rivendare",
			["npcID"] = 45412,
		},
		[83457] = {
			["source"] = "Zen'Kiki",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44269,
		},
		[54131] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Wolf",
			["npcID"] = 2959,
		},
		[413265] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkweb Recluse",
			["npcID"] = 26625,
		},
		[4974] = {
			["isChanneled"] = false,
			["source"] = "Unliving Mossflayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11291,
		},
		[87772] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Servant of Asaad",
			["npcID"] = 45926,
		},
		[35778] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunfury Magister",
			["npcID"] = 18855,
		},
		[75746] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Erunak Stonespeaker",
			["npcID"] = 40601,
		},
		[79968] = {
			["source"] = "Gidwin Goldbraids",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45431,
		},
		[87723] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Grounding Field",
			["npcID"] = 47085,
		},
		[82137] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["encounterID"] = 1040,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39665,
		},
		[59018] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wretched Belcher",
			["npcID"] = 26624,
		},
		[10072] = {
			["isChanneled"] = false,
			["source"] = "Obsidian Sentinel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7023,
		},
		[31601] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crypt Crawler",
			["npcID"] = 10412,
		},
		[77918] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Erunak Stonespeaker",
			["npcID"] = 41777,
		},
		[12167] = {
			["isChanneled"] = false,
			["source"] = "Riverpaw Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46252,
		},
		[72326] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowy Mercenary",
			["npcID"] = 38177,
		},
		[20296] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Evoker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4289,
		},
		[75447] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dave",
			["npcID"] = 33776,
		},
		[89753] = {
			["isChanneled"] = false,
			["source"] = "Veegoril",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17252,
		},
		[69222] = {
			["encounterName"] = "Escaped from Arthas",
			["source"] = "Frostsworn General",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 36723,
		},
		[81632] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Opal Stonethrower",
			["npcID"] = 43586,
		},
		[7165] = {
			["isChanneled"] = false,
			["source"] = "Overlord Ramtusk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4420,
		},
		[88029] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wild Vortex",
			["npcID"] = 45912,
		},
		[95826] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fort Livingston Guard",
			["npcID"] = 51533,
		},
		[16458] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plague Ghoul",
			["npcID"] = 42975,
		},
		[35011] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scourge Brute",
			["npcID"] = 26623,
		},
		[13748] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jungle Stalker",
			["npcID"] = 687,
		},
		[22695] = {
			["isChanneled"] = false,
			["source"] = "Petrified Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14303,
		},
		[12039] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Abbot",
			["npcID"] = 4303,
		},
		[22876] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wandering Eye of Kilrogg",
			["npcID"] = 14386,
		},
		[88010] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wild Vortex",
			["npcID"] = 45912,
		},
		[49724] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Commander",
			["npcID"] = 27431,
		},
		[8361] = {
			["isChanneled"] = false,
			["source"] = "Charlga Razorflank",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4421,
		},
		[8377] = {
			["source"] = "Earthgrab Totem",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 6066,
		},
		[22919] = {
			["isChanneled"] = false,
			["source"] = "Magister Kalendris",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11487,
		},
		[33860] = {
			["isChanneled"] = false,
			["source"] = "Risen Battle Mage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10425,
		},
		[61685] = {
			["isChanneled"] = false,
			["source"] = "Pumba",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42719,
		},
		[72422] = {
			["encounterName"] = "Falric",
			["source"] = "Falric",
			["npcID"] = 38112,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 841,
		},
		[12551] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Weapon Technician",
			["npcID"] = 8920,
		},
		[5262] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Burning Blade Fanatic",
			["npcID"] = 3197,
		},
		[32022] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Blaithe",
			["npcID"] = 41084,
		},
		[93863] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Rethilgore",
			["npcID"] = 50834,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1070,
		},
		[80354] = {
			["source"] = "Unknown",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 24026,
		},
		[76516] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gilgoblin Hunter",
			["npcID"] = 40935,
		},
		[80610] = {
			["source"] = "Razgar",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 43239,
		},
		[87726] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Grounding Field",
			["npcID"] = 47085,
		},
		[17162] = {
			["isChanneled"] = false,
			["source"] = "Risen Conjuror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10419,
		},
		[17194] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodwarder Mender",
			["npcID"] = 19633,
		},
		[17405] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Balnazzar",
			["npcID"] = 10813,
		},
		[79203] = {
			["source"] = "Marion Wormwing",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 41112,
		},
		[12743] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Infernal Warbringer",
			["npcID"] = 19261,
		},
		[21787] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Thessala Hydra",
			["npcID"] = 12207,
		},
		[14822] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Guzzling Patron",
			["npcID"] = 9547,
		},
		[27621] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Apoko",
			["npcID"] = 24553,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[70150] = {
			["encounterName"] = "Escaped from Arthas",
			["source"] = "Raging Ghoul",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 36940,
		},
		[14870] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Hammered Patron",
			["npcID"] = 9554,
		},
		[78801] = {
			["isChanneled"] = false,
			["source"] = "Hydromancer Velratha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7795,
		},
		[76133] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["npcID"] = 40792,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1047,
		},
		[35076] = {
			["source"] = "A'dal",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 18481,
		},
		[79971] = {
			["isChanneled"] = false,
			["source"] = "Tarenar Sunstrike",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45445,
		},
		[75907] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["npcID"] = 40633,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1045,
		},
		[10252] = {
			["isChanneled"] = false,
			["source"] = "Archaedas",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2748,
		},
		[87722] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Grounding Field",
			["npcID"] = 47085,
		},
		[7159] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Stalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6035,
		},
		[21832] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Princess Theradras",
			["npcID"] = 12201,
		},
		[3621] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skullsplitter Hunter",
			["npcID"] = 669,
		},
		[76820] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Spiritmender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41139,
		},
		[93707] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["npcID"] = 46964,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1072,
		},
		[8281] = {
			["isChanneled"] = false,
			["source"] = "Greater Kraul Bat",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4539,
		},
		[17307] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ramstein the Gorger",
			["npcID"] = 10439,
		},
		[88032] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wild Vortex",
			["npcID"] = 45912,
		},
		[79972] = {
			["isChanneled"] = false,
			["source"] = "Tarenar Sunstrike",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45445,
		},
		[32323] = {
			["isChanneled"] = false,
			["source"] = "Bloodfalcon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18155,
		},
		[22120] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gamon",
			["npcID"] = 6466,
		},
		[25025] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "War Guardian",
			["npcID"] = 44118,
		},
		[52540] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Anub'ar Skirmisher",
			["npcID"] = 28734,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[7164] = {
			["isChanneled"] = false,
			["source"] = "Quilguard Champion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4623,
		},
		[9081] = {
			["isChanneled"] = false,
			["source"] = "Shadowforge Darkcaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4848,
		},
		[76484] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Twilight Torturer",
			["encounterID"] = 1040,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39978,
		},
		[8985] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Conjuror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4297,
		},
		[59001] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Handler",
			["npcID"] = 26637,
		},
		[7645] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Inquisitor Whitemane",
			["npcID"] = 3977,
		},
		[48894] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Shaman",
			["npcID"] = 26639,
		},
		[18328] = {
			["isChanneled"] = false,
			["source"] = "Argent Sentry",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 51986,
		},
		[22127] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunseeker Herbalist",
			["npcID"] = 19508,
		},
		[90363] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44425,
		},
		[34821] = {
			["encounterName"] = "Commander Sarannis",
			["source"] = "Bloodwarder Steward",
			["encounterID"] = 1925,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18404,
		},
		[16427] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Crypt Beast",
			["npcID"] = 10413,
		},
		[9257] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Commander Mograine",
			["npcID"] = 3976,
		},
		[87474] = {
			["encounterName"] = "Asaad",
			["type"] = "BUFF",
			["source"] = "Grounding Field",
			["npcID"] = 47000,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1042,
		},
		[72169] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phantom Mage",
			["npcID"] = 38172,
		},
		[16555] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Blighted Surge",
			["npcID"] = 8519,
		},
		[16587] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Vile Tutor",
			["npcID"] = 8548,
		},
		[32418] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Dark Assassin",
			["npcID"] = 46202,
		},
		[16798] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hearthsinger Forresten",
			["npcID"] = 10558,
		},
		[3391] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thessala Hydra",
			["npcID"] = 12207,
		},
		[22856] = {
			["source"] = "Guard Slip'kik",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14323,
		},
		[22888] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Overlord Runthak",
			["npcID"] = 173758,
		},
		[22920] = {
			["isChanneled"] = false,
			["source"] = "Prince Tortheldrin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11486,
		},
		[90337] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "BOMBACLAT",
			["npcID"] = 48441,
		},
		[16843] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Seether",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11469,
		},
		[88080] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Whipping Wind",
			["npcID"] = 47238,
		},
		[9481] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Inquisitor Whitemane",
			["npcID"] = 3977,
		},
		[70080] = {
			["encounterName"] = "Escaped from Arthas",
			["source"] = "Risen Witch Doctor",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 36941,
		},
		[15654] = {
			["isChanneled"] = false,
			["source"] = "Magister Kalendris",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11487,
		},
		[64695] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Earthbind Totem",
			["npcID"] = 2630,
		},
		[44289] = {
			["encounterName"] = "Priestess Delrissa",
			["type"] = "DEBUFF",
			["source"] = "Kagani Nightstrike",
			["npcID"] = 24557,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1895,
		},
		[69052] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Soulguard Watchman",
			["npcID"] = 36478,
		},
		[76520] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gilgoblin Hunter",
			["npcID"] = 40935,
		},
		[11640] = {
			["isChanneled"] = false,
			["source"] = "Green Priest",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 32343,
		},
		[34794] = {
			["encounterName"] = "Commander Sarannis",
			["type"] = "DEBUFF",
			["source"] = "Commander Sarannis",
			["encounterID"] = 1925,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17976,
		},
		[53769] = {
			["isChanneled"] = false,
			["source"] = "Lady Alistra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29195,
		},
		[2649] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Raptor",
			["npcID"] = 3256,
		},
		[34785] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tempest-Forge Peacekeeper",
			["npcID"] = 18405,
		},
		[48895] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Shaman",
			["npcID"] = 26639,
		},
		[43650] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Dalronn the Controller",
			["encounterID"] = 573,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24201,
		},
		[87779] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Temple Adept",
			["npcID"] = 45935,
		},
		[61369] = {
			["encounterName"] = "Krystallus",
			["source"] = "Hardened Steel Berserker",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28579,
		},
		[59386] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Vrykul Skeleton",
			["encounterID"] = 571,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23970,
		},
		[13847] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anvilrage Soldier",
			["npcID"] = 8893,
		},
		[29765] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodwarder Protector",
			["npcID"] = 17993,
		},
		[72043] = {
			["source"] = "Maximillian of Northshire",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 38666,
		},
		[72171] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phantom Mage",
			["npcID"] = 38172,
		},
		[59706] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 575,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23954,
		},
		[68333] = {
			["isChanneled"] = false,
			["source"] = "Roxxik",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11017,
		},
		[59416] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 373,
		},
		[16006] = {
			["isChanneled"] = false,
			["source"] = "Revelosh",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6910,
		},
		[91088] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Corpse Eater",
			["npcID"] = 47134,
		},
		[21833] = {
			["isChanneled"] = false,
			["source"] = "Tinkerer Gizlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13601,
		},
		[14514] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Mage",
			["npcID"] = 32324,
		},
		[11976] = {
			["isChanneled"] = false,
			["source"] = "Spectral Defender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11289,
		},
		[51475] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Elementalist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27962,
		},
		[87780] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Temple Adept",
			["npcID"] = 45935,
		},
		[34557] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["npcID"] = 17975,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1926,
		},
		[12040] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Vile Tutor",
			["npcID"] = 8548,
		},
		[79976] = {
			["isChanneled"] = false,
			["source"] = "Tarenar Sunstrike",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45445,
		},
		[15744] = {
			["isChanneled"] = false,
			["source"] = "Searing Destroyer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46260,
		},
		[17156] = {
			["isChanneled"] = false,
			["source"] = "Ferra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14308,
		},
		[59638] = {
			["encounterName"] = "Falric",
			["source"] = "Mirror Image",
			["npcID"] = 31216,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 841,
		},
		[13341] = {
			["isChanneled"] = false,
			["source"] = "Enraged Fire Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46261,
		},
		[76522] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Evolved Twilight Zealot",
			["npcID"] = 39987,
		},
		[42702] = {
			["isChanneled"] = false,
			["source"] = "Tunneling Ghoul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24084,
		},
		[58875] = {
			["isChanneled"] = false,
			["source"] = "Spirit Wolf",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29264,
		},
		[15785] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Acolyte",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4515,
		},
		[70893] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17669,
		},
		[76497] = {
			["isChanneled"] = false,
			["source"] = "Twilight Sadist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39980,
		},
		[46604] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Mage",
			["npcID"] = 32324,
		},
		[69068] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Soulguard Adept",
			["npcID"] = 36620,
		},
		[80638] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scalding Rock Elemental",
			["npcID"] = 40229,
		},
		[34759] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["npcID"] = 17975,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1926,
		},
		[79849] = {
			["isChanneled"] = false,
			["source"] = "Moraka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46718,
		},
		[79977] = {
			["isChanneled"] = false,
			["source"] = "Tarenar Sunstrike",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45429,
		},
		[16460] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plagued Insect",
			["npcID"] = 10461,
		},
		[22857] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Captain Kromcrush",
			["npcID"] = 14325,
		},
		[59707] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 575,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23954,
		},
		[8282] = {
			["isChanneled"] = false,
			["source"] = "High Inquisitor Fairbanks",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4542,
		},
		[57724] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Unknown",
			["npcID"] = 29358,
		},
		[53694] = {
			["isChanneled"] = false,
			["source"] = "Lady Alistra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29195,
		},
		[43651] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Skarvald the Constructor",
			["encounterID"] = 573,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24200,
		},
		[59963] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 375,
		},
		[8362] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Acolyte",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4515,
		},
		[90361] = {
			["isChanneled"] = false,
			["source"] = "Mnemosyne",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 32517,
		},
		[50335] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Forsaken Flesh Ripper",
			["npcID"] = 44708,
		},
		[6254] = {
			["isChanneled"] = false,
			["source"] = "Skum",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3674,
		},
		[45525] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Warsong Hold Mage",
			["npcID"] = 25420,
		},
		[6270] = {
			["isChanneled"] = false,
			["source"] = "Muyoh",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3678,
		},
		[54216] = {
			["isChanneled"] = false,
			["source"] = "bakacaaz",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 683,
		},
		[48193] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Skarvald the Constructor",
			["encounterID"] = 573,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24200,
		},
		[3148] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skullsplitter Hunter",
			["npcID"] = 669,
		},
		[23145] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hönkähenki",
			["npcID"] = 15650,
		},
		[3606] = {
			["isChanneled"] = false,
			["source"] = "Searing Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2523,
		},
		[86738] = {
			["isChanneled"] = false,
			["source"] = "Vicious Thug",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46379,
		},
		[76524] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Evolved Twilight Zealot",
			["npcID"] = 39987,
		},
		[33554] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Justinius the Harbinger",
			["npcID"] = 18966,
		},
		[44547] = {
			["isChanneled"] = false,
			["source"] = "Sister of Torment",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24697,
		},
		[23337] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Furious Hyjal Warden",
			["npcID"] = 43427,
		},
		[59004] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Crystal Handler",
			["npcID"] = 26627,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 371,
		},
		[19128] = {
			["isChanneled"] = false,
			["source"] = "Zaeldarr the Outcast",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12250,
		},
		[20735] = {
			["isChanneled"] = false,
			["source"] = "Illyanna Ravenoak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11488,
		},
		[82120] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "War Guardian",
			["npcID"] = 44118,
		},
		[15497] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sorcerous Skeleton",
			["npcID"] = 47140,
		},
		[22766] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Shadowmaw Panther",
			["npcID"] = 684,
		},
		[59014] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Soulmage",
			["npcID"] = 26636,
		},
		[83381] = {
			["isChanneled"] = false,
			["source"] = "Lagfarto",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42721,
		},
		[76502] = {
			["isChanneled"] = false,
			["source"] = "Twilight Sadist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39980,
		},
		[7812] = {
			["isChanneled"] = false,
			["source"] = "Hathjuk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[32914] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stone Drake",
			["npcID"] = 42522,
		},
		[59708] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 575,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23954,
		},
		[66290] = {
			["isChanneled"] = false,
			["source"] = "Balnazzar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10813,
		},
		[13338] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gibbering Ghoul",
			["npcID"] = 8531,
		},
		[44505] = {
			["encounterName"] = "Selin Fireheart",
			["source"] = "Wretched Husk",
			["npcID"] = 24690,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1897,
		},
		[8858] = {
			["isChanneled"] = false,
			["source"] = "Weegli Blastfuse",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7607,
		},
		[19514] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Swiftwing Shredder",
			["npcID"] = 20673,
		},
		[3248] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Defender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4442,
		},
		[79340] = {
			["encounterName"] = "High Priestess Azil",
			["source"] = "High Priestess Azil",
			["encounterID"] = 1057,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42333,
		},
		[15063] = {
			["isChanneled"] = false,
			["source"] = "Risen Conjuror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10419,
		},
		[51776] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Elementalist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27962,
		},
		[3264] = {
			["isChanneled"] = false,
			["source"] = "The Lone Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45450,
		},
		[49637] = {
			["encounterName"] = "Trollgore",
			["source"] = "Trollgore",
			["npcID"] = 26630,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[8986] = {
			["isChanneled"] = false,
			["source"] = "Haunting Phantasm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6427,
		},
		[93686] = {
			["encounterName"] = "Commander Springvale",
			["type"] = "BUFF",
			["source"] = "Commander Springvale",
			["npcID"] = 4278,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1071,
		},
		[30213] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "ThooZeras",
			["npcID"] = 17252,
		},
		[9034] = {
			["source"] = "Interrogator Vishas",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 3983,
		},
		[86633] = {
			["isChanneled"] = false,
			["source"] = "Lord Overheat",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46264,
		},
		[35361] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grove Walker",
			["npcID"] = 31228,
		},
		[77787] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Commander Mograine",
			["npcID"] = 3976,
		},
		[15241] = {
			["isChanneled"] = false,
			["source"] = "Risen Conjuror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10419,
		},
		[51484] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Theurgist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27963,
		},
		[38240] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unseen Servant",
			["npcID"] = 8538,
		},
		[72320] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ghostly Priest",
			["npcID"] = 38175,
		},
		[63227] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Stone Trogg Berserker",
			["npcID"] = 43228,
		},
		[53536] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Disciple of Frost",
			["npcID"] = 28490,
		},
		[34697] = {
			["encounterName"] = "Laj",
			["source"] = "Laj",
			["npcID"] = 17980,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1927,
		},
		[34761] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["npcID"] = 17975,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1926,
		},
		[59389] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Prince Keleseth",
			["encounterID"] = 571,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23953,
		},
		[16429] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thuzadin Shadowcaster",
			["npcID"] = 10398,
		},
		[8040] = {
			["isChanneled"] = false,
			["source"] = "Druid of the Fang",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3840,
		},
		[79384] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Speckled Sea Turtle",
			["npcID"] = 40223,
		},
		[8988] = {
			["isChanneled"] = false,
			["source"] = "Arcanist Doan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6487,
		},
		[69633] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Warden",
			["npcID"] = 36666,
		},
		[3356] = {
			["isChanneled"] = false,
			["source"] = "Shadowforge Geologist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7030,
		},
		[6726] = {
			["isChanneled"] = false,
			["source"] = "Shadowforge Relic Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4847,
		},
		[15495] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Doomforge Dragoon",
			["npcID"] = 8899,
		},
		[59965] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 375,
		},
		[6742] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mosh'Ogg Shaman",
			["npcID"] = 679,
		},
		[21067] = {
			["isChanneled"] = false,
			["source"] = "Poison Sprite",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12216,
		},
		[44178] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gold Mage",
			["npcID"] = 32341,
		},
		[15575] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wrath Hammer Construct",
			["npcID"] = 8907,
		},
		[52097] = {
			["encounterName"] = "Krystallus",
			["type"] = "BUFF",
			["source"] = "General Bjarngrim",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28586,
		},
		[85867] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Verlok Grubthumper",
			["npcID"] = 43367,
		},
		[9482] = {
			["isChanneled"] = false,
			["source"] = "Galgann Firehammer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7291,
		},
		[88170] = {
			["isChanneled"] = false,
			["source"] = "Turbulent Squall",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45924,
		},
		[15655] = {
			["encounterName"] = "Krystallus",
			["source"] = "Hardened Steel Reaver",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28578,
		},
		[93685] = {
			["encounterName"] = "Commander Springvale",
			["source"] = "Commander Springvale",
			["npcID"] = 4278,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1071,
		},
		[80750] = {
			["isChanneled"] = false,
			["source"] = "Balnazzar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10813,
		},
		[50498] = {
			["isChanneled"] = false,
			["source"] = "Lagfarto",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42721,
		},
		[52774] = {
			["encounterName"] = "Krystallus",
			["source"] = "Stormforged Mender",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28582,
		},
		[11641] = {
			["isChanneled"] = false,
			["source"] = "Sandfury Shadowhunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7246,
		},
		[17165] = {
			["isChanneled"] = false,
			["source"] = "Risen Inquisitor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10426,
		},
		[17197] = {
			["isChanneled"] = false,
			["source"] = "Carrion Devourer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8605,
		},
		[59006] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Shaman",
			["npcID"] = 26639,
		},
		[11542] = {
			["isChanneled"] = false,
			["source"] = "Gruzz Thinxlotz",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44194,
		},
		[17293] = {
			["isChanneled"] = false,
			["source"] = "Instructor Galford",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10811,
		},
		[93505] = {
			["encounterName"] = "Lord Walden",
			["source"] = "Lord Walden",
			["npcID"] = 46963,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1073,
		},
		[85740] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Zephyr",
			["npcID"] = 45991,
		},
		[34762] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["npcID"] = 17975,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1926,
		},
		[77808] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kor'kron Deathbringer",
			["npcID"] = 42946,
		},
		[88171] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Turbulent Squall",
			["npcID"] = 45924,
		},
		[13864] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Priest",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4517,
		},
		[19615] = {
			["source"] = "Pumba",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 42719,
		},
		[76561] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Evolved Twilight Zealot",
			["npcID"] = 39987,
		},
		[86636] = {
			["isChanneled"] = false,
			["source"] = "Lord Overheat",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46264,
		},
		[51586] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Spiritualist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28410,
		},
		[17279] = {
			["isChanneled"] = false,
			["source"] = "Willey Hopebreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10997,
		},
		[79821] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Captured Lashtail Hatchling",
			["npcID"] = 42840,
		},
		[87532] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowy Apparition",
			["npcID"] = 46954,
		},
		[22743] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11472,
		},
		[46155] = {
			["encounterName"] = "Selin Fireheart",
			["source"] = "Selin Fireheart",
			["encounterID"] = 1897,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24723,
		},
		[11977] = {
			["source"] = "Sira'kess Guardian",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 41586,
		},
		[12057] = {
			["isChanneled"] = false,
			["source"] = "Earthen Rocksmasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7011,
		},
		[52098] = {
			["encounterName"] = "Krystallus",
			["source"] = "General Bjarngrim",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28586,
		},
		[7054] = {
			["encounterName"] = "Commander Springvale",
			["source"] = "Tormented Officer",
			["npcID"] = 3873,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1071,
		},
		[28168] = {
			["isChanneled"] = false,
			["source"] = "Raging Construct",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27970,
		},
		[92266] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Irradiated Pillager",
			["npcID"] = 6329,
		},
		[22823] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Sorcerer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11470,
		},
		[81530] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Earthshaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43537,
		},
		[82415] = {
			["encounterName"] = "Corborus",
			["source"] = "Corborus",
			["encounterID"] = 1056,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43438,
		},
		[22187] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Chaplain",
			["npcID"] = 51660,
		},
		[86765] = {
			["isChanneled"] = false,
			["source"] = "Slag Fury",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46263,
		},
		[61684] = {
			["isChanneled"] = false,
			["source"] = "Unknown",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40064,
		},
		[12169] = {
			["isChanneled"] = false,
			["source"] = "Spectral Defender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11289,
		},
		[81008] = {
			["isChanneled"] = false,
			["source"] = "Crystalspawn Giant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42810,
		},
		[24394] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Marius",
			["npcID"] = 39385,
		},
		[34889] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hönkähenki",
			["npcID"] = 15650,
		},
		[79345] = {
			["encounterName"] = "High Priestess Azil",
			["source"] = "High Priestess Azil",
			["encounterID"] = 1057,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42333,
		},
		[14032] = {
			["isChanneled"] = false,
			["source"] = "Interrogator Vishas",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3983,
		},
		[63148] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Commander Mograine",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3976,
		},
		[16590] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Summoner",
			["npcID"] = 8551,
		},
		[59007] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ghoul Tormentor",
			["npcID"] = 26621,
		},
		[53314] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Elementalist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27962,
		},
		[78578] = {
			["source"] = "Illyanna Ravenoak",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11488,
		},
		[3600] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earthbind Totem",
			["npcID"] = 2630,
		},
		[3604] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Snapjaw Crocolisk",
			["npcID"] = 1152,
		},
		[53570] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Disciple of Frost",
			["npcID"] = 28490,
		},
		[10346] = {
			["isChanneled"] = false,
			["source"] = "Mechano-Tank",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6225,
		},
		[91213] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mindless Horror",
			["npcID"] = 47137,
		},
		[44604] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunblade Magister",
			["npcID"] = 24685,
		},
		[72166] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phantom Mage",
			["npcID"] = 38172,
		},
		[22859] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Captain Kromcrush",
			["npcID"] = 14325,
		},
		[76028] = {
			["encounterName"] = "Beauty",
			["source"] = "Beauty",
			["npcID"] = 39700,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1037,
		},
		[93675] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["npcID"] = 46964,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1072,
		},
		[69069] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Soulguard Bonecaster",
			["npcID"] = 36564,
		},
		[3644] = {
			["isChanneled"] = false,
			["source"] = "Kin'weelay",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2519,
		},
		[59108] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Deep Crawler",
			["npcID"] = 30279,
		},
		[76031] = {
			["encounterName"] = "Beauty",
			["source"] = "Beauty",
			["npcID"] = 39700,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1037,
		},
		[46150] = {
			["isChanneled"] = false,
			["source"] = "Coilskar Witch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24696,
		},
		[21068] = {
			["isChanneled"] = false,
			["source"] = "Corruptor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12217,
		},
		[69128] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Soulguard Animator",
			["npcID"] = 36516,
		},
		[9256] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Inquisitor Whitemane",
			["npcID"] = 3977,
		},
		[7342] = {
			["isChanneled"] = false,
			["source"] = "Deviate Lasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5055,
		},
		[52611] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Dalronn the Controller",
			["encounterID"] = 573,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24201,
		},
		[34828] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Braddok",
			["npcID"] = 42858,
		},
		[78835] = {
			["encounterName"] = "Ozruk",
			["source"] = "Ozruk",
			["encounterID"] = 1058,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42188,
		},
		[88175] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Turbulent Squall",
			["npcID"] = 45924,
		},
		[59008] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sinewy Wolf",
			["npcID"] = 31233,
		},
		[29544] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Green Warrior",
			["npcID"] = 32321,
		},
		[17294] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ezra Grimm",
			["npcID"] = 11058,
		},
		[53463] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 375,
		},
		[10730] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Peacekeeper Security Suit",
			["npcID"] = 6230,
		},
		[21707] = {
			["isChanneled"] = false,
			["source"] = "Noxxion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13282,
		},
		[86000] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hand of Gul'dan",
			["npcID"] = 46157,
		},
		[14872] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hurley Blackbreath",
			["npcID"] = 9537,
		},
		[24844] = {
			["source"] = "Unknown",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28477,
		},
		[6660] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodscalp Beastmaster",
			["npcID"] = 699,
		},
		[68054] = {
			["isChanneled"] = false,
			["source"] = "Jeeves",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35642,
		},
		[44320] = {
			["encounterName"] = "Selin Fireheart",
			["type"] = "BUFF",
			["source"] = "Fel Crystal",
			["npcID"] = 24722,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1897,
		},
		[51588] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Spiritualist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28410,
		},
		[12466] = {
			["isChanneled"] = false,
			["source"] = "Lord Overheat",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46264,
		},
		[49309] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gold Shaman",
			["npcID"] = 32340,
		},
		[76032] = {
			["encounterName"] = "Beauty",
			["source"] = "Beauty",
			["npcID"] = 39700,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1037,
		},
		[31290] = {
			["isChanneled"] = false,
			["source"] = "Riverpaw Poacher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46250,
		},
		[35399] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodwarder Protector",
			["npcID"] = 17993,
		},
		[10132] = {
			["isChanneled"] = false,
			["source"] = "Ancient Stone Keeper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7206,
		},
		[46151] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilskar Witch",
			["npcID"] = 24696,
		},
		[49978] = {
			["isChanneled"] = false,
			["source"] = "Splitclaw Skitterer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40685,
		},
		[85873] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plague Ravager",
			["npcID"] = 8520,
		},
		[17169] = {
			["isChanneled"] = false,
			["source"] = "Crypt Horror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8557,
		},
		[50245] = {
			["isChanneled"] = false,
			["source"] = "Unknown",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42715,
		},
		[8267] = {
			["source"] = "Rotting Agam'ar",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 4512,
		},
		[8150] = {
			["isChanneled"] = false,
			["source"] = "Mutanus the Devourer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3654,
		},
		[11082] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Electrocutioner 6000",
			["npcID"] = 6235,
		},
		[32330] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkweb Recluse",
			["npcID"] = 26625,
		},
		[34189] = {
			["isChanneled"] = false,
			["source"] = "Dark Ranger Marrah",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24137,
		},
		[86180] = {
			["isChanneled"] = false,
			["source"] = "Cult-Sworn Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44443,
		},
		[24331] = {
			["source"] = "Elder Stranglethorn Tiger",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1085,
		},
		[20297] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Frostskull Magus",
			["npcID"] = 31813,
		},
		[59009] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Bat Rider",
			["npcID"] = 26638,
		},
		[15288] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Twilight Emissary",
			["npcID"] = 8913,
		},
		[22744] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Apparition",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11471,
		},
		[32910] = {
			["encounterName"] = "Krystallus",
			["type"] = "BUFF",
			["source"] = "Hardened Steel Berserker",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28579,
		},
		[93423] = {
			["encounterName"] = "Baron Ashbury",
			["source"] = "Baron Ashbury",
			["npcID"] = 46962,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1069,
		},
		[76618] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Conflagration",
			["npcID"] = 39994,
		},
		[90355] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14020,
		},
		[22572] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gordok Brute",
			["npcID"] = 11441,
		},
		[80117] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gorged Gyreworm",
			["npcID"] = 42766,
		},
		[9275] = {
			["source"] = "Scarlet Torturer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 4306,
		},
		[53508] = {
			["isChanneled"] = false,
			["source"] = "Ravager",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 16934,
		},
		[82548] = {
			["isChanneled"] = false,
			["source"] = "Sauranok the Mystic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44120,
		},
		[76535] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gilgoblin Aquamage",
			["npcID"] = 40943,
		},
		[18670] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Landslide",
			["npcID"] = 12203,
		},
		[15496] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ghostly Cook",
			["npcID"] = 47232,
		},
		[59969] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 375,
		},
		[22860] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Captain Kromcrush",
			["npcID"] = 14325,
		},
		[12058] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mosh'Ogg Shaman",
			["npcID"] = 679,
		},
		[22924] = {
			["isChanneled"] = false,
			["source"] = "Tendris Warpwood",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11489,
		},
		[9435] = {
			["isChanneled"] = false,
			["source"] = "Arcanist Doan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6487,
		},
		[11647] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Inquisitor Fairbanks",
			["npcID"] = 4542,
		},
		[21057] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Theradrim Guardian",
			["npcID"] = 11784,
		},
		[7814] = {
			["isChanneled"] = false,
			["source"] = "Disaith",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1863,
		},
		[35917] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sunfury Astromancer",
			["npcID"] = 19643,
		},
		[54404] = {
			["source"] = "Unknown",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 22807,
		},
		[48583] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Skarvald the Constructor",
			["encounterID"] = 573,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24200,
		},
		[34254] = {
			["isChanneled"] = false,
			["source"] = "Sunseeker Botanist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18422,
		},
		[59010] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Death Knight",
			["npcID"] = 26830,
		},
		[29385] = {
			["isChanneled"] = false,
			["source"] = "Green Paladin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 32342,
		},
		[7870] = {
			["isChanneled"] = false,
			["source"] = "Kalanda",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1863,
		},
		[68895] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spiteful Apparition",
			["npcID"] = 36551,
		},
		[34202] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Frayer",
			["npcID"] = 18587,
		},
		[13737] = {
			["isChanneled"] = false,
			["source"] = "Scourge Champion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8529,
		},
		[68988] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["npcID"] = 36497,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 829,
		},
		[79351] = {
			["encounterName"] = "High Priestess Azil",
			["source"] = "High Priestess Azil",
			["encounterID"] = 1057,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42333,
		},
		[46028] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunblade Mage Guard",
			["npcID"] = 24683,
		},
		[27626] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Apoko",
			["npcID"] = 24553,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[87923] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gust Soldier",
			["npcID"] = 45477,
		},
		[76665] = {
			["encounterName"] = "Beauty",
			["source"] = "Lucky",
			["npcID"] = 40008,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1037,
		},
		[11802] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Iron Agent",
			["npcID"] = 6212,
		},
		[32911] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Summoned Windfury Totem",
			["npcID"] = 22897,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[34793] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tempest-Forge Peacekeeper",
			["npcID"] = 18405,
		},
		[72333] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowy Mercenary",
			["npcID"] = 38177,
		},
		[13903] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Ironforge Paladin",
			["npcID"] = 18986,
		},
		[15976] = {
			["source"] = "Razorlash",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 12258,
		},
		[11898] = {
			["isChanneled"] = false,
			["source"] = "Sandfury Blood Drinker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5649,
		},
		[53765] = {
			["isChanneled"] = false,
			["source"] = "Lady Alistra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29195,
		},
		[51496] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Shaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27965,
		},
		[75002] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Young Panther",
			["npcID"] = 683,
		},
		[21869] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Princess Theradras",
			["npcID"] = 12201,
		},
		[11642] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Adept",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4296,
		},
		[86771] = {
			["isChanneled"] = false,
			["source"] = "Rumbling Earth",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46262,
		},
		[30151] = {
			["isChanneled"] = false,
			["source"] = "Jhuushekor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17252,
		},
		[21069] = {
			["isChanneled"] = false,
			["source"] = "Vile Larva",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12218,
		},
		[8078] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "War Guardian",
			["npcID"] = 44118,
		},
		[46153] = {
			["encounterName"] = "Selin Fireheart",
			["source"] = "Selin Fireheart",
			["encounterID"] = 1897,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24723,
		},
		[88308] = {
			["encounterName"] = "Altairus",
			["source"] = "Altairus",
			["npcID"] = 43873,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1041,
		},
		[76026] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1044,
		},
		[75275] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Speckled Sea Turtle",
			["npcID"] = 40223,
		},
		[63619] = {
			["encounterName"] = "Falric",
			["source"] = "Shadowfiend",
			["npcID"] = 19668,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 841,
		},
		[52740] = {
			["encounterName"] = "Krystallus",
			["source"] = "Hardened Steel Berserker",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28579,
		},
		[76790] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Naz'jar Invader",
			["npcID"] = 39616,
		},
		[12170] = {
			["isChanneled"] = false,
			["source"] = "Sergeant Bly",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7604,
		},
		[8142] = {
			["isChanneled"] = false,
			["source"] = "Verdan the Everliving",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5775,
		},
		[59011] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Death Knight",
			["npcID"] = 26830,
		},
		[17735] = {
			["isChanneled"] = false,
			["source"] = "Hathjuk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[16790] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Theradrim Guardian",
			["npcID"] = 11784,
		},
		[20545] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Orgrimmar Shaman",
			["npcID"] = 18972,
		},
		[27613] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Kagani Nightstrike",
			["npcID"] = 24557,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[28858] = {
			["isChanneled"] = false,
			["source"] = "Ironbark Protector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11459,
		},
		[79865] = {
			["isChanneled"] = false,
			["source"] = "Marud",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 47247,
		},
		[22696] = {
			["source"] = "Petrified Guardian",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14303,
		},
		[36645] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Temperamental Rumbler",
			["npcID"] = 43480,
		},
		[59637] = {
			["encounterName"] = "Falric",
			["source"] = "Mirror Image",
			["npcID"] = 31216,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 841,
		},
		[61353] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Warp-Huntress Kula",
			["npcID"] = 32711,
		},
		[3636] = {
			["isChanneled"] = false,
			["source"] = "Jadespine Basilisk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4863,
		},
		[16592] = {
			["isChanneled"] = false,
			["source"] = "Shadowmage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8550,
		},
		[55749] = {
			["source"] = "Unknown",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11741,
		},
		[53766] = {
			["isChanneled"] = false,
			["source"] = "Lady Alistra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29195,
		},
		[3716] = {
			["isChanneled"] = false,
			["source"] = "Hathjuk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[8364] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Sorcerer",
			["npcID"] = 4294,
		},
		[95467] = {
			["source"] = "Lagfarto",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 42721,
		},
		[10666] = {
			["isChanneled"] = false,
			["source"] = "Earthen Custodian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7309,
		},
		[60227] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Strategist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23956,
		},
		[16740] = {
			["isChanneled"] = false,
			["source"] = "Stomper Kreeg",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14322,
		},
		[46026] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Apoko",
			["npcID"] = 24553,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[51819] = {
			["isChanneled"] = false,
			["source"] = "Raging Construct",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27970,
		},
		[88182] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Empyrean Assassin",
			["npcID"] = 45922,
		},
		[21070] = {
			["source"] = "Noxious Slime",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 12221,
		},
		[57984] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Greater Fire Elemental",
			["npcID"] = 15438,
		},
		[25228] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 417,
		},
		[72318] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ghostly Priest",
			["npcID"] = 38175,
		},
		[51587] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Spiritualist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28410,
		},
		[16430] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thuzadin Necromancer",
			["npcID"] = 10400,
		},
		[15795] = {
			["isChanneled"] = false,
			["source"] = "Sister of Celebras",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11794,
		},
		[3827] = {
			["isChanneled"] = false,
			["source"] = "Mosh'Ogg Witch Doctor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1144,
		},
		[76307] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["npcID"] = 40788,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1046,
		},
		[34187] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Sunseeker Channeler",
			["npcID"] = 19505,
		},
		[21390] = {
			["isChanneled"] = false,
			["source"] = "Lord Vyletongue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12236,
		},
		[34640] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunseeker Harvester",
			["npcID"] = 19509,
		},
		[76274] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["type"] = "BUFF",
			["source"] = "Ascendant Lord Obsidius",
			["npcID"] = 39705,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1036,
		},
		[75645] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Corla, Herald of Twilight",
			["npcID"] = 39679,
		},
		[88055] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Armored Mistral",
			["npcID"] = 45915,
		},
		[14873] = {
			["isChanneled"] = false,
			["source"] = "Shifty Thief",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46381,
		},
		[7074] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wailing Guardsman",
			["npcID"] = 3877,
		},
		[52773] = {
			["encounterName"] = "Krystallus",
			["source"] = "Stormforged Mender",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28582,
		},
		[70144] = {
			["encounterName"] = "Escaped from Arthas",
			["source"] = "Risen Witch Doctor",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 36941,
		},
		[69066] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Soulguard Adept",
			["npcID"] = 36620,
		},
		[6524] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Groundshaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4523,
		},
		[19695] = {
			["encounterName"] = "Baron Geddon",
			["source"] = "Baron Geddon",
			["npcID"] = 12056,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 668,
		},
		[32009] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fel Soldier",
			["npcID"] = 18944,
		},
		[44415] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Priest",
			["npcID"] = 32343,
		},
		[13704] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Priest",
			["npcID"] = 32343,
		},
		[95809] = {
			["source"] = "Unknown",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 21108,
		},
		[79356] = {
			["isChanneled"] = false,
			["source"] = "Slitherfin Eel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40855,
		},
		[19659] = {
			["encounterName"] = "Baron Geddon",
			["source"] = "Baron Geddon",
			["npcID"] = 12056,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 668,
		},
		[15979] = {
			["isChanneled"] = false,
			["source"] = "Arcane Aberration",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11480,
		},
		[114539] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Professor Thaddeus Paleo",
			["npcID"] = 14847,
		},
		[88056] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Armored Mistral",
			["npcID"] = 45915,
		},
		[88184] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Empyrean Assassin",
			["npcID"] = 45922,
		},
		[76030] = {
			["encounterName"] = "Beauty",
			["source"] = "Beauty",
			["npcID"] = 39700,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1037,
		},
		[44194] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Kael'thas Sunstrider",
			["npcID"] = 24664,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1894,
		},
		[70145] = {
			["encounterName"] = "Escaped from Arthas",
			["source"] = "Risen Witch Doctor",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 36941,
		},
		[56646] = {
			["isChanneled"] = false,
			["source"] = "Enraged Fire Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46261,
		},
		[31765] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Earthcaller Yevaa",
			["npcID"] = 42573,
		},
		[11131] = {
			["isChanneled"] = false,
			["source"] = "Gahz'rilla",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7273,
		},
		[54791] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Maleki the Pallid",
			["npcID"] = 10438,
		},
		[95332] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Horde Spirit Guide",
			["npcID"] = 45067,
		},
		[59013] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Soulmage",
			["npcID"] = 26636,
		},
		[80588] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gan'zulah",
			["npcID"] = 1061,
		},
		[15305] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Golem Lord Argelmach",
			["npcID"] = 8983,
		},
		[11975] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Enchanter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9452,
		},
		[50933] = {
			["encounterName"] = "Trollgore",
			["source"] = "Flesheating Ghoul",
			["npcID"] = 27871,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[17366] = {
			["isChanneled"] = false,
			["source"] = "Instructor Galford",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10811,
		},
		[59397] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Vrykul Skeleton",
			["encounterID"] = 571,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23970,
		},
		[22574] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gordok Captain",
			["npcID"] = 11445,
		},
		[28747] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Krik'thir the Gatewatcher",
			["npcID"] = 28684,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[44224] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Kael'thas Sunstrider",
			["npcID"] = 24664,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1894,
		},
		[50843] = {
			["encounterName"] = "Krystallus",
			["source"] = "Krystallus",
			["encounterID"] = 563,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27977,
		},
		[72321] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ghostly Priest",
			["npcID"] = 38175,
		},
		[58861] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spirit Wolf",
			["npcID"] = 29264,
		},
		[394449] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Risen Drakkari Warrior",
			["npcID"] = 26635,
		},
		[59909] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
		},
		[36705] = {
			["encounterName"] = "Warp Splinter",
			["source"] = "Warp Splinter",
			["npcID"] = 17977,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1929,
		},
		[20815] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Evoker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4289,
		},
		[81277] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Bloodworm",
			["npcID"] = 28017,
		},
		[93687] = {
			["encounterName"] = "Commander Springvale",
			["source"] = "Commander Springvale",
			["npcID"] = 4278,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1071,
		},
		[44163] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
		},
		[69203] = {
			["isChanneled"] = false,
			["source"] = "Ravenous Thresher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40219,
		},
		[87930] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gust Soldier",
			["npcID"] = 45477,
		},
		[88058] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Armored Mistral",
			["npcID"] = 45915,
		},
		[88186] = {
			["isChanneled"] = false,
			["source"] = "Empyrean Assassin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45922,
		},
		[21071] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Primordial Behemoth",
			["npcID"] = 12206,
		},
		[9532] = {
			["isChanneled"] = false,
			["source"] = "Druid of the Fang",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3840,
		},
		[72194] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Footman",
			["npcID"] = 38173,
		},
		[7965] = {
			["isChanneled"] = false,
			["source"] = "Lord Cobrahn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3669,
		},
		[17105] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wailing Banshee",
			["npcID"] = 10464,
		},
		[29419] = {
			["isChanneled"] = false,
			["source"] = "Tinkerer Gizlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13601,
		},
		[54792] = {
			["isChanneled"] = false,
			["source"] = "Crazed Mage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39982,
		},
		[17201] = {
			["isChanneled"] = false,
			["source"] = "Celebrian Dryad",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11793,
		},
		[13738] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Scytheclaw",
			["npcID"] = 26628,
		},
		[15801] = {
			["isChanneled"] = false,
			["source"] = "Revelosh",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6910,
		},
		[49639] = {
			["encounterName"] = "Trollgore",
			["source"] = "Trollgore",
			["npcID"] = 26630,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[34642] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunseeker Gene-Splicer",
			["npcID"] = 19507,
		},
		[77568] = {
			["isChanneled"] = false,
			["source"] = "Mad Prisoner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39985,
		},
		[76487] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Twilight Torturer",
			["encounterID"] = 1040,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39978,
		},
		[72426] = {
			["encounterName"] = "Falric",
			["source"] = "Falric",
			["npcID"] = 38112,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 841,
		},
		[3234] = {
			["isChanneled"] = false,
			["source"] = "Mossflayer Zombie",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11290,
		},
		[37685] = {
			["isChanneled"] = false,
			["source"] = "Twilight Nightblade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42707,
		},
		[51963] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Ebon Gargoyle",
			["npcID"] = 27829,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1045,
		},
		[16609] = {
			["source"] = "Thrall",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 4949,
		},
		[13895] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bael'Gar",
			["npcID"] = 9016,
		},
		[79975] = {
			["source"] = "Captured Lashtail Hatchling",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 42870,
		},
		[11899] = {
			["isChanneled"] = false,
			["source"] = "Sandfury Witch Doctor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5650,
		},
		[59910] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 371,
		},
		[86800] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Energized Geode",
			["npcID"] = 43254,
		},
		[93433] = {
			["isChanneled"] = false,
			["source"] = "LetoTheWorm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30422,
		},
		[76008] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40586,
		},
		[42648] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Wretched Fiend",
			["npcID"] = 24966,
		},
		[34355] = {
			["isChanneled"] = false,
			["source"] = "Sunseeker Researcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18421,
		},
		[15090] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Inquisitor Fairbanks",
			["npcID"] = 4542,
		},
		[46029] = {
			["isChanneled"] = false,
			["source"] = "Sunblade Blood Knight",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24684,
		},
		[90327] = {
			["isChanneled"] = false,
			["source"] = "Liboros",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29452,
		},
		[16554] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blighted Surge",
			["npcID"] = 8519,
		},
		[38033] = {
			["isChanneled"] = false,
			["source"] = "Lesser Water Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 691,
		},
		[50379] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scourge Reanimator",
			["npcID"] = 26626,
		},
		[53167] = {
			["isChanneled"] = false,
			["source"] = "Dark Rune Theurgist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27963,
		},
		[58127] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Servant of Asaad",
			["npcID"] = 45926,
		},
		[10092] = {
			["isChanneled"] = false,
			["source"] = "Sand Storm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7226,
		},
		[86881] = {
			["encounterName"] = "Corborus",
			["source"] = "Corborus",
			["encounterID"] = 1056,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43438,
		},
		[82531] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sauranok the Mystic",
			["npcID"] = 44120,
		},
		[79970] = {
			["isChanneled"] = false,
			["source"] = "Tarenar Sunstrike",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45445,
		},
		[59015] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Soulmage",
			["npcID"] = 26636,
		},
		[53607] = {
			["isChanneled"] = false,
			["source"] = "Cenarion Scout",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29220,
		},
		[16244] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hearthsinger Forresten",
			["npcID"] = 10558,
		},
		[16345] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wretched Belcher",
			["npcID"] = 26624,
		},
		[38801] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Rokmar the Crackler",
			["npcID"] = 17991,
		},
		[87933] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gust Soldier",
			["npcID"] = 45477,
		},
		[88061] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Armored Mistral",
			["npcID"] = 45915,
		},
		[22575] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gordok Captain",
			["npcID"] = 11445,
		},
		[90364] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 15370,
		},
		[49356] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 375,
		},
		[8269] = {
			["isChanneled"] = false,
			["source"] = "Herod",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3975,
		},
		[8285] = {
			["isChanneled"] = false,
			["source"] = "Agathelos the Raging",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4422,
		},
		[10348] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Leprous Technician",
			["npcID"] = 6222,
		},
		[414266] = {
			["isChanneled"] = false,
			["source"] = "Unknown",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17669,
		},
		[55817] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Unknown",
			["npcID"] = 416,
		},
		[84448] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Aeosera",
			["npcID"] = 43641,
		},
		[93435] = {
			["isChanneled"] = false,
			["source"] = "Unknown",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40064,
		},
		[12471] = {
			["isChanneled"] = false,
			["source"] = "Sandfury Shadowcaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5648,
		},
		[12491] = {
			["isChanneled"] = false,
			["source"] = "Antu'sul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8127,
		},
		[80780] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shrieking Banshee",
			["npcID"] = 10463,
		},
		[14518] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Commander Mograine",
			["npcID"] = 3976,
		},
		[46030] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunblade Blood Knight",
			["npcID"] = 24684,
		},
		[12555] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skeletal Berserker",
			["npcID"] = 10391,
		},
		[11902] = {
			["isChanneled"] = false,
			["source"] = "Gahz'rilla",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7273,
		},
		[59575] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Dalronn the Controller",
			["encounterID"] = 573,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24201,
		},
		[53434] = {
			["isChanneled"] = false,
			["source"] = "Urbarra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17280,
		},
		[72198] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Footman",
			["npcID"] = 38173,
		},
		[31403] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Centurion",
			["npcID"] = 4301,
		},
		[96134] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stone Drake",
			["npcID"] = 42522,
		},
		[86911] = {
			["encounterName"] = "Asaad",
			["source"] = "Asaad",
			["npcID"] = 43875,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1042,
		},
		[5320] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sergra Darkthorn",
			["npcID"] = 3338,
		},
		[81026] = {
			["isChanneled"] = false,
			["source"] = "Gnash",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40987,
		},
		[6146] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Sorcerer",
			["npcID"] = 4294,
		},
		[18327] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Baroness Anastari",
			["npcID"] = 10436,
		},
		[7399] = {
			["isChanneled"] = false,
			["source"] = "Mutanus the Devourer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3654,
		},
		[34644] = {
			["isChanneled"] = false,
			["source"] = "Greater Frayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19557,
		},
		[10732] = {
			["isChanneled"] = false,
			["source"] = "Leprous Technician",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6222,
		},
		[12795] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ragereaver Golem",
			["npcID"] = 8906,
		},
		[388134] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Pebble",
			["npcID"] = 194870,
		},
		[59446] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 218,
		},
		[16868] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Baroness Anastari",
			["npcID"] = 10436,
		},
		[76165] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["npcID"] = 40825,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1046,
		},
		[53515] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Hönkähenki",
			["npcID"] = 15650,
		},
		[12891] = {
			["source"] = "Shade of Eranikus",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 5709,
		},
		[16867] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Baroness Anastari",
			["npcID"] = 10436,
		},
		[88959] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Temple Adept",
			["npcID"] = 45935,
		},
		[85467] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Lurking Tempest",
			["npcID"] = 45704,
		},
		[21808] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Landslide",
			["npcID"] = 12203,
		},
		[49805] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scourge Reanimator",
			["npcID"] = 26626,
		},
		[43930] = {
			["source"] = "Dragonflayer Forge Master",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 24079,
		},
		[13953] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anvilrage Marshal",
			["npcID"] = 8898,
		},
		[34203] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Frayer",
			["npcID"] = 18587,
		},
		[59347] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anub'ar Crypt Fiend",
			["npcID"] = 29063,
		},
		[86574] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fungal Behemoth",
			["npcID"] = 42475,
		},
		[11020] = {
			["isChanneled"] = false,
			["source"] = "Sul'lithuz Sandcrawler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8095,
		},
		[88192] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Young Storm Dragon",
			["npcID"] = 45919,
		},
		[22878] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Netherwalker",
			["npcID"] = 14389,
		},
		[32065] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fungal Behemoth",
			["npcID"] = 42475,
		},
		[11084] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Electrocutioner 6000",
			["npcID"] = 6235,
		},
		[9053] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mosh'Ogg Spellcrafter",
			["npcID"] = 710,
		},
		[35760] = {
			["source"] = "Greater Bogstrok",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17817,
		},
		[5568] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Primordial Behemoth",
			["npcID"] = 12206,
		},
		[59687] = {
			["isChanneled"] = false,
			["source"] = "Ticking Time Bomb",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 32246,
		},
		[53334] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Anub'ar Necromancer",
			["npcID"] = 29064,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[59017] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scourge Reanimator",
			["npcID"] = 26626,
		},
		[34517] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Wizard",
			["npcID"] = 4300,
		},
		[69130] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Soulguard Animator",
			["npcID"] = 36516,
		},
		[76892] = {
			["isChanneled"] = false,
			["source"] = "Zin'jatar Raider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39313,
		},
		[46202] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Flesheating Ghoul",
			["npcID"] = 27871,
		},
		[60211] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Forge Master",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24079,
		},
		[13323] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Green Mage",
			["npcID"] = 32324,
		},
		[13339] = {
			["isChanneled"] = false,
			["source"] = "Highborne Summoner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11466,
		},
		[15581] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blackbreath Crony",
			["npcID"] = 9541,
		},
		[32982] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fire Elemental Totem",
			["npcID"] = 15439,
		},
		[59607] = {
			["isChanneled"] = false,
			["source"] = "Dragonflayer Ironhelm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23961,
		},
		[72329] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowy Mercenary",
			["npcID"] = 38177,
		},
		[87487] = {
			["isChanneled"] = false,
			["source"] = "Flame Ascendant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40709,
		},
		[59420] = {
			["encounterName"] = "Hadronox",
			["source"] = "Hadronox",
			["npcID"] = 28921,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 217,
		},
		[76807] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Naz'jar Invader",
			["npcID"] = 39616,
		},
		[81440] = {
			["isChanneled"] = false,
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43391,
		},
		[49806] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Anub'ar Warrior",
			["npcID"] = 28732,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[51917] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ghoul Tormentor",
			["npcID"] = 26621,
		},
		[69131] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Soulguard Animator",
			["npcID"] = 36516,
		},
		[83019] = {
			["isChanneled"] = false,
			["source"] = "Death's Step Miscreation",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45444,
		},
		[52470] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Gashra",
			["npcID"] = 28730,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[15610] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grim Patron",
			["npcID"] = 9545,
		},
		[59604] = {
			["isChanneled"] = false,
			["source"] = "Proto-Drake Rider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24849,
		},
		[88194] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Young Storm Dragon",
			["npcID"] = 45919,
		},
		[31308] = {
			["source"] = "Lady Jaina Proudmoore",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17772,
		},
		[80151] = {
			["isChanneled"] = false,
			["source"] = "Stonecore Magmalord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42789,
		},
		[90625] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Enormous Gyreworm",
			["npcID"] = 48533,
		},
		[16866] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Venom Belcher",
			["npcID"] = 10417,
		},
		[59734] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 575,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 23954,
		},
		[76680] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Element Warden",
			["npcID"] = 40017,
		},
		[9613] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Scryer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4293,
		},
		[13952] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anvilrage Officer",
			["npcID"] = 8895,
		},
		[17235] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nerub'enkan",
			["npcID"] = 10437,
		},
		[59363] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skittering Infector",
			["npcID"] = 28736,
		},
		[59146] = {
			["isChanneled"] = false,
			["source"] = "Willey Hopebreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10997,
		},
		[13787] = {
			["isChanneled"] = false,
			["source"] = "Skeletal Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10390,
		},
		[40505] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Orgrimmar Grunt",
			["npcID"] = 3296,
		},
		[59692] = {
			["isChanneled"] = false,
			["source"] = "Enslaved Proto-Drake",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24083,
		},
		[44142] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[7951] = {
			["isChanneled"] = false,
			["source"] = "Deviate Venomwing",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5756,
		},
		[11820] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mechanized Guardian",
			["npcID"] = 6234,
		},
		[11836] = {
			["isChanneled"] = false,
			["source"] = "Gahz'rilla",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7273,
		},
		[72203] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Footman",
			["npcID"] = 38173,
		},
		[87721] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Grounding Field",
			["npcID"] = 47085,
		},
		[80807] = {
			["encounterName"] = "Slabhide",
			["source"] = "Slabhide",
			["encounterID"] = 1059,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43214,
		},
		[59854] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 371,
		},
		[388137] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Pebble",
			["npcID"] = 194870,
		},
		[34173] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sunseeker Channeler",
			["npcID"] = 19505,
		},
		[76617] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Conflagration",
			["npcID"] = 39994,
		},
		[91522] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Creeper",
			["npcID"] = 47132,
		},
		[11980] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mosh'Ogg Witch Doctor",
			["npcID"] = 1144,
		},
		[17843] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Priestess Delrissa",
			["npcID"] = 24560,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1895,
		},
		[23769] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sayge",
			["npcID"] = 14822,
		},
		[6016] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nerub'enkan",
			["npcID"] = 10437,
		},
		[75823] = {
			["encounterName"] = "Corla, Herald of Twilight",
			["source"] = "Corla, Herald of Twilight",
			["npcID"] = 39679,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1038,
		},
		[7896] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Beastmaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4288,
		},
		[42131] = {
			["isChanneled"] = false,
			["source"] = "Twilight Nightblade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42707,
		},
		[76170] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["npcID"] = 40825,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1046,
		},
		[10061] = {
			["isChanneled"] = false,
			["source"] = "Obsidian Sentinel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7023,
		},
		[68939] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["npcID"] = 36502,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 831,
		},
		[10093] = {
			["source"] = "Sand Storm",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 7226,
		},
		[76682] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Element Warden",
			["npcID"] = 40017,
		},
		[10831] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arcane Nullifier X-21",
			["npcID"] = 6232,
		},
		[23735] = {
			["source"] = "Sayge",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14822,
		},
		[50831] = {
			["isChanneled"] = false,
			["source"] = "Sjonnir The Ironshaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 27978,
		},
		[10832] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arcane Nullifier X-21",
			["npcID"] = 6232,
		},
		[80028] = {
			["encounterName"] = "Slabhide",
			["source"] = "Rock Borer",
			["npcID"] = 42845,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1059,
		},
	},
	["profileKeys"] = {
		["Handrmandr - Golemagg"] = "xVermin",
		["Vermina - Golemagg"] = "xVermin",
		["Mxyz - Golemagg"] = "xVermin",
		["Battlearm - Golemagg"] = "xVermin",
		["Battitude - Golemagg"] = "xVermin",
		["Battlearm - Gehennas"] = "xVermin",
		["Asjrdfsad - Golemagg"] = "xVermin",
		["Tudum - Ashbringer"] = "xVermin",
		["Augustin - Golemagg"] = "xVermin",
		["Moolatz - Golemagg"] = "xVermin",
		["Battledog - Gehennas"] = "xVermin",
		["Vermin - Golemagg"] = "xVermin",
		["Mxzq - Golemagg"] = "xVermin",
		["Poklopac - Mirage Raceway"] = "xVermin",
		["Provokator - Jin'do"] = "xVermin",
		["Tadibey - Golemagg"] = "xVermin",
		["Miqa - Golemagg"] = "xVermin",
		["Mxyzptlk - Golemagg"] = "xVermin",
		["Pitchwise - Ashbringer"] = "xVermin",
	},
	["profiles"] = {
		["xVermin"] = {
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
						320170, -- [16]
						320171, -- [17]
						320462, -- [18]
						330712, -- [19]
						332170, -- [20]
						333875, -- [21]
						326836, -- [22]
						342135, -- [23]
						333861, -- [24]
						341969, -- [25]
						317963, -- [26]
						327481, -- [27]
						328331, -- [28]
						322614, -- [29]
						325701, -- [30]
						326438, -- [31]
						323538, -- [32]
						321764, -- [33]
						296523, -- [34]
						330755, -- [35]
						295929, -- [36]
						296019, -- [37]
						335685, -- [38]
						170751, -- [39]
						342207, -- [40]
						350554, -- [41]
						348513, -- [42]
						351779, -- [43]
						328180, -- [44]
						319898, -- [45]
						166335, -- [46]
						172810, -- [47]
						172943, -- [48]
						173148, -- [49]
						163376, -- [50]
						228011, -- [51]
						228277, -- [52]
						29928, -- [53]
						228559, -- [54]
						230050, -- [55]
						374743, -- [56]
						227615, -- [57]
						229716, -- [58]
						229083, -- [59]
						299525, -- [60]
						300514, -- [61]
						285388, -- [62]
						294324, -- [63]
						294180, -- [64]
						293827, -- [65]
						297128, -- [66]
						294015, -- [67]
						291865, -- [68]
						281420, -- [69]
						274383, -- [70]
						259092, -- [71]
						367521, -- [72]
						374544, -- [73]
						385039, -- [74]
						382474, -- [75]
						369823, -- [76]
						377500, -- [77]
						260879, -- [78]
						186269, -- [79]
						378818, -- [80]
						371875, -- [81]
						372225, -- [82]
						200658, -- [83]
						266036, -- [84]
						265407, -- [85]
						164965, -- [86]
						429176, -- [87]
						428526, -- [88]
						418200, -- [89]
						407124, -- [90]
						200630, -- [91]
						415437, -- [92]
						264050, -- [93]
						267824, -- [94]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1541263726,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Revision"] = 108,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						398151, -- [1]
						323149, -- [2]
						324392, -- [3]
						340544, -- [4]
						342189, -- [5]
						333227, -- [6]
						163689, -- [7]
						227931, -- [8]
						233210, -- [9]
						300207, -- [10]
						301629, -- [11]
						297133, -- [12]
						377738, -- [13]
						378149, -- [14]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 828,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						321247, -- [19]
						334522, -- [20]
						320232, -- [21]
						319962, -- [22]
						325879, -- [23]
						324427, -- [24]
						322999, -- [25]
						325360, -- [26]
						322903, -- [27]
						324103, -- [28]
						333294, -- [29]
						333540, -- [30]
						319521, -- [31]
						326021, -- [32]
						326450, -- [33]
						322711, -- [34]
						329104, -- [35]
						295000, -- [36]
						242391, -- [37]
						320197, -- [38]
						329608, -- [39]
						161090, -- [40]
						156301, -- [41]
						166341, -- [42]
						163379, -- [43]
						166923, -- [44]
						172952, -- [45]
						164426, -- [46]
						163665, -- [47]
						227578, -- [48]
						228528, -- [49]
						227789, -- [50]
						227779, -- [51]
						229608, -- [52]
						227925, -- [53]
						300129, -- [54]
						296522, -- [55]
						294349, -- [56]
						293854, -- [57]
						297834, -- [58]
						299588, -- [59]
						302682, -- [60]
						291946, -- [61]
						295169, -- [62]
						285440, -- [63]
						291613, -- [64]
						283551, -- [65]
						372735, -- [66]
						373017, -- [67]
						392488, -- [68]
						257732, -- [69]
						256060, -- [70]
						257899, -- [71]
						384633, -- [72]
						374339, -- [73]
						395694, -- [74]
						391634, -- [75]
						372701, -- [76]
						369328, -- [77]
						265487, -- [78]
						413044, -- [79]
						183526, -- [80]
						88194, -- [81]
						87762, -- [82]
						413385, -- [83]
						411001, -- [84]
						378282, -- [85]
						384161, -- [86]
						259572, -- [87]
						255371, -- [88]
						427460, -- [89]
						429172, -- [90]
						426500, -- [91]
						413607, -- [92]
						412922, -- [93]
						417481, -- [94]
						201399, -- [95]
						411994, -- [96]
						415770, -- [97]
						260907, -- [98]
						260703, -- [99]
						260741, -- [100]
						265876, -- [101]
						263959, -- [102]
						266225, -- [103]
						253517, -- [104]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						337220, -- [1]
						337253, -- [2]
						337251, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						381525, -- [6]
						386660, -- [7]
						385578, -- [8]
						384699, -- [9]
						153501, -- [10]
						153686, -- [11]
						154442, -- [12]
						192018, -- [13]
						219488, -- [14]
						372087, -- [15]
						391726, -- [16]
						391723, -- [17]
						377383, -- [18]
						388976, -- [19]
						370764, -- [20]
						387067, -- [21]
						391118, -- [22]
						391136, -- [23]
						382233, -- [24]
						209027, -- [25]
						212031, -- [26]
						207261, -- [27]
						207979, -- [28]
						198888, -- [29]
						199805, -- [30]
						199050, -- [31]
						191508, -- [32]
						152792, -- [33]
						153395, -- [34]
						323489, -- [35]
						323496, -- [36]
						319941, -- [37]
						319592, -- [38]
						334266, -- [39]
						325258, -- [40]
						334913, -- [41]
						326221, -- [42]
						322936, -- [43]
						323236, -- [44]
						321834, -- [45]
						336752, -- [46]
						325418, -- [47]
						324667, -- [48]
						327233, -- [49]
						324368, -- [50]
						324205, -- [51]
						323943, -- [52]
						319713, -- [53]
						320596, -- [54]
						320729, -- [55]
						323608, -- [56]
						330614, -- [57]
						320063, -- [58]
						332708, -- [59]
						334023, -- [60]
						317231, -- [61]
						317943, -- [62]
						320966, -- [63]
						334053, -- [64]
						328458, -- [65]
						321968, -- [66]
						331718, -- [67]
						325793, -- [68]
						330453, -- [69]
						326997, -- [70]
						334051, -- [71]
						292903, -- [72]
						330843, -- [73]
						294173, -- [74]
						189200, -- [75]
						352833, -- [76]
						330403, -- [77]
						166675, -- [78]
						176127, -- [79]
						166380, -- [80]
						162058, -- [81]
						167516, -- [82]
						166923, -- [83]
						178299, -- [84]
						172982, -- [85]
						163390, -- [86]
						173384, -- [87]
						173514, -- [88]
						29513, -- [89]
						227672, -- [90]
						228603, -- [91]
						227339, -- [92]
						227493, -- [93]
						241774, -- [94]
						229611, -- [95]
						229151, -- [96]
						300188, -- [97]
						299475, -- [98]
						299502, -- [99]
						300777, -- [100]
						301681, -- [101]
						298946, -- [102]
						298940, -- [103]
						300424, -- [104]
						283422, -- [105]
						294290, -- [106]
						291973, -- [107]
						293986, -- [108]
						291878, -- [109]
						292264, -- [110]
						209495, -- [111]
						257426, -- [112]
						255952, -- [113]
						257870, -- [114]
						413147, -- [115]
						383107, -- [116]
						377559, -- [117]
						388060, -- [118]
						376170, -- [119]
						384524, -- [120]
						375351, -- [121]
						390111, -- [122]
						369791, -- [123]
						369573, -- [124]
						369563, -- [125]
						369335, -- [126]
						369061, -- [127]
						375727, -- [128]
						265016, -- [129]
						265019, -- [130]
						260793, -- [131]
						260292, -- [132]
						272457, -- [133]
						272609, -- [134]
						269843, -- [135]
						183465, -- [136]
						226296, -- [137]
						188169, -- [138]
						183088, -- [139]
						410873, -- [140]
						411012, -- [141]
						88308, -- [142]
						382708, -- [143]
						375251, -- [144]
						375439, -- [145]
						372311, -- [146]
						373742, -- [147]
						372201, -- [148]
						374533, -- [149]
						377204, -- [150]
						201226, -- [151]
						204667, -- [152]
						198379, -- [153]
						200768, -- [154]
						253239, -- [155]
						250258, -- [156]
						255567, -- [157]
						194956, -- [158]
						427510, -- [159]
						426645, -- [160]
						412505, -- [161]
						412129, -- [162]
						419351, -- [163]
						401482, -- [164]
						404916, -- [165]
						200345, -- [166]
						200261, -- [167]
						198641, -- [168]
						265372, -- [169]
						271174, -- [170]
						264694, -- [171]
						264923, -- [172]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "animSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Speed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate [Plater]",
					["NpcNames"] = {
						"165560", -- [1]
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1547158828,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["Icon"] = 136048,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Revision"] = 135,
					["Author"] = "Celian-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Name"] = "UnitPower [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
					},
					["Desc"] = "Show the energy amount above the nameplate",
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604599472,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 355,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Nameplate Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Skull Texture",
							["Name"] = "Skull Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Skull Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Alpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 0.4,
							["Key"] = "skullScale",
							["Value"] = 0.6,
							["Name"] = "Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
					},
					["version"] = -1,
					["Name"] = "Unit - Important [Plater]",
					["NpcNames"] = {
						"164362", -- [1]
						"168882", -- [2]
						"168988", -- [3]
						"170234", -- [4]
						"165905", -- [5]
						"170452", -- [6]
						80875, -- [7]
						163746, -- [8]
						152033, -- [9]
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						338353, -- [28]
						334748, -- [29]
						334749, -- [30]
						320784, -- [31]
						341352, -- [32]
						341520, -- [33]
						341522, -- [34]
						336005, -- [35]
						339777, -- [36]
						331933, -- [37]
						326617, -- [38]
						324914, -- [39]
						324776, -- [40]
						326046, -- [41]
						340634, -- [42]
						319070, -- [43]
						328295, -- [44]
						317936, -- [45]
						327413, -- [46]
						319654, -- [47]
						323821, -- [48]
						320772, -- [49]
						324293, -- [50]
						330562, -- [51]
						330868, -- [52]
						341902, -- [53]
						342139, -- [54]
						342675, -- [55]
						323190, -- [56]
						332836, -- [57]
						327648, -- [58]
						328217, -- [59]
						322938, -- [60]
						340544, -- [61]
						325876, -- [62]
						325700, -- [63]
						323552, -- [64]
						332666, -- [65]
						332612, -- [66]
						332706, -- [67]
						340026, -- [68]
						294171, -- [69]
						292910, -- [70]
						294165, -- [71]
						338871, -- [72]
						330813, -- [73]
						335694, -- [74]
						327461, -- [75]
						329787, -- [76]
						304946, -- [77]
						15245, -- [78]
						276754, -- [79]
						304831, -- [80]
						277036, -- [81]
						320657, -- [82]
						294362, -- [83]
						270248, -- [84]
						292926, -- [85]
						350421, -- [86]
						352158, -- [87]
						349985, -- [88]
						164192, -- [89]
						176032, -- [90]
						166335, -- [91]
						166387, -- [92]
						162066, -- [93]
						163689, -- [94]
						227592, -- [95]
						228254, -- [96]
						227999, -- [97]
						227987, -- [98]
						232115, -- [99]
						29580, -- [100]
						227616, -- [101]
						241828, -- [102]
						228606, -- [103]
						227800, -- [104]
						228239, -- [105]
						229706, -- [106]
						294884, -- [107]
						301629, -- [108]
						284219, -- [109]
						301689, -- [110]
						300650, -- [111]
						297835, -- [112]
						300171, -- [113]
						300087, -- [114]
						300414, -- [115]
						300436, -- [116]
						301088, -- [117]
						293729, -- [118]
						291928, -- [119]
						384194, -- [120]
						392451, -- [121]
						392924, -- [122]
						397889, -- [123]
						209413, -- [124]
						207980, -- [125]
						257397, -- [126]
						257736, -- [127]
						382787, -- [128]
						374699, -- [129]
						377402, -- [130]
						369602, -- [131]
						369465, -- [132]
						369400, -- [133]
						381593, -- [134]
						265091, -- [135]
						265433, -- [136]
						382791, -- [137]
						376780, -- [138]
						225573, -- [139]
						278444, -- [140]
						164887, -- [141]
						168082, -- [142]
						76813, -- [143]
						227913, -- [144]
						265368, -- [145]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate On You [Plater]",
					["NpcNames"] = {
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"pink\" \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    \nend\n\n\n",
					["Time"] = 1541606626,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"pink\" \n    \nend\n\n\n",
					["Icon"] = "INTERFACE\\ICONS\\Achievement_PVP_P_01",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Revision"] = 45,
					["Author"] = "抹了油的大叔-白银之手",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    \nend\n\n\n",
					["Name"] = "NameplaterColor with Special Buff ID",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["SpellIds"] = {
						277242, -- [1]
					},
					["Desc"] = "NameplaterColor with Special Buff ID",
					["NpcNames"] = {
					},
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
						273577, -- [6]
					},
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1548349253,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["Icon"] = 135024,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Revision"] = 67,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Name"] = "Color Change [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
					},
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["NpcNames"] = {
						"141851", -- [1]
					},
				}, -- [14]
				{
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1547158827,
					["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["Icon"] = 133006,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["Revision"] = 46,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Name"] = "Aura - Border Color [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["SpellIds"] = {
					},
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["NpcNames"] = {
					},
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1651255618,
					["semver"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Revision"] = 376,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Name"] = "Timeleft to Blink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeleftToBlink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Blink Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkSpeed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkMaxAlpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftWarning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftCritical",
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["Enabled"] = true,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-22, 20, 8, -11)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+20, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        envTable.OriginalWidth = nil\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    Plater.SetCastBarBorderColor (self, 1, 0, 0, 0.4)\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    \n    --increase the cast bar size\n    envTable.OriginalHeight = self:GetHeight()\n    envTable.OriginalWidth = self:GetWidth()\n    local width = Plater.db.profile.plate_config.enemynpc.cast_incombat[1]\n    local height = Plater.db.profile.plate_config.enemynpc.cast_incombat[2]\n    \n    self:SetWidth (width)\n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    \n    print (envTable.glowEffect:GetAlpha())\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1548957952,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-22, 20, 8, -11)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+20, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["Icon"] = "INTERFACE\\ICONS\\Spell_Fire_FelFlameStrike",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        envTable.OriginalWidth = nil\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Revision"] = 1382,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    Plater.SetCastBarBorderColor (self, 1, 0, 0, 0.4)\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    \n    --increase the cast bar size\n    envTable.OriginalHeight = self:GetHeight()\n    envTable.OriginalWidth = self:GetWidth()\n    local width = Plater.db.profile.plate_config.enemynpc.cast_incombat[1]\n    local height = Plater.db.profile.plate_config.enemynpc.cast_incombat[2]\n    \n    self:SetWidth (width)\n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    \n    print (envTable.glowEffect:GetAlpha())\n    \nend",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "M+ Important Spells [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						274569, -- [3]
						278020, -- [4]
						261635, -- [5]
						272700, -- [6]
						268030, -- [7]
						278567, -- [8]
						278602, -- [9]
						258128, -- [10]
						257791, -- [11]
						258938, -- [12]
						265089, -- [13]
						272183, -- [14]
						269972, -- [15]
						270901, -- [16]
						270492, -- [17]
						263215, -- [18]
						268797, -- [19]
						262554, -- [20]
						250368, -- [21]
						278504, -- [22]
						266106, -- [23]
						268309, -- [24]
						269302, -- [25]
						263202, -- [26]
						278755, -- [27]
						272180, -- [28]
						263066, -- [29]
						267273, -- [30]
						265912, -- [31]
						274438, -- [32]
						268317, -- [33]
						268375, -- [34]
						276767, -- [35]
						264105, -- [36]
						270464, -- [37]
						265468, -- [38]
						256897, -- [39]
						280604, -- [40]
						268702, -- [41]
						253583, -- [42]
						278456, -- [43]
						262092, -- [44]
						257270, -- [45]
						267818, -- [46]
						262540, -- [47]
						263318, -- [48]
						257069, -- [49]
						256849, -- [50]
						267459, -- [51]
						268008, -- [52]
						267981, -- [53]
						272659, -- [54]
						264396, -- [55]
						264390, -- [56]
						274400, -- [57]
						269029, -- [58]
						272827, -- [59]
						269266, -- [60]
						263912, -- [61]
						258864, -- [62]
						256955, -- [63]
						265540, -- [64]
						270003, -- [65]
						270507, -- [66]
						257337, -- [67]
						268415, -- [68]
						275907, -- [69]
						268865, -- [70]
						260669, -- [71]
						260280, -- [72]
						265541, -- [73]
						256709, -- [74]
						277596, -- [75]
						276268, -- [76]
						263905, -- [77]
						265781, -- [78]
						257170, -- [79]
						268846, -- [80]
						270514, -- [81]
						258622, -- [82]
						258199, -- [83]
						256627, -- [84]
						259711, -- [85]
						258917, -- [86]
						263891, -- [87]
						268027, -- [88]
						268348, -- [89]
						269313, -- [90]
						272711, -- [91]
						268260, -- [92]
						269399, -- [93]
						268239, -- [94]
						264574, -- [95]
						261563, -- [96]
						257288, -- [97]
						257757, -- [98]
						267899, -- [99]
						255741, -- [100]
						264757, -- [101]
						260894, -- [102]
						263365, -- [103]
						263583, -- [104]
						276292, -- [105]
						272874, -- [106]
						264101, -- [107]
						264407, -- [108]
						271456, -- [109]
						262515, -- [110]
						275192, -- [111]
						270084, -- [112]
						257785, -- [113]
						267237, -- [114]
						266951, -- [115]
						267433, -- [116]
						255577, -- [117]
						270891, -- [118]
						267357, -- [119]
						258338, -- [120]
						257169, -- [121]
						270927, -- [122]
						273995, -- [123]
						260926, -- [124]
						264027, -- [125]
						267257, -- [126]
						253721, -- [127]
						260924, -- [128]
						263309, -- [129]
						266206, -- [130]
						268187, -- [131]
						260067, -- [132]
						274507, -- [133]
						276068, -- [134]
						263278, -- [135]
						258317, -- [136]
						256594, -- [137]
						268391, -- [138]
						268230, -- [139]
						260852, -- [140]
						267763, -- [141]
						268706, -- [142]
						264734, -- [143]
						288693, -- [144]
						288694, -- [145]
						270590, -- [146]
						290787, -- [147]
						72286, -- [148]
					},
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --custom frames\n    unitFrame.JadeFireGlowEffect = unitFrame.JadeFireGlowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    unitFrame.JadeFireGlowEffect:SetOffset (-27, 25, 6, -8)\n    unitFrame.JadeFireGlowEffect:Hide()\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Hide() \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Show() \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:SetAlpha (.5)\nend\n\n\n",
					["Time"] = 1550596124,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --custom frames\n    unitFrame.JadeFireGlowEffect = unitFrame.JadeFireGlowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    unitFrame.JadeFireGlowEffect:SetOffset (-27, 25, 6, -8)\n    unitFrame.JadeFireGlowEffect:Hide()\n    \nend\n\n\n",
					["Icon"] = 132221,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Hide() \nend\n\n\n",
					["Revision"] = 33,
					["Author"] = "Kastfall-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Show() \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:SetAlpha (.5)\nend\n\n\n",
					["Name"] = "Jadefire [BOD] - Fire Shield",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
						286425, -- [1]
					},
					["Desc"] = "Alert when the unit has the Fire Shield to be broken.",
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.CheckUnit(unitFrame, envTable)\n        if (envTable._NpcID == 185680) then\n            --haste\n            envTable.SetColor(unitFrame, \"haste\")\n            \n        elseif (envTable._NpcID == 185683) then\n            --movement speed\n            envTable.SetColor(unitFrame, \"ms\")\n            \n        elseif (envTable._NpcID == 185685) then\n            --cooldown reduction\n            envTable.SetColor(unitFrame, \"cdr\")\n            \n        end\n    end\n    \n    function envTable.SetColor(unitFrame, bonusType)\n        \n        local r, g, b, a, name\n        \n        if (bonusType == \"haste\") then\n            name = scriptTable.config.hasteName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.hasteColor)\n            \n        elseif (bonusType == \"ms\") then\n            name = scriptTable.config.msName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.msColor)\n            \n        elseif (bonusType == \"cdr\") then\n            name = scriptTable.config.cdrName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.cdrColor)\n        end\n        \n        Plater.SetNameplateColor(unitFrame, r, g, b, a)\n        if (scriptTable.config.canChangeSize) then\n            Plater.SetNameplateSize(unitFrame, scriptTable.config.width, scriptTable.config.height)\n        end\n        \n        --border\n        if (scriptTable.config.showBorder) then\n            r, g, b, a = r+0.2, g+0.2, b+0.2\n            Plater.SetBorderColor(unitFrame, r, g, b)\n        end\n        \n        --name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\nend\n\n\n--185685 cooldown reduction\n--185680 haste\n--185683 movement speed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\nend\n\n\n",
					["Time"] = 1647994498,
					["url"] = "",
					["Icon"] = 4263293,
					["Enabled"] = true,
					["Revision"] = 70,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Make more easy to distinguish relics within dungeons in 9.2 patch",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\n    \nend",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "ColorSettingsAnchor",
							["Value"] = "Color Settings",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Adjust the nameplate color for each mob",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Haste Color",
							["Value"] = {
								0.4549019607843137, -- [1]
								0.2156862745098039, -- [2]
								0.5490196078431373, -- [3]
								1, -- [4]
							},
							["Key"] = "hasteColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "haste color",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "msColor",
							["Value"] = {
								0.3098039215686275, -- [1]
								0.5215686274509804, -- [2]
								0.2588235294117647, -- [3]
								1, -- [4]
							},
							["Name"] = "Moviment Speep Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "moviment speep color",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Cooldown Reduction Color",
							["Value"] = {
								0.1725490196078431, -- [1]
								0.2823529411764706, -- [2]
								0.5215686274509804, -- [3]
								1, -- [4]
							},
							["Key"] = "cdrColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "cooldown reduction color",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Name"] = "SizeSettingsAnchor",
							["Value"] = "Size Settings",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "canChangeSize",
							["Value"] = false,
							["Name"] = "Change Nameplate Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If this is checked, the nameplate size is changed to the values below",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "total width of the nameplate",
							["Min"] = 50,
							["Key"] = "width",
							["Value"] = 100,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 40,
							["Desc"] = "total height of the nameplate",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 12,
							["Key"] = "height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Height",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 9",
							["Value"] = 0,
							["Key"] = "option9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "BorderSettingsAnchor",
							["Value"] = "Border Settings",
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Paint Border",
							["Value"] = true,
							["Key"] = "showBorder",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, the color of the border will have the same color as the nameplate",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 12",
							["Value"] = 0,
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "NameSettings",
							["Value"] = "Name Settings",
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 3,
							["Name"] = "Haste Name",
							["Value"] = "HASTE",
							["Key"] = "hasteName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 3,
							["Key"] = "cdrName",
							["Value"] = "CDR",
							["Name"] = "Cooldown Reduction Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 3,
							["Name"] = "Movement Speed Name",
							["Value"] = "MS",
							["Key"] = "msName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Relics 9.2 M Dungeons",
					["NpcNames"] = {
						"185685", -- [1]
						"185680", -- [2]
						"185683", -- [3]
					},
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Alert + Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						332329, -- [21]
						320103, -- [22]
						321406, -- [23]
						335817, -- [24]
						321061, -- [25]
						320141, -- [26]
						326171, -- [27]
						163966, -- [28]
						227966, -- [29]
						372107, -- [30]
						388923, -- [31]
						376934, -- [32]
						384899, -- [33]
						373960, -- [34]
						374724, -- [35]
						385551, -- [36]
						259732, -- [37]
						373424, -- [38]
						373084, -- [39]
						87618, -- [40]
						255041, -- [41]
						428926, -- [42]
						76634, -- [43]
						200050, -- [44]
						197546, -- [45]
						198079, -- [46]
						199193, -- [47]
						266181, -- [48]
						253544, -- [49]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Ultra Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Name"] = "Health Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.431372, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604607993,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 406,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Size Offset",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
					},
					["version"] = -1,
					["Name"] = "Unit - Main Target [P]",
					["NpcNames"] = {
						"156212", -- [1]
						"168098", -- [2]
						179124, -- [3]
					},
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1606506781,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 109,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Vertical Line Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Unit - Health Markers [P]",
					["NpcNames"] = {
						"164451", -- [1]
						"164463", -- [2]
						"164461", -- [3]
						"165946", -- [4]
						"164501", -- [5]
						"164218", -- [6]
					},
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996775,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
					["Enabled"] = true,
					["Revision"] = 843,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						321828, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Tank Interrupt [P]",
					["NpcNames"] = {
					},
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						354173, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Important Target [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Name"] = "Frame Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Auto Set Skull",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Countdown",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["version"] = -1,
					["Name"] = "M+ Spiteful",
					["NpcNames"] = {
						"174773", -- [1]
					},
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fontSize",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["version"] = -1,
					["Name"] = "Unit - Show Energy [Plater]",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
						150159, -- [7]
					},
				}, -- [29]
				{
					["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["UID"] = "0x626ba3674182ee",
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1651221351,
					["Temp_ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 1,
					["Options"] = {
					},
					["Icon"] = "",
					["Author"] = "Mxyzptlk-Golemagg",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "",
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Name"] = "New Script",
					["PlaterCore"] = 1,
					["ScriptType"] = 1,
					["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						227548, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura is Shield [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						285388, -- [1]
						426662, -- [2]
						426663, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate by Unit Buff [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						360850, -- [10]
						212784, -- [11]
						199033, -- [12]
						199034, -- [13]
						200969, -- [14]
						394512, -- [15]
						397881, -- [16]
						396020, -- [17]
						374430, -- [18]
						373429, -- [19]
						384353, -- [20]
						265376, -- [21]
						193941, -- [22]
						411002, -- [23]
						169445, -- [24]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [33]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Effect After Cast [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [34]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
						258672, -- [20]
						258777, -- [21]
						257756, -- [22]
						257784, -- [23]
						256405, -- [24]
						256589, -- [25]
						393793, -- [26]
						388046, -- [27]
						375079, -- [28]
						390290, -- [29]
						369811, -- [30]
						369703, -- [31]
						226287, -- [32]
						410999, -- [33]
						372561, -- [34]
						256882, -- [35]
						172578, -- [36]
						412063, -- [37]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Circle AoE [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Name"] = "Rotation Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "rotationDuration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animStartDuration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Start Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Texture Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureScale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
				}, -- [35]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1683596223,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 146,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Vertical Line Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Name"] = "Fill Alpha",
							["Value"] = 0.2,
							["Key"] = "fillAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Health Markers [P]",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
						"186227", -- [3]
						"184020", -- [4]
						"91005", -- [5]
					},
				}, -- [36]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
						190381, -- [14]
						92538, -- [15]
						192464, -- [16]
						131009, -- [17]
						127315, -- [18]
						133361, -- [19]
						136330, -- [20]
						214117, -- [21]
						212483, -- [22]
						101008, -- [23]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Key"] = "skullScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
				}, -- [37]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Tag Number [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
				}, -- [38]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
						385029, -- [4]
						374563, -- [5]
						377341, -- [6]
						369675, -- [7]
						369365, -- [8]
						369411, -- [9]
						278961, -- [10]
						202108, -- [11]
						88186, -- [12]
						255824, -- [13]
						252781, -- [14]
						250096, -- [15]
						200248, -- [16]
						197797, -- [17]
						264520, -- [18]
						418202, -- [19]
						201839, -- [20]
						412012, -- [21]
						411958, -- [22]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Quick Flash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [39]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
						129758, -- [5]
						190426, -- [6]
						186696, -- [7]
						101075, -- [8]
						100818, -- [9]
						98081, -- [10]
						52019, -- [11]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Warning [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
				}, -- [40]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Non Elite Trash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Scale",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
				}, -- [41]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
				}, -- [42]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
						200291, -- [5]
						268202, -- [6]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
				}, -- [43]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
						189299, -- [6]
						131402, -- [7]
						135052, -- [8]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Explode on Die [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
				}, -- [44]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["Icon"] = 236209,
					["Enabled"] = true,
					["Revision"] = 18,
					["semver"] = "",
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura While Casting [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [45]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = true,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Name"] = "Dots X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots Y Offset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "speed",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "minAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - On Going Cast [P]",
					["NpcNames"] = {
					},
				}, -- [46]
			},
			["saved_cvars_last_change"] = {
				["ShowClassColorInNameplate"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateOverlapV"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["ShowNamePlateLoseAggroFlash"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/xVermin/Frames/CustomContainers.lua\"]:50: in function <Interface/AddOns/xVermin/Frames/CustomContainers.lua:35>\n",
				["nameplateShowFriendlyTotems"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplatePersonalHideDelaySeconds"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplatePersonalShowInCombat"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplatePersonalShowWithTarget"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateMinAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateNotSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["clampTargetNameplateToScreen"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateShowAll"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateMaxDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/xVermin/xVermin.lua\"]:7: in function <Interface/AddOns/xVermin/xVermin.lua:3>\n[string \"@Interface/AddOns/xVermin/xVermin.lua\"]:70: in function <Interface/AddOns/xVermin/xVermin.lua:69>\n",
				["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateTargetBehindMaxDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/xVermin/Frames/CustomContainers.lua\"]:48: in function <Interface/AddOns/xVermin/Frames/CustomContainers.lua:35>\n",
				["NamePlateVerticalScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplatePersonalShowAlways"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateMotionSpeed"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateGlobalScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateShowEnemyMinions"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/xVermin/Frames/CustomContainers.lua\"]:49: in function <Interface/AddOns/xVermin/Frames/CustomContainers.lua:35>\n",
				["nameplateShowEnemyPets"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:8410: in function `RefreshAutoToggle'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2301: in function `func'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3909: in function `EventHandler'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3920: in function `RunFunctionForEvent'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3926: in function <Interface/AddOns/Plater/Plater.lua:3923>\n",
				["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateSelectedScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateMotion"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:8443: in function `RefreshAutoToggle'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2301: in function `func'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3909: in function `EventHandler'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3920: in function `RunFunctionForEvent'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3926: in function <Interface/AddOns/Plater/Plater.lua:3923>\n",
				["nameplateRemovalAnimation"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateMinScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateShowOnlyNames"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateOtherTopInset"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateShowEnemyGuardians"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateShowEnemyTotems"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:8422: in function `RefreshAutoToggle'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2301: in function `func'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3909: in function `EventHandler'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3920: in function `RunFunctionForEvent'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3926: in function <Interface/AddOns/Plater/Plater.lua:3923>\n",
				["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["NamePlateHorizontalScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateLargeTopInset"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateTargetRadialPosition"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateShowDebuffsOnFriendly"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
				["nameplateShowFriends"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2316: in function <Interface/AddOns/Plater/Plater.lua:2297>\n",
			},
			["aura_cache_by_name"] = {
				["judgement of wisdom"] = {
					20186, -- [1]
					20268, -- [2]
					53408, -- [3]
				},
				["rake"] = {
					1822, -- [1]
					1823, -- [2]
					1824, -- [3]
					9904, -- [4]
					24331, -- [5]
					24332, -- [6]
					27003, -- [7]
					27556, -- [8]
					27638, -- [9]
					36332, -- [10]
					48573, -- [11]
					48574, -- [12]
					53499, -- [13]
					54668, -- [14]
					59881, -- [15]
					59882, -- [16]
					59883, -- [17]
					59884, -- [18]
					59885, -- [19]
					59886, -- [20]
				},
				["sunder armor"] = {
					7386, -- [1]
					7405, -- [2]
					8380, -- [3]
					11596, -- [4]
					11597, -- [5]
					11971, -- [6]
					13444, -- [7]
					15502, -- [8]
					15572, -- [9]
					16145, -- [10]
					21081, -- [11]
					24317, -- [12]
					25051, -- [13]
					25225, -- [14]
					27991, -- [15]
					30901, -- [16]
					47467, -- [17]
					48893, -- [18]
					50370, -- [19]
					53618, -- [20]
					54188, -- [21]
					57807, -- [22]
					58461, -- [23]
					58567, -- [24]
					59350, -- [25]
					59608, -- [26]
					64978, -- [27]
					65936, -- [28]
					71554, -- [29]
				},
				["hunter's mark"] = {
					1130, -- [1]
					14323, -- [2]
					14324, -- [3]
					14325, -- [4]
					31615, -- [5]
					53338, -- [6]
					56303, -- [7]
				},
				["faerie fire"] = {
					770, -- [1]
					6950, -- [2]
					13424, -- [3]
					13752, -- [4]
					16498, -- [5]
					20656, -- [6]
					21670, -- [7]
					25602, -- [8]
					32129, -- [9]
					65863, -- [10]
				},
			},
			["url"] = "https://wago.io/g-jp-v2zw/5",
			["hover_highlight"] = false,
			["cast_statusbar_fadein_time"] = 0.009999999776482582,
			["aura2_y_offset"] = 15.5,
			["aura_timer_text_anchor"] = {
				["y"] = -7,
				["x"] = -1,
				["side"] = 1,
			},
			["aura_timer"] = false,
			["health_selection_overlay"] = "xVerminClean",
			["expansion_triggerwipe"] = {
				[2] = true,
				[3] = true,
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.49411764705882, -- [1]
				0.49803921568628, -- [2]
				0.50196078431373, -- [3]
				0.96000000089407, -- [4]
			},
			["color_override_colors"] = {
				[3] = {
					nil, -- [1]
					0.2784313, -- [2]
					0.2078431, -- [3]
				},
				[4] = {
					1, -- [1]
					0.83921568627451, -- [2]
					0, -- [3]
				},
				[5] = {
					0.29019607843137, -- [1]
					1, -- [2]
					0.19607843137255, -- [3]
				},
			},
			["npc_cache"] = {
				[18323] = {
					"Sethekk Guard", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[40788] = {
					"Mindbender Ghur'sha", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[24560] = {
					"Priestess Delrissa", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[26639] = {
					"Drakkari Shaman", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[6168] = {
					"Roogug", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[26735] = {
					"Azure Scale-Binder", -- [1]
					"The Nexus", -- [2]
				},
				[30893] = {
					"Portal Keeper", -- [1]
					"Violet Hold", -- [2]
				},
				[28878] = {
					"Skeletal Minion", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[8318] = {
					"Atal'ai Slave", -- [1]
					"Sunken Temple", -- [2]
				},
				[10381] = {
					"Ravaged Cadaver", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10413] = {
					"Crypt Beast", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[22897] = {
					"Summoned Windfury Totem", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[20882] = {
					"Skulking Witch", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[133345] = {
					"Feckless Assistant", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[10557] = {
					"Flametongue Totem IV", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[21138] = {
					"Infinite Executioner", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[4289] = {
					"Scarlet Evoker", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[19219] = {
					"Mechano-Lord Capacitus", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[19507] = {
					"Sunseeker Gene-Splicer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[29774] = {
					"Spitting Cobra", -- [1]
					"Gundrak", -- [2]
				},
				[10813] = {
					"Balnazzar", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[12876] = {
					"Baron Aquanis", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[4425] = {
					"Blind Hunter", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[27983] = {
					"Dark Rune Protector", -- [1]
					"Halls of Stone", -- [2]
				},
				[8894] = {
					"Anvilrage Medic", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[23953] = {
					"Prince Keleseth", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[13036] = {
					"Gordok Mastiff", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[17940] = {
					"Coilfang Technician", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[30286] = {
					"Frostbringer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[20083] = {
					"Summoned Bloodwarder Mender", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[9038] = {
					"Seeth'rel", -- [1]
					"Blackrock Depths", -- [2]
				},
				[30414] = {
					"Forgotten One", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[13196] = {
					"Phase Lasher", -- [1]
					"Dire Maul", -- [2]
				},
				[38487] = {
					"Fallen Warrior", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[11197] = {
					"Mindless Skeleton", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[13276] = {
					"Wildspawn Imp", -- [1]
					"Dire Maul", -- [2]
				},
				[24561] = {
					"Yazzai", -- [1]
					"Magister's Terrace", -- [2]
				},
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[4625] = {
					"Death's Head Ward Keeper", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[166359] = {
					"Zulian Tiger", -- [1]
					"Zul'Gurub", -- [2]
				},
				[24689] = {
					"Wretched Bruiser", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[26800] = {
					"Alliance Berserker", -- [1]
					"The Nexus", -- [2]
				},
				[11373] = {
					"Razzashi Cobra", -- [1]
					"Zul'Gurub", -- [2]
				},
				[136934] = {
					"Weapons Tester", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[26928] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[11453] = {
					"Wildspawn Trickster", -- [1]
					"Dire Maul", -- [2]
				},
				[20883] = {
					"Spiteful Temptress", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[11501] = {
					"King Gordok", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11517] = {
					"Oggleflint", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[9502] = {
					"Phalanx", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[131818] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[4809] = {
					"Twilight Acolyte", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4825] = {
					"Aku'mai Snapjaw", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[17269] = {
					"Bleeding Hollow Darkcaster", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[21395] = {
					"Protean Spawn", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[4849] = {
					"Shadowforge Archaeologist", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[27600] = {
					"Risen Shadowcaster", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[17397] = {
					"Shadowmoon Adept", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[17429] = {
					"Fel Orc Neophyte", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[17461] = {
					"Shattered Hand Blood Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[15931] = {
					"Grobbulus", -- [1]
					"Naxxramas", -- [2]
				},
				[43286] = {
					"Crystal Shard", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[17621] = {
					"Heathen Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[17653] = {
					"Shadowmoon Channeler", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[16011] = {
					"Loatheb", -- [1]
					"Naxxramas", -- [2]
				},
				[27984] = {
					"Dark Rune Stormcaller", -- [1]
					"Halls of Stone", -- [2]
				},
				[23954] = {
					"Ingvar the Plunderer", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[4977] = {
					"Murkshallow Softshell", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[24082] = {
					"Proto-Drake Handler", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[30287] = {
					"Plundering Geist", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[30319] = {
					"Twilight Darkcaster", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[28368] = {
					"Ymirjar Necromancer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[5097] = {
					"Lupine Delusion", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[18421] = {
					"Sunseeker Researcher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[26641] = {
					"Drakkari Gutripper", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[36954] = {
					"The Lich King", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[26737] = {
					"Crazed Mana-Surge", -- [1]
					"The Nexus", -- [2]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[8319] = {
					"Nightmare Whelp", -- [1]
					"Sunken Temple", -- [2]
				},
				[10382] = {
					"Mangled Cadaver", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[26929] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[10414] = {
					"Patchwork Horror", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[3637] = {
					"Deviate Guardian", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[3653] = {
					"Kresh", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[5273] = {
					"Atal'ai High Priest", -- [1]
					"Sunken Temple", -- [2]
				},
				[7328] = {
					"Withered Reaver", -- [1]
					"Razorfen Downs", -- [2]
				},
				[3669] = {
					"Lord Cobrahn", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[7344] = {
					"Splinterbone Warrior", -- [1]
					"Razorfen Downs", -- [2]
				},
				[7352] = {
					"Frozen Soul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[19221] = {
					"Nethermancer Sepethrea", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[17270] = {
					"Bleeding Hollow Archer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[7416] = {
					"Mana Spring Totem IV", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[27633] = {
					"Azure Inquisitor", -- [1]
					"The Oculus", -- [2]
				},
				[36891] = {
					"Iceborn Proto-Drake", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[17462] = {
					"Shattered Hand Zealot", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[137713] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[14988] = {
					"Ohgan", -- [1]
					"Zul'Gurub", -- [2]
				},
				[27985] = {
					"Iron Golem Custodian", -- [1]
					"Halls of Stone", -- [2]
				},
				[8895] = {
					"Anvilrage Officer", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[17814] = {
					"Lordaeron Watchman", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[17846] = {
					"Pit Spectator", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[24083] = {
					"Enslaved Proto-Drake", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[11054] = {
					"Risen Rifleman", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[9039] = {
					"Doom'rel", -- [1]
					"Blackrock Depths", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				[13197] = {
					"Fel Lash", -- [1]
					"Dire Maul", -- [2]
				},
				[137716] = {
					"Bottom Feeder", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[18326] = {
					"Sethekk Shaman", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[18422] = {
					"Sunseeker Botanist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[16407] = {
					"Spectral Servant", -- [1]
					"Karazhan", -- [2]
				},
				[5649] = {
					"Sandfury Blood Drinker", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[3853] = {
					"Shadowfang Moonwalker", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[3857] = {
					"Shadowfang Glutton", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[24723] = {
					"Selin Fireheart", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[26802] = {
					"Alliance Ranger", -- [1]
					"The Nexus", -- [2]
				},
				[11374] = {
					"Hooktooth Frenzy", -- [1]
					"Zul'Gurub", -- [2]
				},
				[3873] = {
					"Tormented Officer", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[3877] = {
					"Wailing Guardsman", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[26930] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[5721] = {
					"Dreamscythe", -- [1]
					"Sunken Temple", -- [2]
				},
				[15548] = {
					"Spectral Stallion", -- [1]
					"Karazhan", -- [2]
				},
				[20885] = {
					"Dalliah the Doomsayer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[13533] = {
					"Spewed Larva", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[7800] = {
					"Mekgineer Thermaplugg", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[5761] = {
					"Deviate Shambler", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[3909] = {
					"Healing Stream Totem V", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[16983] = {
					"Plagued Champion", -- [1]
					"Naxxramas", -- [2]
				},
				[134137] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[206038] = {
					"Immortal Crusher Tentacle", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[17271] = {
					"Bonechewer Destroyer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[17399] = {
					"Seductress", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[29713] = {
					"Slad'ran Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[19510] = {
					"Bloodwarder Centurion", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[5913] = {
					"Tremor Totem", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[15932] = {
					"Gluth", -- [1]
					"Naxxramas", -- [2]
				},
				[136186] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[15980] = {
					"Naxxramas Cultist", -- [1]
					"Naxxramas", -- [2]
				},
				[16028] = {
					"Patchwerk", -- [1]
					"Naxxramas", -- [2]
				},
				[16060] = {
					"Gothik the Harvester", -- [1]
					"Naxxramas", -- [2]
				},
				[23956] = {
					"Dragonflayer Strategist", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[17879] = {
					"Chrono Lord Deja", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[6017] = {
					"Lava Spout Totem", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[24084] = {
					"Tunneling Ghoul", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[17975] = {
					"High Botanist Freywinn", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[34015] = {
					"Tempest Warder", -- [1]
					"Vault of Archavon", -- [2]
				},
				[38173] = {
					"Spectral Footman", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[30385] = {
					"Twilight Volunteer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[8120] = {
					"Sul'lithuz Abomination", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[30449] = {
					"Vesperon", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[510] = {
					"Water Elemental", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[12222] = {
					"Creeping Sludge", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[18327] = {
					"Time-Lost Controller", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[36830] = {
					"Wrathbone Laborer", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[16408] = {
					"Phantom Valet", -- [1]
					"Karazhan", -- [2]
				},
				[127106] = {
					"Irontide Officer", -- [1]
					"Freehold", -- [2]
				},
				[14397] = {
					"Mana Burst", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[30961] = {
					"Azure Invader", -- [1]
					"Violet Hold", -- [2]
				},
				[8336] = {
					"Hakkari Sapper", -- [1]
					"Sunken Temple", -- [2]
				},
				[10399] = {
					"Thuzadin Acolyte", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[20886] = {
					"Wrath-Scryer Soccothrates", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[10463] = {
					"Shrieking Banshee", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[4274] = {
					"Fenrus the Devourer", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[6329] = {
					"Irradiated Pillager", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[4290] = {
					"Scarlet Guardsman", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4298] = {
					"Scarlet Defender", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4306] = {
					"Scarlet Torturer", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[8656] = {
					"Hukku's Voidwalker", -- [1]
					"Sunken Temple", -- [2]
				},
				[27635] = {
					"Azure Spellbinder", -- [1]
					"The Oculus", -- [2]
				},
				[19511] = {
					"Nethervine Inciter", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[27731] = {
					"Acolyte", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[29874] = {
					"Drakkari Inciter", -- [1]
					"Gundrak", -- [2]
				},
				[17624] = {
					"Laughing Skull Warden", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[19735] = {
					"Tempest-Forge Destroyer", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[4442] = {
					"Razorfen Defender", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[130435] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[17816] = {
					"Bogstrok", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[17848] = {
					"Lieutenant Drake", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[17880] = {
					"Temporus", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[15101] = {
					"Zulian Prowler", -- [1]
					"Zul'Gurub", -- [2]
				},
				[24085] = {
					"Dragonflayer Overseer", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[30258] = {
					"Amanitar", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[9024] = {
					"Pyromancer Loregrain", -- [1]
					"Blackrock Depths", -- [2]
				},
				[4522] = {
					"Razorfen Dustweaver", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[9056] = {
					"Fineous Darkvire", -- [1]
					"Blackrock Depths", -- [2]
				},
				[30418] = {
					"Bound Air Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[32593] = {
					"Skittering Swarmer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[20343] = {
					"Charming Totem", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[134150] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[575] = {
					"Fire Elemental", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[42973] = {
					"Eye of Naxxramas", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[16409] = {
					"Phantom Guest", -- [1]
					"Karazhan", -- [2]
				},
				[16441] = {
					"Guardian of Icecrown", -- [1]
					"Naxxramas", -- [2]
				},
				[16505] = {
					"Naxxramas Follower", -- [1]
					"Naxxramas", -- [2]
				},
				[11359] = {
					"Soulflayer", -- [1]
					"Zul'Gurub", -- [2]
				},
				[11391] = {
					"Vilebranch Speaker", -- [1]
					"Zul'Gurub", -- [2]
				},
				[137478] = {
					"Queen Wasi", -- [1]
					"Kings' Rest", -- [2]
				},
				[11471] = {
					"Eldreth Apparition", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[37728] = {
					"Wrathbone Sorcerer", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[11519] = {
					"Bazzalan", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[38112] = {
					"Falric", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[38176] = {
					"Tortured Rifleman", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[29395] = {
					"Erekem Guard", -- [1]
					"Violet Hold", -- [2]
				},
				[4810] = {
					"Twilight Reaver", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4818] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4850] = {
					"Stonevault Cave Lurker", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[17401] = {
					"Felhound Manastalker", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[47132] = {
					"Dark Creeper", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[17465] = {
					"Shattered Hand Centurion", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[27732] = {
					"Master Necromancer", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[19608] = {
					"Frayer Wildling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[15981] = {
					"Naxxramas Acolyte", -- [1]
					"Naxxramas", -- [2]
				},
				[16029] = {
					"Sludge Belcher", -- [1]
					"Naxxramas", -- [2]
				},
				[16061] = {
					"Instructor Razuvious", -- [1]
					"Naxxramas", -- [2]
				},
				[17817] = {
					"Greater Bogstrok", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[4978] = {
					"Aku'mai Servant", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[17881] = {
					"Aeonus", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[16125] = {
					"Unrelenting Death Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[17977] = {
					"Warp Splinter", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[16173] = {
					"Shadowbat", -- [1]
					"Karazhan", -- [2]
				},
				[28276] = {
					"Greater Ley-Whelp", -- [1]
					"The Oculus", -- [2]
				},
				[134157] = {
					"Shadow-Borne Warrior", -- [1]
					"Kings' Rest", -- [2]
				},
				[18105] = {
					"Ghaz'an", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[30419] = {
					"Bound Water Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[5058] = {
					"Wolfguard Worg", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[137484] = {
					"King A'akul", -- [1]
					"Kings' Rest", -- [2]
				},
				[12207] = {
					"Thessala Hydra", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[30643] = {
					"Lava Blaze", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[42975] = {
					"Plague Ghoul", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[16410] = {
					"Spectral Retainer", -- [1]
					"Karazhan", -- [2]
				},
				[18521] = {
					"Raging Skeleton", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[16506] = {
					"Naxxramas Worshipper", -- [1]
					"Naxxramas", -- [2]
				},
				[7209] = {
					"Obsidian Shard", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[26805] = {
					"Alliance Cleric", -- [1]
					"The Nexus", -- [2]
				},
				[30963] = {
					"Azure Mage Slayer", -- [1]
					"Violet Hold", -- [2]
				},
				[10384] = {
					"Spectral Citizen", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[137486] = {
					"Queen Patlaa", -- [1]
					"Kings' Rest", -- [2]
				},
				[10416] = {
					"Bile Spewer", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[7273] = {
					"Gahz'rilla", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[10464] = {
					"Wailing Banshee", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[31219] = {
					"Acolyte of Vesperon", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[2630] = {
					"Earthbind Totem", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[7321] = {
					"Stonevault Flameweaver", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7329] = {
					"Withered Quilguard", -- [1]
					"Razorfen Downs", -- [2]
				},
				[7337] = {
					"Death's Head Necromancer", -- [1]
					"Razorfen Downs", -- [2]
				},
				[134417] = {
					"Deepsea Ritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[7353] = {
					"Freezing Spirit", -- [1]
					"Razorfen Downs", -- [2]
				},
				[14750] = {
					"Gurubashi Bat Rider", -- [1]
					"Zul'Gurub", -- [2]
				},
				[8657] = {
					"Hukku's Succubus", -- [1]
					"Sunken Temple", -- [2]
				},
				[134418] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[17370] = {
					"Laughing Skull Enforcer", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[47134] = {
					"Corpse Eater", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[19513] = {
					"Mutate Fear-Shrieker", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[27733] = {
					"Ghoul Minion", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[129547] = {
					"Blacktooth Knuckleduster", -- [1]
					"Freehold", -- [2]
				},
				[17626] = {
					"Laughing Skull Legionnaire", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[8897] = {
					"Doomforge Craftsman", -- [1]
					"Blackrock Depths", -- [2]
				},
				[19865] = {
					"Mutate Horror", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[8929] = {
					"Princess Moira Bronzebeard", -- [1]
					"Blackrock Depths", -- [2]
				},
				[17882] = {
					"The Black Stalker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[17978] = {
					"Thorngrin the Tender", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[9025] = {
					"Lord Roccor", -- [1]
					"Blackrock Depths", -- [2]
				},
				[9041] = {
					"Warder Stilgiss", -- [1]
					"Blackrock Depths", -- [2]
				},
				[28341] = {
					"Stratholme Resident", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[127757] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[18170] = {
					"Infinite Slayer", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[36516] = {
					"Soulguard Animator", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[26550] = {
					"Dragonflayer Deathseeker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[18394] = {
					"Ethereal Wraith", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[16411] = {
					"Spectral Chef", -- [1]
					"Karazhan", -- [2]
				},
				[5650] = {
					"Sandfury Witch Doctor", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[16507] = {
					"Shattered Hand Sentry", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[136214] = {
					"Windspeaker Heldis", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[16699] = {
					"Shattered Hand Reaver", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[5722] = {
					"Hazzas", -- [1]
					"Sunken Temple", -- [2]
				},
				[20857] = {
					"Arcatraz Defender", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[7785] = {
					"Ward of Zum'rah", -- [1]
					"Zul'Farrak", -- [2]
				},
				[11488] = {
					"Illyanna Ravenoak", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[5762] = {
					"Deviate Moccasin", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[13599] = {
					"Stolid Snapjaw", -- [1]
					"Maraudon", -- [2]
				},
				[9537] = {
					"Hurley Blackbreath", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[7849] = {
					"Mobile Alert System", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[17083] = {
					"Fel Orc Convert", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[19226] = {
					"Void Traveler", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[17307] = {
					"Vazruden the Herald", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[17371] = {
					"Shadowmoon Warlock", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[27638] = {
					"Azure Ring Guardian", -- [1]
					"The Oculus", -- [2]
				},
				[47136] = {
					"Unstable Ravager", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[27734] = {
					"Crypt Fiend", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[17723] = {
					"Bog Giant", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[23960] = {
					"Dragonflayer Runecaster", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[16126] = {
					"Unrelenting Rider", -- [1]
					"Naxxramas", -- [2]
				},
				[16142] = {
					"Bile Sludge", -- [1]
					"Naxxramas", -- [2]
				},
				[16174] = {
					"Greater Shadowbat", -- [1]
					"Karazhan", -- [2]
				},
				[132126] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
				},
				[6066] = {
					"Earthgrab Totem", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[18171] = {
					"Infinite Defiler", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[16286] = {
					"Spore", -- [1]
					"Naxxramas", -- [2]
				},
				[30549] = {
					"Baron Rivendare", -- [1]
					"Naxxramas", -- [2]
				},
				[18331] = {
					"Ethereal Darkcaster", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[14303] = {
					"Petrified Guardian", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[16412] = {
					"Ghostly Baker", -- [1]
					"Karazhan", -- [2]
				},
				[24664] = {
					"Kael'thas Sunstrider", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[24696] = {
					"Coilskar Witch", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[18587] = {
					"Frayer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[10385] = {
					"Ghostly Citizen", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[16700] = {
					"Shattered Hand Legionnaire", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[10417] = {
					"Venom Belcher", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[31125] = {
					"Archavon the Stone Watcher", -- [1]
					"Vault of Archavon", -- [2]
				},
				[45922] = {
					"Empyrean Assassin", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[4275] = {
					"Archmage Arugal", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[4291] = {
					"Scarlet Diviner", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4299] = {
					"Scarlet Chaplain", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[27447] = {
					"Varos Cloudstrider", -- [1]
					"The Oculus", -- [2]
				},
				[8658] = {
					"Hukku's Imp", -- [1]
					"Sunken Temple", -- [2]
				},
				[21466] = {
					"Harbinger Skyriss", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[27639] = {
					"Ring-Lord Sorceress", -- [1]
					"The Oculus", -- [2]
				},
				[47138] = {
					"Pustulant Monstrosity", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[6426] = {
					"Anguished Dead", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4427] = {
					"Ward Guardian", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[21818] = {
					"Infinite Whelp", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[8898] = {
					"Anvilrage Marshal", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[17820] = {
					"Durnholde Rifleman", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[17980] = {
					"Laj", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[20059] = {
					"Sunseeker Netherbinder", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[4515] = {
					"Death's Head Acolyte", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[9042] = {
					"Verek", -- [1]
					"Blackrock Depths", -- [2]
				},
				[4531] = {
					"Razorfen Beast Trainer", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4539] = {
					"Greater Kraul Bat", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[18172] = {
					"Infinite Saboteur", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[38567] = {
					"Phantom Hallucination", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[42789] = {
					"Stonecore Magmalord", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[13280] = {
					"Hydrospawn", -- [1]
					"Dire Maul", -- [2]
				},
				[36840] = {
					"Ymirjar Wrathbringer", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[28695] = {
					"Molten Golem", -- [1]
					"Halls of Lightning", -- [2]
				},
				[4627] = {
					"Arugal's Voidwalker", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[18524] = {
					"Angered Skeleton", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[24697] = {
					"Sister of Torment", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[24761] = {
					"Brightscale Wyrm", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[13456] = {
					"Noxxion's Spawn", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[22874] = {
					"Coilskar Harpooner", -- [1]
					"Black Temple", -- [2]
					"enUS", -- [3]
				},
				[20859] = {
					"Arcatraz Warder", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[11473] = {
					"Eldreth Spectre", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11489] = {
					"Tendris Warpwood", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[137511] = {
					"Bilge Rat Cutthroat", -- [1]
					"Siege of Boralus", -- [2]
				},
				[29271] = {
					"Ethereal Sphere", -- [1]
					"Violet Hold", -- [2]
				},
				[9554] = {
					"Hammered Patron", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[4811] = {
					"Twilight Aquamancer", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4819] = {
					"Blindlight Muckdweller", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4827] = {
					"Deep Pool Threshfin", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[12236] = {
					"Lord Vyletongue", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[17309] = {
					"Hellfire Watcher", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[12220] = {
					"Constrictor Vine", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[21467] = {
					"Harbinger Skyriss", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[27640] = {
					"Ring-Lord Conjurer", -- [1]
					"The Oculus", -- [2]
				},
				[47140] = {
					"Sorcerous Skeleton", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[11791] = {
					"Putridus Trickster", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[27736] = {
					"Patchwork Construct", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[11790] = {
					"Putridus Satyr", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[129559] = {
					"Cutwater Duelist", -- [1]
					"Freehold", -- [2]
				},
				[42333] = {
					"High Priestess Azil", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[45477] = {
					"Gust Soldier", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[11792] = {
					"Putridus Shadowstalker", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[125977] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[17725] = {
					"Underbog Lurker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[6225] = {
					"Mechano-Tank", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[16063] = {
					"Sir Zeliek", -- [1]
					"Naxxramas", -- [2]
				},
				[9938] = {
					"Magmus", -- [1]
					"Blackrock Depths", -- [2]
				},
				[43878] = {
					"Grand Vizier Ertan", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[8913] = {
					"Twilight Emissary", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[16127] = {
					"Spectral Trainee", -- [1]
					"Naxxramas", -- [2]
				},
				[6218] = {
					"Irradiated Slime", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[45412] = {
					"Lord Aurius Rivendare", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[16175] = {
					"Vampiric Shadowbat", -- [1]
					"Karazhan", -- [2]
				},
				[30285] = {
					"Eye of Taldaram", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[10082] = {
					"Zerillis", -- [1]
					"Zul'Farrak", -- [2]
				},
				[30391] = {
					"Healthy Mushroom", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[134701] = {
					"Blood Effigy", -- [1]
					"The Underrot", -- [2]
				},
				[43875] = {
					"Asaad", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[10383] = {
					"Broken Cadaver", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[137516] = {
					"Ashvane Invader", -- [1]
					"Siege of Boralus", -- [2]
				},
				[36522] = {
					"Soul Horror", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[43430] = {
					"Stonecore Berserker", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[43873] = {
					"Altairus", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[26553] = {
					"Dragonflayer Fanatic", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[42971] = {
					"Rockwing Gargoyle", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[18429] = {
					"Arcane Fiend", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[16414] = {
					"Ghostly Steward", -- [1]
					"Karazhan", -- [2]
				},
				[137517] = {
					"Ashvane Destroyer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[23961] = {
					"Dragonflayer Ironhelm", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[18557] = {
					"Phasing Cleric", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[14351] = {
					"Gordok Bushwacker", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[24762] = {
					"Sunblade Keeper", -- [1]
					"Magister's Terrace", -- [2]
				},
				[11121] = {
					"Black Guard Swordsmith", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[28920] = {
					"Stormforged Giant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[40023] = {
					"Defiled Earth Rager", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[40021] = {
					"Incendiary Spark", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[10418] = {
					"Risen Guardsman", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[19666] = {
					"Shadow Lord Xiraxis", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[7274] = {
					"Sandfury Executioner", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[45926] = {
					"Servant of Asaad", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[7290] = {
					"Shadowforge Sharpshooter", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[20988] = {
					"Sunseeker Engineer", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[3654] = {
					"Mutanus the Devourer", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[5267] = {
					"Unliving Atal'ai", -- [1]
					"Sunken Temple", -- [2]
				},
				[45917] = {
					"Cloud Prince", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[5283] = {
					"Nightmare Wanderer", -- [1]
					"Sunken Temple", -- [2]
				},
				[3670] = {
					"Lord Pythas", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[3674] = {
					"Skum", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[39960] = {
					"Deep Murloc Drudge", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[39708] = {
					"Twilight Flame Caller", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[5912] = {
					"Deviate Faerie Dragon", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[39705] = {
					"Ascendant Lord Obsidius", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[11441] = {
					"Gordok Brute", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[16124] = {
					"Unrelenting Trainee", -- [1]
					"Naxxramas", -- [2]
				},
				[7402] = {
					"Searing Totem VI", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[45915] = {
					"Armored Mistral", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[40925] = {
					"Tainted Sentry", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[27641] = {
					"Centrifuge Construct", -- [1]
					"The Oculus", -- [2]
				},
				[36907] = {
					"Wrathbone Siegesmith", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[135474] = {
					"Thistle Acolyte", -- [1]
					"Waycrest Manor", -- [2]
				},
				[27737] = {
					"Risen Zombie", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[40936] = {
					"Faceless Watcher", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[45924] = {
					"Turbulent Squall", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[47141] = {
					"Dread Scryer", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[13022] = {
					"Whip Lasher", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[17308] = {
					"Omor the Unscarred", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[17694] = {
					"Shadowmoon Darkcaster", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[17726] = {
					"Wrathfin Myrmidon", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[8896] = {
					"Shadowforge Peasant", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8899] = {
					"Doomforge Dragoon", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8915] = {
					"Twilight's Hammer Ambassador", -- [1]
					"Blackrock Depths", -- [2]
				},
				[11487] = {
					"Magister Kalendris", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[12076] = {
					"Lava Elemental", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[28153] = {
					"Snowflake", -- [1]
					"The Oculus", -- [2]
				},
				[39978] = {
					"Twilight Torturer", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				[11058] = {
					"Ezra Grimm", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[14399] = {
					"Arcane Torrent", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[46375] = {
					"Rowdy Troublemaker", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[14400] = {
					"Arcane Feedback", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[18994] = {
					"Infinite Executioner", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				[36842] = {
					"Wrathbone Coldwraith", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[44648] = {
					"Unyielding Behemoth", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[3862] = {
					"Slavering Worg", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[45672] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[22876] = {
					"Coilskar Soothsayer", -- [1]
					"Black Temple", -- [2]
					"enUS", -- [3]
				},
				[26554] = {
					"Dragonflayer Seer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[30680] = {
					"Onyx Brood General", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[18430] = {
					"Ethereal Apprentice", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[16415] = {
					"Skeletal Waiter", -- [1]
					"Karazhan", -- [2]
				},
				[3850] = {
					"Sorcerer Ashcrombe", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[3854] = {
					"Shadowfang Wolfguard", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[26746] = {
					"Crazed Mana-Wraith", -- [1]
					"The Nexus", -- [2]
				},
				[28825] = {
					"Cyclone", -- [1]
					"Halls of Lightning", -- [2]
				},
				[3866] = {
					"Vile Bat", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[3870] = {
					"Stone Sleeper", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[28921] = {
					"Hadronox", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[11490] = {
					"Zevrim Thornhoof", -- [1]
					"Dire Maul", -- [2]
				},
				[133432] = {
					"Venture Co. Alchemist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[3886] = {
					"Razorclaw the Butcher", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[11458] = {
					"Petrified Treant", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[7786] = {
					"Skeleton of Zum'rah", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[45928] = {
					"Executor of the Caliph", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[5755] = {
					"Deviate Viper", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[5763] = {
					"Nightmare Ectoplasm", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[29209] = {
					"Carrion Beetle", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[13601] = {
					"Tinkerer Gizlock", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[46248] = {
					"Riverpaw Basher", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[29305] = {
					"Moorabi", -- [1]
					"Gundrak", -- [2]
				},
				[17055] = {
					"Maexxna Spiderling", -- [1]
					"Naxxramas", -- [2]
				},
				[47143] = {
					"Spitebone Skeleton", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[19166] = {
					"Tempest-Forge Patroller", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[27386] = {
					"Avenging Spirit", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[11666] = {
					"Firewalker", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[11470] = {
					"Eldreth Sorcerer", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[44841] = {
					"Blight Beast", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[11388] = {
					"Witherbark Speaker", -- [1]
					"Zul'Gurub", -- [2]
				},
				[136249] = {
					"Guardian Elemental", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[26830] = {
					"Risen Drakkari Death Knight", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[11356] = {
					"Gurubashi Champion", -- [1]
					"Zul'Gurub", -- [2]
				},
				[27642] = {
					"Phantasmal Mammoth", -- [1]
					"The Oculus", -- [2]
				},
				[3974] = {
					"Houndmaster Loksey", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[40935] = {
					"Gilgoblin Hunter", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[11324] = {
					"Searing Blade Warlock", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[15936] = {
					"Heigan the Unclean", -- [1]
					"Naxxramas", -- [2]
				},
				[15952] = {
					"Maexxna", -- [1]
					"Naxxramas", -- [2]
				},
				[11372] = {
					"Razzashi Adder", -- [1]
					"Zul'Gurub", -- [2]
				},
				[26670] = {
					"Ymirjar Flesh Hunter", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[19710] = {
					"Gatewatcher Iron-Hand", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[17695] = {
					"Shattered Hand Assassin", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[133436] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[26638] = {
					"Risen Drakkari Bat Rider", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[16064] = {
					"Thane Korth'azz", -- [1]
					"Naxxramas", -- [2]
				},
				[20465] = {
					"Underbog Frenzy", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[11793] = {
					"Celebrian Dryad", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[14880] = {
					"Razzashi Skitterer", -- [1]
					"Zul'Gurub", -- [2]
				},
				[46249] = {
					"Riverpaw Slayer", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[39980] = {
					"Twilight Sadist", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[6035] = {
					"Razorfen Stalker", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[16176] = {
					"Shadowbeast", -- [1]
					"Karazhan", -- [2]
				},
				[30329] = {
					"Savage Cave Beast", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[36564] = {
					"Soulguard Bonecaster", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[19958] = {
					"White Seedling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[47131] = {
					"Frantic Geist", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[28410] = {
					"Dragonflayer Spiritualist", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[8138] = {
					"Sul'lithuz Broodling", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[12258] = {
					"Razorlash", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[20478] = {
					"Arcane Servant", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[14369] = {
					"Shen'dralar Zealot", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[6211] = {
					"Caverndeep Reaver", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[26555] = {
					"Scourge Hulk", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[14321] = {
					"Guard Fengus", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[18431] = {
					"Ethereal Beacon", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[47145] = {
					"Spitebone Guardian", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[28730] = {
					"Watcher Gashra", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[6219] = {
					"Corrosive Lurker", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[18559] = {
					"Phasing Stalker", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[28826] = {
					"Stormfury Revenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[16704] = {
					"Shattered Hand Sharpshooter", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[15146] = {
					"Mad Voidwalker", -- [1]
					"Zul'Gurub", -- [2]
				},
				[28922] = {
					"Anub'ar Crusher", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[10387] = {
					"Vengeful Phantom", -- [1]
					"Stratholme", -- [2]
				},
				[6227] = {
					"Mechano-Frostwalker", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[6235] = {
					"Electrocutioner 6000", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[6243] = {
					"Gelihast", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[16171] = {
					"Coldmist Widow", -- [1]
					"Karazhan", -- [2]
				},
				[45930] = {
					"Minister of Air", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[17938] = {
					"Coilfang Observer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[20990] = {
					"Bloodwarder Physician", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[11357] = {
					"Son of Hakkar", -- [1]
					"Zul'Gurub", -- [2]
				},
				[3865] = {
					"Shadow Charger", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[46250] = {
					"Riverpaw Poacher", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[29306] = {
					"Gal'darah", -- [1]
					"Gundrak", -- [2]
				},
				[18558] = {
					"Phasing Sorcerer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[21904] = {
					"Avian Warhawk", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[19167] = {
					"Bloodwarder Slayer", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[4292] = {
					"Scarlet Protector", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4300] = {
					"Scarlet Wizard", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4308] = {
					"Unfettered Spirit", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[44715] = {
					"Vicious Mindlasher", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[17280] = {
					"Shattered Hand Warhound", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[10400] = {
					"Thuzadin Necromancer", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[8877] = {
					"Sandfury Zealot", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[36886] = {
					"Geist Ambusher", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[27483] = {
					"King Dred", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[47146] = {
					"Spitebone Flayer", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[10876] = {
					"Undead Scarab", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[6427] = {
					"Haunting Phantasm", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[29818] = {
					"Deathcharger Steed", -- [1]
					"Naxxramas", -- [2]
				},
				[30452] = {
					"Tenebron", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[21694] = {
					"Bog Overlord", -- [1]
					"Coilfang: The Steamvault", -- [2]
				},
				[38172] = {
					"Phantom Mage", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[4420] = {
					"Overlord Ramtusk", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[17728] = {
					"Murkblood Tribesman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[11469] = {
					"Eldreth Seether", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[8900] = {
					"Doomforge Arcanasmith", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[23965] = {
					"Frost Tomb", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[10398] = {
					"Thuzadin Shadowcaster", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[37729] = {
					"Wrathbone Reaver", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[17952] = {
					"Darkwater Crocolisk", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[39982] = {
					"Crazed Mage", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[8996] = {
					"Voidwalker Minion", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[46251] = {
					"Riverpaw Looter", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[9028] = {
					"Grizzle", -- [1]
					"Blackrock Depths", -- [2]
				},
				[46379] = {
					"Vicious Thug", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[4532] = {
					"Razorfen Beastmaster", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4540] = {
					"Scarlet Monk", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[18176] = {
					"Tainted Earthgrab Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[16984] = {
					"Plagued Warrior", -- [1]
					"Naxxramas", -- [2]
				},
				[14509] = {
					"High Priest Thekal", -- [1]
					"Zul'Gurub", -- [2]
				},
				[14826] = {
					"Sacrificed Troll", -- [1]
					"Zul'Gurub", -- [2]
				},
				[136005] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[32665] = {
					"Crystalline Tangler", -- [1]
					"The Nexus", -- [2]
				},
				[13282] = {
					"Noxxion", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[30682] = {
					"Onyx Flight Captain", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[26620] = {
					"Drakkari Guardian", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[17721] = {
					"Coilfang Engineer", -- [1]
					"Coilfang: The Steamvault", -- [2]
				},
				[28731] = {
					"Watcher Silthik", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[26716] = {
					"Azure Warder", -- [1]
					"The Nexus", -- [2]
				},
				[136006] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[11347] = {
					"Zealot Lor'Khan", -- [1]
					"Zul'Gurub", -- [2]
				},
				[28859] = {
					"Malygos", -- [1]
					"The Eye of Eternity", -- [2]
				},
				[28923] = {
					"Loken", -- [1]
					"Halls of Lightning", -- [2]
				},
				[15489] = {
					"Mana Spring Totem V", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[36272] = {
					"Apothecary Frye", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[18848] = {
					"Malicious Instructor", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[11459] = {
					"Ironbark Protector", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11475] = {
					"Eldreth Phantasm", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[45932] = {
					"Skyfall Star", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[36841] = {
					"Fallen Warrior", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[9476] = {
					"Watchman Doomgrip", -- [1]
					"Blackrock Depths", -- [2]
				},
				[17942] = {
					"Quagmirran", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[8909] = {
					"Fireguard", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[27228] = {
					"Jormungar Worm", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[29307] = {
					"Drakkari Colossus", -- [1]
					"Gundrak", -- [2]
				},
				[11667] = {
					"Flameguard", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[7343] = {
					"Splinterbone Skeleton", -- [1]
					"Razorfen Downs", -- [2]
				},
				[19168] = {
					"Sunseeker Astromage", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[21136] = {
					"Infinite Chronomancer", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[4820] = {
					"Blindlight Oracle", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[5280] = {
					"Nightmare Wyrmkin", -- [1]
					"Sunken Temple", -- [2]
				},
				[17281] = {
					"Bonechewer Ripper", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[31214] = {
					"Sartharion Twilight Whelp", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[4852] = {
					"Stonevault Oracle", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[17377] = {
					"Keli'dan the Breaker", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[27644] = {
					"Phantasmal Wolf", -- [1]
					"The Oculus", -- [2]
				},
				[8477] = {
					"Skeletal Servant", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[4436] = {
					"Razorfen Quilguard", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[14507] = {
					"High Priest Venoxis", -- [1]
					"Zul'Gurub", -- [2]
				},
				[17537] = {
					"Vazruden", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[15953] = {
					"Grand Widow Faerlina", -- [1]
					"Naxxramas", -- [2]
				},
				[21695] = {
					"Tidal Surger", -- [1]
					"Coilfang: The Steamvault", -- [2]
				},
				[43438] = {
					"Corborus", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[19712] = {
					"Mechanar Driller", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[16017] = {
					"Patchwork Golem", -- [1]
					"Naxxramas", -- [2]
				},
				[17729] = {
					"Murkblood Spearman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[27961] = {
					"Dark Rune Worker", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[16065] = {
					"Lady Blaumeux", -- [1]
					"Naxxramas", -- [2]
				},
				[19872] = {
					"Lady Catriona Von'Indi", -- [1]
					"Karazhan", -- [2]
				},
				[9956] = {
					"Shadowforge Flame Keeper", -- [1]
					"Blackrock Depths", -- [2]
				},
				[20912] = {
					"Harbinger Skyriss", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[20880] = {
					"Eredar Deathbringer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[16145] = {
					"Death Knight Captain", -- [1]
					"Naxxramas", -- [2]
				},
				[12099] = {
					"Firesworn", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[16177] = {
					"Dreadbeast", -- [1]
					"Karazhan", -- [2]
				},
				[16193] = {
					"Skeletal Smith", -- [1]
					"Naxxramas", -- [2]
				},
				[46381] = {
					"Shifty Thief", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[31218] = {
					"Acolyte of Shadron", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[36892] = {
					"Ymirjar Deathbringer", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[18177] = {
					"Tainted Stoneskin Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[38177] = {
					"Shadowy Mercenary", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[51659] = {
					"Scarlet Monk", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[18641] = {
					"Cabal Familiar", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[11360] = {
					"Zulian Cub", -- [1]
					"Zul'Gurub", -- [2]
				},
				[36658] = {
					"Scourgelord Tyrannus", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[26621] = {
					"Ghoul Tormentor", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[14322] = {
					"Stomper Kreeg", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[27962] = {
					"Dark Rune Elementalist", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[28732] = {
					"Anub'ar Warrior", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[14386] = {
					"Wandering Eye of Kilrogg", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[138061] = {
					"Venture Co. Longshoreman", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[19964] = {
					"Red Seedling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[28860] = {
					"Sartharion", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[39665] = {
					"Rom'ogg Bonecrusher", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[24830] = {
					"Stonevault Pillager", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7175] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7267] = {
					"Chief Ukorz Sandscalp", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[10420] = {
					"Risen Initiate", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10436] = {
					"Baroness Anastari", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[20896] = {
					"Ethereum Slayer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[39985] = {
					"Mad Prisoner", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[7291] = {
					"Galgann Firehammer", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[46254] = {
					"Hogger", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[10516] = {
					"The Unforgiven", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[50284] = {
					"Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				[138063] = {
					"Posh Vacationer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[29340] = {
					"Anub'ar Brood Keeper", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[7347] = {
					"Boneflayer Ghoul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[7355] = {
					"Tuten'kash", -- [1]
					"Razorfen Downs", -- [2]
				},
				[27389] = {
					"Dalronn the Controller", -- [1]
					"Utgarde Keep", -- [2]
				},
				[198706] = {
					"Mirror Image", -- [1]
					"The Nexus", -- [2]
				},
				[51660] = {
					"Scarlet Chaplain", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[36723] = {
					"Frostsworn General", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[138064] = {
					"Posh Vacationer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[16297] = {
					"Mutated Grub", -- [1]
					"Naxxramas", -- [2]
				},
				[40817] = {
					"Shadow of Obsidius", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[14834] = {
					"Hakkar", -- [1]
					"Zul'Gurub", -- [2]
				},
				[27645] = {
					"Phantasmal Cloudscraper", -- [1]
					"The Oculus", -- [2]
				},
				[27709] = {
					"Drakkari Invader", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[14882] = {
					"Atal'ai Mistress", -- [1]
					"Zul'Gurub", -- [2]
				},
				[47137] = {
					"Mindless Horror", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[29820] = {
					"Drakkari God Hunter", -- [1]
					"Gundrak", -- [2]
				},
				[20208] = {
					"Mennu's Healing Ward", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[21696] = {
					"Steam Surger", -- [1]
					"Coilfang: The Steamvault", -- [2]
				},
				[23775] = {
					"Head of the Horseman", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[19713] = {
					"Mechanar Wrecker", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[16573] = {
					"Crypt Guard", -- [1]
					"Naxxramas", -- [2]
				},
				[17730] = {
					"Murkblood Healer", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[17826] = {
					"Swamplord Musel'ek", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[8901] = {
					"Anvilrage Reservist", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[19873] = {
					"Lord Crispin Ference", -- [1]
					"Karazhan", -- [2]
				},
				[8933] = {
					"Cave Creeper", -- [1]
					"Blackrock Depths", -- [2]
				},
				[138187] = {
					"Grotesque Horror", -- [1]
					"The Underrot", -- [2]
				},
				[19969] = {
					"Green Seedling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[30071] = {
					"Stitched Colossus", -- [1]
					"Naxxramas", -- [2]
				},
				[28236] = {
					"Azure Ring Captain", -- [1]
					"The Oculus", -- [2]
					"enUS", -- [3]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[19512] = {
					"Nethervine Reaper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[46383] = {
					"Randolph Moloch", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[7603] = {
					"Leprous Assistant", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[24078] = {
					"Dragonflayer Metalworker", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[32273] = {
					"Infinite Corruptor", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[11043] = {
					"Risen Monk", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[7023] = {
					"Obsidian Sentinel", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[29364] = {
					"Void Sentry", -- [1]
					"Violet Hold", -- [2]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[16406] = {
					"Phantom Attendant", -- [1]
					"Karazhan", -- [2]
				},
				[28733] = {
					"Anub'ar Shadowcaster", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[36788] = {
					"Deathwhisper Necrolyte", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[20481] = {
					"Raging Flames", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[36916] = {
					"Ghoul Minion", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[26686] = {
					"Ferocious Rhino", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[17306] = {
					"Watchkeeper Gargolmar", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[16803] = {
					"Death Knight Understudy", -- [1]
					"Naxxramas", -- [2]
				},
				[26782] = {
					"Crystalline Keeper", -- [1]
					"The Nexus", -- [2]
				},
				[7787] = {
					"Sandfury Slave", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[11380] = {
					"Jin'do the Hexxer", -- [1]
					"Zul'Gurub", -- [2]
				},
				[28925] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[29213] = {
					"Anub'ar Darter", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[5716] = {
					"Zul'Lor", -- [1]
					"Sunken Temple", -- [2]
				},
				[11444] = {
					"Gordok Mage-Lord", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11460] = {
					"Alzzin's Minion", -- [1]
					"Dire Maul", -- [2]
				},
				[11476] = {
					"Skeletal Highborne", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[7795] = {
					"Hydromancer Velratha", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[5756] = {
					"Deviate Venomwing", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[39987] = {
					"Evolved Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[31260] = {
					"Ymirjar Skycaller", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[43214] = {
					"Slabhide", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[16698] = {
					"Corpse Scarab", -- [1]
					"Naxxramas", -- [2]
				},
				[29309] = {
					"Elder Nadox", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[8911] = {
					"Fireguard Destroyer", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[27964] = {
					"Dark Rune Scholar", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[16385] = {
					"Lightning Totem", -- [1]
					"Naxxramas", -- [2]
				},
				[27390] = {
					"Skarvald the Constructor", -- [1]
					"Utgarde Keep", -- [2]
				},
				[11668] = {
					"Firelord", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[7345] = {
					"Splinterbone Captain", -- [1]
					"Razorfen Downs", -- [2]
				},
				[16156] = {
					"Dark Touched Warrior", -- [1]
					"Naxxramas", -- [2]
				},
				[26622] = {
					"Drakkari Bat", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[36661] = {
					"Rimefang", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[9040] = {
					"Dope'rel", -- [1]
					"Blackrock Depths", -- [2]
				},
				[4824] = {
					"Aku'mai Fisher", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[29742] = {
					"Snake Wrap", -- [1]
					"Gundrak", -- [2]
				},
				[135258] = {
					"Irontide Marauder", -- [1]
					"Siege of Boralus", -- [2]
				},
				[27742] = {
					"Infinite Adversary", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[41139] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[18497] = {
					"Auchenai Monk", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[15954] = {
					"Noth the Plaguebringer", -- [1]
					"Naxxramas", -- [2]
				},
				[11492] = {
					"Alzzin the Wildshaper", -- [1]
					"Dire Maul", -- [2]
				},
				[29304] = {
					"Slad'ran", -- [1]
					"Gundrak", -- [2]
				},
				[16034] = {
					"Plague Beast", -- [1]
					"Naxxramas", -- [2]
				},
				[16018] = {
					"Bile Retcher", -- [1]
					"Naxxramas", -- [2]
				},
				[17731] = {
					"Fen Ray", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[8035] = {
					"Dark Iron Land Mine", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[19874] = {
					"Baron Rafe Dreuger", -- [1]
					"Karazhan", -- [2]
				},
				[16236] = {
					"Eye Stalk", -- [1]
					"Naxxramas", -- [2]
				},
				[26672] = {
					"Bloodthirsty Tundra Wolf", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[27281] = {
					"Ritual Channeler", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[16146] = {
					"Death Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[7272] = {
					"Theka the Martyr", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[16178] = {
					"Phase Hound", -- [1]
					"Karazhan", -- [2]
				},
				[12100] = {
					"Lava Reaver", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[131817] = {
					"Cragmaw the Infested", -- [1]
					"The Underrot", -- [2]
				},
				[43917] = {
					"Rock Borer", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[37712] = {
					"Deathwhisper Shadowcaster", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[18179] = {
					"Corrupted Nova Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[16290] = {
					"Fallout Slime", -- [1]
					"Naxxramas", -- [2]
				},
				[44658] = {
					"Deep Murloc Invader", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[130436] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[30621] = {
					"Plin", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[8179] = {
					"Greater Healing Ward", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[14323] = {
					"Guard Slip'kik", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[26623] = {
					"Scourge Brute", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[6212] = {
					"Dark Iron Agent", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[18499] = {
					"Unliving Sorcerer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[6220] = {
					"Irradiated Horror", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[10405] = {
					"Plague Ghoul", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[134599] = {
					"Imbued Stormcaller", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[10421] = {
					"Risen Defender", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10437] = {
					"Nerub'enkan", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[28926] = {
					"Spark of Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[6228] = {
					"Dark Iron Ambassador", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[14515] = {
					"High Priestess Arlokk", -- [1]
					"Zul'Gurub", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[20898] = {
					"Gargantuan Abyssal", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[29118] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[11323] = {
					"Searing Blade Enforcer", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[29335] = {
					"Anub'ar Webspinner", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[29214] = {
					"Anub'ar Assassin", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[26668] = {
					"Svala Sorrowgrave", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[32786] = {
					"Rotted Troll Corpse", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[29310] = {
					"Jedoga Shadowseeker", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[28684] = {
					"Krik'thir the Gatewatcher", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[30666] = {
					"Azure Captain", -- [1]
					"Violet Hold", -- [2]
				},
				[4293] = {
					"Scarlet Scryer", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[19203] = {
					"Syth Fire Elemental", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[4301] = {
					"Scarlet Centurion", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[36535] = {
					"Corrupted Soul Fragment", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[21346] = {
					"Sightless Eye", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
					"enUS", -- [3]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				[46962] = {
					"Baron Ashbury", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[29630] = {
					"Fanged Pit Viper", -- [1]
					"Gundrak", -- [2]
				},
				[17380] = {
					"Broggok", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[27647] = {
					"Phantasmal Ogre", -- [1]
					"The Oculus", -- [2]
				},
				[17540] = {
					"Fiendish Hound", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[14883] = {
					"Voodoo Slave", -- [1]
					"Zul'Gurub", -- [2]
				},
				[27743] = {
					"Infinite Hunter", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[29822] = {
					"Drakkari Fire Weaver", -- [1]
					"Gundrak", -- [2]
				},
				[12206] = {
					"Primordial Behemoth", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[15043] = {
					"Zulian Crocolisk", -- [1]
					"Zul'Gurub", -- [2]
				},
				[27871] = {
					"Flesheating Ghoul", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[4421] = {
					"Charlga Razorflank", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[29982] = {
					"Drakkari Raider", -- [1]
					"Gundrak", -- [2]
				},
				[4437] = {
					"Razorfen Warden", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[8886] = {
					"Deviate Python", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[6500] = {
					"Devilsaur", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[19875] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Karazhan", -- [2]
				},
				[17860] = {
					"Durnholde Veteran", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[10997] = {
					"Willey Hopebreaker", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[17819] = {
					"Durnholde Sentry", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[39990] = {
					"Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[27729] = {
					"Enraging Ghoul", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[18096] = {
					"Epoch Hunter", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[4517] = {
					"Death's Head Priest", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4525] = {
					"Razorfen Earthbreaker", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[44404] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[4541] = {
					"Blood of Agamaggan", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[9036] = {
					"Vile'rel", -- [1]
					"Blackrock Depths", -- [2]
				},
				[27965] = {
					"Dark Rune Shaper", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[18328] = {
					"Sethekk Oracle", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[131858] = {
					"Thornguard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[46963] = {
					"Lord Walden", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[30622] = {
					"Vermin", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[18404] = {
					"Bloodwarder Steward", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[16389] = {
					"Spectral Apprentice", -- [1]
					"Karazhan", -- [2]
				},
				[24690] = {
					"Wretched Husk", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[18500] = {
					"Unliving Cleric", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[8317] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"Sunken Temple", -- [2]
				},
				[17840] = {
					"Durnholde Tracking Hound", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[10955] = {
					"Summoned Water Elemental", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[11365] = {
					"Zulian Panther", -- [1]
					"Zul'Gurub", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[27979] = {
					"Forged Iron Trogg", -- [1]
					"Halls of Stone", -- [2]
				},
				[45620] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[11477] = {
					"Rotting Highborne", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11445] = {
					"Gordok Captain", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[31134] = {
					"Cyanigosa", -- [1]
					"Violet Hold", -- [2]
				},
				[29119] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[28340] = {
					"Stratholme Citizen", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[8916] = {
					"Arena Spectator", -- [1]
					"Blackrock Depths", -- [2]
				},
				[8912] = {
					"Twilight's Hammer Torturer", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[13596] = {
					"Rotgrip", -- [1]
					"Maraudon", -- [2]
				},
				[46260] = {
					"Searing Destroyer", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[29311] = {
					"Herald Volazj", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[4821] = {
					"Skittering Crustacean", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4853] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[19204] = {
					"Syth Frost Elemental", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[4813] = {
					"Twilight Shadowmage", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[4829] = {
					"Aku'mai", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[19428] = {
					"Cobalt Serpent", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[36879] = {
					"Plagueborn Horror", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[46964] = {
					"Lord Godfrey", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[17381] = {
					"The Maker", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[27648] = {
					"Phantasmal Naga", -- [1]
					"The Oculus", -- [2]
				},
				[17727] = {
					"Wrathfin Sentry", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[17477] = {
					"Hellfire Imp", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[27744] = {
					"Infinite Agent", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[23682] = {
					"Headless Horseman", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[134251] = {
					"Seneschal M'bara", -- [1]
					"Kings' Rest", -- [2]
				},
				[14825] = {
					"Withered Mistress", -- [1]
					"Zul'Gurub", -- [2]
				},
				[21148] = {
					"Rift Keeper", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[19716] = {
					"Mechanar Tinkerer", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[21891] = {
					"Avian Ripper", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[23970] = {
					"Vrykul Skeleton", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[7012] = {
					"Earthen Sculptor", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[30111] = {
					"Twilight Worshipper", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[20866] = {
					"Soul Devourer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[9156] = {
					"Ambassador Flamelash", -- [1]
					"Blackrock Depths", -- [2]
				},
				[7076] = {
					"Earthen Guardian", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[17957] = {
					"Coilfang Champion", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[16163] = {
					"Death Knight Cavalier", -- [1]
					"Naxxramas", -- [2]
				},
				[46261] = {
					"Enraged Fire Elemental", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[12101] = {
					"Lava Surger", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[27963] = {
					"Dark Rune Theurgist", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[16243] = {
					"Plague Slime", -- [1]
					"Naxxramas", -- [2]
				},
				[5053] = {
					"Deviate Crocolisk", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[26684] = {
					"Ravenous Furbolg", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[30623] = {
					"Vermin", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[14308] = {
					"Ferra", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[26625] = {
					"Darkweb Recluse", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[36666] = {
					"Spectral Warden", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[18373] = {
					"Exarch Maladaar", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[14324] = {
					"Cho'Rush the Observer", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[16390] = {
					"Deathchill Servant", -- [1]
					"Naxxramas", -- [2]
				},
				[10438] = {
					"Maleki the Pallid", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[18501] = {
					"Unliving Stalker", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[24674] = {
					"Phoenix", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[14532] = {
					"Razzashi Venombrood", -- [1]
					"Zul'Gurub", -- [2]
				},
				[30879] = {
					"Planar Anomaly", -- [1]
					"The Oculus", -- [2]
				},
				[7268] = {
					"Sandfury Guardian", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[7228] = {
					"Ironaya", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[52019] = {
					"Skyfall Star", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[10390] = {
					"Skeletal Guardian", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10406] = {
					"Ghoul Ravener", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10422] = {
					"Risen Sorcerer", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[20868] = {
					"Entropic Eye", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[7276] = {
					"Zul'Farrak Dead Hero", -- [1]
					"Zul'Farrak", -- [2]
				},
				[29120] = {
					"Anub'arak", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[18341] = {
					"Pandemonius", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[3673] = {
					"Lord Serpentis", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[29216] = {
					"Anub'ar Guardian", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[7332] = {
					"Withered Spearhide", -- [1]
					"Razorfen Downs", -- [2]
				},
				[46262] = {
					"Rumbling Earth", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[29312] = {
					"Lavanthor", -- [1]
					"Violet Hold", -- [2]
				},
				[7340] = {
					"Skeletal Shadowcaster", -- [1]
					"Razorfen Downs", -- [2]
				},
				[7348] = {
					"Thorn Eater Ghoul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[8567] = {
					"Glutton", -- [1]
					"Razorfen Downs", -- [2]
				},
				[19205] = {
					"Syth Arcane Elemental", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[40825] = {
					"Erunak Stonespeaker", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[40633] = {
					"Naz'jar Honor Guard", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[7396] = {
					"Earthen Stonebreaker", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[42808] = {
					"Stonecore Flayer", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[134514] = {
					"Abyssal Cultist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[19429] = {
					"Avian Darkhawk", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[27649] = {
					"Phantasmal Murloc", -- [1]
					"The Oculus", -- [2]
				},
				[11456] = {
					"Wildspawn Shadowstalker", -- [1]
					"Dire Maul", -- [2]
				},
				[17478] = {
					"Bleeding Hollow Scryer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[19557] = {
					"Greater Frayer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[13021] = {
					"Warpwood Crusher", -- [1]
					"Dire Maul", -- [2]
				},
				[39994] = {
					"Conflagration", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[11030] = {
					"Mindless Undead", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[29920] = {
					"Ruins Dweller", -- [1]
					"Gundrak", -- [2]
				},
				[17670] = {
					"Shattered Hand Houndmaster", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[24684] = {
					"Sunblade Blood Knight", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[17734] = {
					"Underbog Lord", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[28961] = {
					"Titanium Siegebreaker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[8903] = {
					"Anvilrage Captain", -- [1]
					"Blackrock Depths", -- [2]
				},
				[30624] = {
					"Kozmaker", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[17862] = {
					"Captain Skarloc", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[30176] = {
					"Ahn'kahar Guardian", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[3851] = {
					"Shadowfang Whitescalp", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[17958] = {
					"Coilfang Defender", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[17990] = {
					"Underbog Mushroom", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[46263] = {
					"Slag Fury", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[11318] = {
					"Ragefire Trogg", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[13141] = {
					"Deeprot Stomper", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[7604] = {
					"Sergeant Bly", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[16360] = {
					"Zombie Chow", -- [1]
					"Naxxramas", -- [2]
				},
				[11142] = {
					"Undead Postman", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[3863] = {
					"Lupine Horror", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[36476] = {
					"Ick", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[50869] = {
					"Razorclaw the Butcher", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[31008] = {
					"Azure Invader", -- [1]
					"Violet Hold", -- [2]
				},
				[26530] = {
					"Salramm the Fleshcrafter", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[13285] = {
					"Death Lash", -- [1]
					"Dire Maul", -- [2]
				},
				[30688] = {
					"Disciple of Shadron", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[26626] = {
					"Scourge Reanimator", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[11462] = {
					"Warpwood Treant", -- [1]
					"Dire Maul", -- [2]
				},
				[26690] = {
					"Ymirjar Warrior", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[26722] = {
					"Azure Magus", -- [1]
					"The Nexus", -- [2]
				},
				[3859] = {
					"Shadowfang Ragetooth", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[11350] = {
					"Gurubashi Axe Thrower", -- [1]
					"Zul'Gurub", -- [2]
				},
				[9319] = {
					"Houndmaster Grebmar", -- [1]
					"Blackrock Depths", -- [2]
				},
				[11382] = {
					"Bloodlord Mandokir", -- [1]
					"Zul'Gurub", -- [2]
				},
				[3875] = {
					"Haunted Servitor", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[5709] = {
					"Shade of Eranikus", -- [1]
					"Sunken Temple", -- [2]
				},
				[5717] = {
					"Mijan", -- [1]
					"Sunken Temple", -- [2]
				},
				[3887] = {
					"Baron Silverlaine", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[20869] = {
					"Arcatraz Sentinel", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[7788] = {
					"Sandfury Drudge", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[7796] = {
					"Nekrum Gutchewer", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[29153] = {
					"Animated Bones", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[31104] = {
					"Ahn'kahar Watcher", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[29217] = {
					"Anub'ar Venomancer", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[18493] = {
					"Auchenai Soulpriest", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[46264] = {
					"Lord Overheat", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[29313] = {
					"Ichoron", -- [1]
					"Violet Hold", -- [2]
				},
				[3927] = {
					"Wolf Master Nandos", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[21140] = {
					"Rift Lord", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[18419] = {
					"Bloodwarder Greenkeeper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[19206] = {
					"Syth Shadow Elemental", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[30416] = {
					"Bound Fire Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[4297] = {
					"Scarlet Conjuror", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[17464] = {
					"Shattered Hand Gladiator", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[6047] = {
					"Aqua Guardian", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[42810] = {
					"Crystalspawn Giant", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[18708] = {
					"Murmur", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[16152] = {
					"Attumen the Huntsman", -- [1]
					"Karazhan", -- [2]
				},
				[27650] = {
					"Phantasmal Air", -- [1]
					"The Oculus", -- [2]
				},
				[3975] = {
					"Herod", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[18495] = {
					"Auchenai Vindicator", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[11830] = {
					"Hakkari Priest", -- [1]
					"Zul'Gurub", -- [2]
				},
				[11520] = {
					"Taragaman the Hungerer", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[15956] = {
					"Anub'Rekhan", -- [1]
					"Naxxramas", -- [2]
				},
				[17735] = {
					"Wrathfin Warrior", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[16036] = {
					"Frenzied Bat", -- [1]
					"Naxxramas", -- [2]
				},
				[17671] = {
					"Shattered Hand Champion", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[16020] = {
					"Mad Scientist", -- [1]
					"Naxxramas", -- [2]
				},
				[27970] = {
					"Raging Construct", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[11457] = {
					"Wildspawn Hellcaller", -- [1]
					"Dire Maul", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[8910] = {
					"Blazing Fireguard", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[17959] = {
					"Coilfang Slavehandler", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[17991] = {
					"Rokmar the Crackler", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[6021] = {
					"Boar Spirit", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[16148] = {
					"Spectral Death Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[16164] = {
					"Shade of Naxxramas", -- [1]
					"Naxxramas", -- [2]
				},
				[5715] = {
					"Hukku", -- [1]
					"Sunken Temple", -- [2]
				},
				[18371] = {
					"Shirrak the Dead Watcher", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				[18343] = {
					"Tavarok", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[16244] = {
					"Infectious Ghoul", -- [1]
					"Naxxramas", -- [2]
				},
				[18503] = {
					"Phantasmal Possessor", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[26723] = {
					"Keristrasza", -- [1]
					"The Nexus", -- [2]
				},
				[36478] = {
					"Soulguard Watchman", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[8156] = {
					"Servant of Antu'sul", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[28546] = {
					"Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[30625] = {
					"Vermin", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[15928] = {
					"Thaddius", -- [1]
					"Naxxramas", -- [2]
				},
				[14325] = {
					"Captain Kromcrush", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[26627] = {
					"Crystal Handler", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[16424] = {
					"Spectral Sentry", -- [1]
					"Karazhan", -- [2]
				},
				[26691] = {
					"Ymirjar Witch Doctor", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[14389] = {
					"Netherwalker", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[29308] = {
					"Prince Taldaram", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[3976] = {
					"Scarlet Commander Mograine", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[18631] = {
					"Cabal Cultist", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[18663] = {
					"Maiden of Discipline", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[20902] = {
					"Sargeron Hellcaller", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[10391] = {
					"Skeletal Berserker", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10407] = {
					"Fleshflayer Ghoul", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10423] = {
					"Risen Priest", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[20870] = {
					"Zereketh the Unbound", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[16808] = {
					"Warchief Kargath Bladefist", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[10439] = {
					"Ramstein the Gorger", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[17669] = {
					"Rabid Warhound", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[4538] = {
					"Kraul Bat", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[18983] = {
					"Blackfang Tarantula", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[21062] = {
					"Nether Wraith", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[42428] = {
					"Devout Follower", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[29314] = {
					"Zuramat the Obliterator", -- [1]
					"Violet Hold", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[4278] = {
					"Commander Springvale", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[4286] = {
					"Scarlet Soldier", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4294] = {
					"Scarlet Sorcerer", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4302] = {
					"Scarlet Champion", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[3861] = {
					"Bleak Worg", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				[29117] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[40765] = {
					"Commander Ulthok", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[14821] = {
					"Razzashi Raptor", -- [1]
					"Zul'Gurub", -- [2]
				},
				[8902] = {
					"Shadowforge Citizen", -- [1]
					"Blackrock Depths", -- [2]
				},
				[27651] = {
					"Phantasmal Fire", -- [1]
					"The Oculus", -- [2]
				},
				[20897] = {
					"Ethereum Wave-Caster", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[7275] = {
					"Shadowpriest Sezz'ziz", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[8920] = {
					"Weapon Technician", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[29826] = {
					"Drakkari Medicine Man", -- [1]
					"Gundrak", -- [2]
				},
				[29321] = {
					"Ichor Globule", -- [1]
					"Violet Hold", -- [2]
				},
				[21702] = {
					"Ethereum Life-Binder", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[17007] = {
					"Lady Keira Berrybuck", -- [1]
					"Karazhan", -- [2]
				},
				[4422] = {
					"Agathelos the Raging", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[13142] = {
					"Deeprot Tangler", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[4438] = {
					"Razorfen Spearhide", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[6493] = {
					"Illusionary Phantasm", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[8904] = {
					"Shadowforge Senator", -- [1]
					"Blackrock Depths", -- [2]
				},
				[30114] = {
					"Twilight Initiate", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[5775] = {
					"Verdan the Everliving", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[30178] = {
					"Ahn'kahar Swarmer ", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[24069] = {
					"Dragonflayer Bonecrusher", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[17960] = {
					"Coilfang Soothsayer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[28547] = {
					"Storming Vortex", -- [1]
					"Halls of Lightning", -- [2]
				},
				[32353] = {
					"Archavon Warder", -- [1]
					"Vault of Archavon", -- [2]
				},
				[9032] = {
					"Hedrum the Creeper", -- [1]
					"Blackrock Depths", -- [2]
				},
				[4526] = {
					"Wind Howler", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4534] = {
					"Tamed Hyena", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4542] = {
					"High Inquisitor Fairbanks", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[28419] = {
					"Frenzied Geist", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[18344] = {
					"Nexus-Prince Shaffar", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[18472] = {
					"Darkweaver Syth", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[28835] = {
					"Stormforged Construct", -- [1]
					"Halls of Lightning", -- [2]
				},
				[18312] = {
					"Ethereal Spellbinder", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[26532] = {
					"Chrono-Lord Epoch", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[11466] = {
					"Highborne Summoner", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11450] = {
					"Gordok Reaver", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[16425] = {
					"Phantom Guardsman", -- [1]
					"Karazhan", -- [2]
				},
				[26692] = {
					"Ymirjar Harpooner", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[11319] = {
					"Ragefire Shaman", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[5719] = {
					"Morphaz", -- [1]
					"Sunken Temple", -- [2]
				},
				[11351] = {
					"Gurubashi Headhunter", -- [1]
					"Zul'Gurub", -- [2]
				},
				[18632] = {
					"Cabal Executioner", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[4528] = {
					"Stone Rumbler", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[28249] = {
					"Devouring Ghoul", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[31010] = {
					"Azure Mage Slayer", -- [1]
					"Violet Hold", -- [2]
				},
				[9016] = {
					"Bael'Gar", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[3868] = {
					"Blood Seeker", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[39679] = {
					"Corla, Herald of Twilight", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[16809] = {
					"Warbringer O'mrogg", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[3864] = {
					"Fel Steed", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[11338] = {
					"Hakkari Shadowcaster", -- [1]
					"Zul'Gurub", -- [2]
				},
				[126919] = {
					"Irontide Stormcaller", -- [1]
					"Freehold", -- [2]
				},
				[26730] = {
					"Mage Slayer", -- [1]
					"The Nexus", -- [2]
				},
				[19016] = {
					"Hellfire Familiar", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[4523] = {
					"Razorfen Groundshaker", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[29315] = {
					"Erekem", -- [1]
					"Violet Hold", -- [2]
				},
				[4440] = {
					"Razorfen Totemic", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[4798] = {
					"Fallenroot Shadowstalker", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[40447] = {
					"Chains of Woe", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[2408] = {
					"Snapjaw", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[4822] = {
					"Snapping Crustacean", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4830] = {
					"Old Serra'kis", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[3840] = {
					"Druid of the Fang", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[4854] = {
					"Grimlok", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[5056] = {
					"Deviate Dreadfang", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[11783] = {
					"Theradrim Shardling", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[18318] = {
					"Sethekk Initiate", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[3914] = {
					"Rethilgore", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[11831] = {
					"Hakkari Witch Doctor", -- [1]
					"Zul'Gurub", -- [2]
				},
				[18982] = {
					"Sable Jaguar", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[17732] = {
					"Lykul Wasp", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[19220] = {
					"Pathaleon the Calculator", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[15989] = {
					"Sapphiron", -- [1]
					"Naxxramas", -- [2]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				[16021] = {
					"Living Monstrosity", -- [1]
					"Naxxramas", -- [2]
				},
				[27972] = {
					"Lightning Construct", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[39616] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[30083] = {
					"Marauding Geist", -- [1]
					"Naxxramas", -- [2]
				},
				[17833] = {
					"Durnholde Warden", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[16149] = {
					"Spectral Horse", -- [1]
					"Naxxramas", -- [2]
				},
				[30179] = {
					"Twilight Apostle", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[17993] = {
					"Bloodwarder Protector", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[17961] = {
					"Coilfang Enchantress", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[16165] = {
					"Necro Knight", -- [1]
					"Naxxramas", -- [2]
				},
				[11082] = {
					"Stratholme Courier", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[136076] = {
					"Agitated Nimbus", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[5714] = {
					"Loro", -- [1]
					"Sunken Temple", -- [2]
				},
				[28729] = {
					"Watcher Narjil", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[30435] = {
					"Poisonous Mushroom", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[10120] = {
					"Vault Warder", -- [1]
					"Uldaman", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[28169] = {
					"Stratholme Resident", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[28580] = {
					"Hardened Steel Skycaller", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[18313] = {
					"Ethereal Sorcerer", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[26533] = {
					"Mal'Ganis", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[136295] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[14326] = {
					"Guard Mol'dar", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[18473] = {
					"Talon King Ikiss", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[26693] = {
					"Skadi the Ruthless", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[16037] = {
					"Plagued Bat", -- [1]
					"Naxxramas", -- [2]
				},
				[18633] = {
					"Cabal Acolyte", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[28836] = {
					"Stormforged Runeshaper", -- [1]
					"Halls of Lightning", -- [2]
				},
				[43391] = {
					"Millhouse Manastorm", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[19509] = {
					"Sunseeker Harvester", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[11370] = {
					"Razzashi Broodwidow", -- [1]
					"Zul'Gurub", -- [2]
				},
				[10440] = {
					"Baron Rivendare", -- [1]
					"Stratholme", -- [2]
				},
				[10408] = {
					"Rockwing Gargoyle", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10424] = {
					"Risen Gallant", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[7269] = {
					"Scarab", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[20904] = {
					"Warden Mellichar", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[17398] = {
					"Nascent Fel Orc", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[23175] = {
					"Tarren Mill Guardsman", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[137103] = {
					"Blood Visage", -- [1]
					"The Underrot", -- [2]
				},
				[7309] = {
					"Earthen Custodian", -- [1]
					"Uldaman", -- [2]
				},
				[5270] = {
					"Atal'ai Corpse Eater", -- [1]
					"Sunken Temple", -- [2]
				},
				[29316] = {
					"Moragg", -- [1]
					"Violet Hold", -- [2]
				},
				[21128] = {
					"Coilfang Ray", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[7341] = {
					"Skeletal Frostweaver", -- [1]
					"Razorfen Downs", -- [2]
				},
				[7349] = {
					"Tomb Fiend", -- [1]
					"Razorfen Downs", -- [2]
				},
				[7357] = {
					"Mordresh Fire Eye", -- [1]
					"Razorfen Downs", -- [2]
				},
				[8585] = {
					"Frost Spectre", -- [1]
					"Razorfen Downs", -- [2]
				},
				[3855] = {
					"Shadowfang Darksoul", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[40577] = {
					"Naz'jar Sentinel", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[15484] = {
					"Magma Totem V", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[7397] = {
					"Earthen Stonecarver", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7405] = {
					"Deadly Cleft Scorpid", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[17815] = {
					"Lordaeron Sentry", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[29768] = {
					"Unyielding Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[27653] = {
					"Phantasmal Water", -- [1]
					"The Oculus", -- [2]
				},
				[23180] = {
					"Tarren Mill Protector", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[129227] = {
					"Azerokk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[10808] = {
					"Timmy the Cruel", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[4518] = {
					"Death's Head Sage", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[17770] = {
					"Hungarfen", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[17802] = {
					"Coilfang Warrior", -- [1]
					"Coilfang: The Steamvault", -- [2]
				},
				[24071] = {
					"Dragonflayer Heartsplitter", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[27909] = {
					"Darkweb Victim", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[11032] = {
					"Commander Malor", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[27973] = {
					"Crystalline Shardling", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[8889] = {
					"Anvilrage Overseer", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[30084] = {
					"Power Spark", -- [1]
					"The Eye of Eternity", -- [2]
				},
				[8921] = {
					"Bloodhound", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[2748] = {
					"Archaedas", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[30276] = {
					"Ahn'kahar Web Winder", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[28165] = {
					"Iron Sludge", -- [1]
					"Halls of Stone", -- [2]
				},
				[17962] = {
					"Coilfang Collaborator", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[17994] = {
					"Bloodwarder Falconer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[9017] = {
					"Lord Incendius", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[9033] = {
					"General Angerforge", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[28965] = {
					"Titanium Thunderer", -- [1]
					"Halls of Lightning", -- [2]
				},
				[7605] = {
					"Raven", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[18506] = {
					"Raging Soul", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[28837] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Lightning", -- [2]
				},
				[3680] = {
					"Serpentbloom Snake", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[26918] = {
					"Chaotic Rift", -- [1]
					"The Nexus", -- [2]
				},
				[11448] = {
					"Gordok Warlock", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[18314] = {
					"Nexus Stalker", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[28581] = {
					"Stormforged Tactician", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[30660] = {
					"Portal Guardian", -- [1]
					"Violet Hold", -- [2]
				},
				[7334] = {
					"Battle Boar Horror", -- [1]
					"Razorfen Downs", -- [2]
				},
				[26630] = {
					"Trollgore", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[16427] = {
					"Soldier of the Frozen Wastes", -- [1]
					"Naxxramas", -- [2]
				},
				[26694] = {
					"Ymirjar Dusk Shaman", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[11320] = {
					"Earthborer", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[16523] = {
					"Shattered Hand Savage", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[11352] = {
					"Gurubashi Berserker", -- [1]
					"Zul'Gurub", -- [2]
				},
				[18634] = {
					"Cabal Summoner", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[20873] = {
					"Negaton Warp-Master", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[20905] = {
					"Blazing Trickster", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[5710] = {
					"Jammal'an the Prophet", -- [1]
					"Sunken Temple", -- [2]
				},
				[7797] = {
					"Ruuzlu", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[18794] = {
					"Cabal Ritualist", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[11464] = {
					"Warpwood Tangler", -- [1]
					"Dire Maul", -- [2]
				},
				[7789] = {
					"Sandfury Cretin", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[11496] = {
					"Immol'thar", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[9541] = {
					"Blackbreath Crony", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[11480] = {
					"Arcane Aberration", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[29128] = {
					"Anub'ar Prime Guard", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[20908] = {
					"Akkiris Lightning-Waker", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[29064] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[9545] = {
					"Grim Patron", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[17067] = {
					"Phantom Hound", -- [1]
					"Karazhan", -- [2]
				},
				[10426] = {
					"Risen Inquisitor", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[11518] = {
					"Jergosh the Invoker", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[10394] = {
					"Black Guard Sentry", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[19306] = {
					"Mana Leech", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[40579] = {
					"Deep Murloc Hunter", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[17259] = {
					"Bonechewer Hungerer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[29573] = {
					"Drakkari Elemental", -- [1]
					"Gundrak", -- [2]
				},
				[23176] = {
					"Tarren Mill Guardsman", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[29637] = {
					"Crafty Snake", -- [1]
					"Gundrak", -- [2]
				},
				[126928] = {
					"Irontide Corsair", -- [1]
					"Freehold", -- [2]
				},
				[11784] = {
					"Theradrim Guardian", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[17771] = {
					"Murkblood Oracle", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[47232] = {
					"Ghostly Cook", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[30085] = {
					"Vigilant Shade", -- [1]
					"Naxxramas", -- [2]
				},
				[29829] = {
					"Drakkari Earthshaker", -- [1]
					"Gundrak", -- [2]
				},
				[129369] = {
					"Irontide Raider", -- [1]
					"Siege of Boralus", -- [2]
				},
				[15974] = {
					"Dread Creeper", -- [1]
					"Naxxramas", -- [2]
				},
				[15990] = {
					"Kel'Thuzad", -- [1]
					"Naxxramas", -- [2]
				},
				[17963] = {
					"Wastewalker Slave", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[16022] = {
					"Surgical Assistant", -- [1]
					"Naxxramas", -- [2]
				},
				[27974] = {
					"Eroded Shardling", -- [1]
					"Halls of Stone", -- [2]
				},
				[2992] = {
					"Healing Ward V", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[17803] = {
					"Coilfang Oracle", -- [1]
					"Coilfang: The Steamvault", -- [2]
				},
				[17835] = {
					"Infinite Assassin", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[16375] = {
					"Sewage Slime", -- [1]
					"Naxxramas", -- [2]
				},
				[16150] = {
					"Spectral Rider", -- [1]
					"Naxxramas", -- [2]
				},
				[24554] = {
					"Eramas Brightblaze", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[12056] = {
					"Baron Geddon", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[30277] = {
					"Ahn'kahar Slasher", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[15464] = {
					"Strength of Earth Totem V", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[24200] = {
					"Skarvald the Constructor", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[12216] = {
					"Poison Sprite", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[24744] = {
					"Vexallus", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[18155] = {
					"Bloodfalcon", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[12217] = {
					"Corruptor", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[12201] = {
					"Princess Theradras", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[6206] = {
					"Caverndeep Burrower", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[42691] = {
					"Stonecore Rift Conjurer", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[18315] = {
					"Ethereal Theurgist", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[28582] = {
					"Stormforged Mender", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[30661] = {
					"Azure Invader", -- [1]
					"Violet Hold", -- [2]
				},
				[24552] = {
					"Sliver", -- [1]
					"Magister's Terrace", -- [2]
				},
				[26631] = {
					"Novos the Summoner", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[16428] = {
					"Unstoppable Abomination", -- [1]
					"Naxxramas", -- [2]
				},
				[16460] = {
					"Night Mistress", -- [1]
					"Karazhan", -- [2]
				},
				[26727] = {
					"Mage Hunter Ascendant", -- [1]
					"The Nexus", -- [2]
				},
				[10393] = {
					"Skul", -- [1]
					"Stratholme", -- [2]
				},
				[28838] = {
					"Titanium Vanguard", -- [1]
					"Halls of Lightning", -- [2]
				},
				[18635] = {
					"Cabal Deathsworn", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[18667] = {
					"Blackheart the Inciter", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[6230] = {
					"Peacekeeper Security Suit", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[6222] = {
					"Leprous Technician", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[10409] = {
					"Rockwing Screecher", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10425] = {
					"Risen Battle Mage", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[29062] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[3100] = {
					"Hakkekød", -- [1]
					"Razorfen Kraul", -- [2]
				},
				[16215] = {
					"Unholy Staff", -- [1]
					"Naxxramas", -- [2]
				},
				[12057] = {
					"Garr", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[16151] = {
					"Midnight", -- [1]
					"Karazhan", -- [2]
				},
				[139422] = {
					"Scaled Krolusk Tamer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[30279] = {
					"Deep Crawler", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[127315] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[23177] = {
					"Tarren Mill Lookout", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[28200] = {
					"Dark Necromancer", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[4279] = {
					"Odo the Blindwatcher", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[4287] = {
					"Scarlet Gallant", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4295] = {
					"Scarlet Myrmidon", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4303] = {
					"Scarlet Abbot", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[36551] = {
					"Spiteful Apparition", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[19307] = {
					"Nexus Terror", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[10697] = {
					"Bile Slime", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[136353] = {
					"Colossal Tentacle", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[17356] = {
					"Creeping Ooze", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[23561] = {
					"Soldier of the Frozen Wastes", -- [1]
					"Naxxramas", -- [2]
				},
				[27655] = {
					"Mage-Lord Urom", -- [1]
					"The Oculus", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[10809] = {
					"Stonespine", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[29830] = {
					"Living Mojo", -- [1]
					"Gundrak", -- [2]
				},
				[17420] = {
					"Shattered Hand Heathen", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[15111] = {
					"Mad Servant", -- [1]
					"Zul'Gurub", -- [2]
				},
				[17964] = {
					"Wastewalker Worker", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[30278] = {
					"Ahn'kahar Spell Flinger", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[139425] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[27975] = {
					"Maiden of Grief", -- [1]
					"Halls of Stone", -- [2]
				},
				[8890] = {
					"Anvilrage Warden", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8906] = {
					"Ragereaver Golem", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8922] = {
					"Bloodhound Mastiff", -- [1]
					"Blackrock Depths", -- [2]
				},
				[9018] = {
					"High Interrogator Gerstahn", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[4519] = {
					"Death's Head Seer", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[28167] = {
					"Stratholme Citizen", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[28199] = {
					"Tomb Stalker", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[28231] = {
					"Crystalline Tender", -- [1]
					"The Nexus", -- [2]
				},
				[4511] = {
					"Agam'ar", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[9034] = {
					"Hate'rel", -- [1]
					"Blackrock Depths", -- [2]
				},
				[18092] = {
					"Tarren Mill Guardsman", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[13160] = {
					"Carrion Swarmer", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[36296] = {
					"Apothecary Hummel", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[26824] = {
					"Drakkari Raptor Mount", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[26696] = {
					"Ymirjar Berserker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[11321] = {
					"Molten Elemental", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[24777] = {
					"Sunblade Sentinel", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[28583] = {
					"Blistering Steamrager", -- [1]
					"Halls of Lightning", -- [2]
				},
				[30662] = {
					"Azure Spellbreaker", -- [1]
					"Violet Hold", -- [2]
				},
				[24553] = {
					"Apoko", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[26632] = {
					"The Prophet Tharon'ja", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[4623] = {
					"Quilguard Champion", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[16461] = {
					"Zealous Paramour", -- [1]
					"Karazhan", -- [2]
				},
				[26728] = {
					"Mage Hunter Initiate", -- [1]
					"The Nexus", -- [2]
				},
				[18796] = {
					"Fel Overseer", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[11353] = {
					"Gurubashi Blood Drinker", -- [1]
					"Zul'Gurub", -- [2]
				},
				[18636] = {
					"Cabal Assassin", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[20875] = {
					"Negaton Screamer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[18700] = {
					"Reanimated Bones", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[18732] = {
					"Grandmaster Vorpil", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[43014] = {
					"Imp", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[22890] = {
					"First Fragment Guardian", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[29063] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[4863] = {
					"Jadespine Basilisk", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4855] = {
					"Stonevault Brawler", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4535] = {
					"Tamed Battleboar", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4516] = {
					"Death's Head Adept", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[23178] = {
					"Tarren Mill Lookout", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[129366] = {
					"Bilge Rat Buccaneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[15687] = {
					"Moroes", -- [1]
					"Karazhan", -- [2]
				},
				[205958] = {
					"Zombie Horror", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[4815] = {
					"Murkshallow Snapclaw", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4799] = {
					"Fallenroot Hellcaller", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4807] = {
					"Blackfathom Myrmidon", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[11673] = {
					"Core Hound", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[4823] = {
					"Barbed Crustacean", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4831] = {
					"Lady Sarevess", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[16429] = {
					"Soul Weaver", -- [1]
					"Naxxramas", -- [2]
				},
				[4847] = {
					"Shadowforge Relic Hunter", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[17357] = {
					"Creeping Oozeling", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[6910] = {
					"Revelosh", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[23562] = {
					"Unstoppable Abomination", -- [1]
					"Naxxramas", -- [2]
				},
				[29735] = {
					"Savage Worg", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[4887] = {
					"Ghamoo-Ra", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[17517] = {
					"Hellfire Sentry", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[30918] = {
					"Azure Binder", -- [1]
					"Violet Hold", -- [2]
				},
				[24745] = {
					"Pure Energy", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[15975] = {
					"Carrion Spinner", -- [1]
					"Naxxramas", -- [2]
				},
				[9178] = {
					"Burning Spirit", -- [1]
					"Blackrock Depths", -- [2]
				},
				[26792] = {
					"Crystalline Protector", -- [1]
					"The Nexus", -- [2]
				},
				[4543] = {
					"Bloodmage Thalnos", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[50561] = {
					"Bloodthirsty Ghoul", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[24201] = {
					"Dalronn the Controller", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[33993] = {
					"Emalon the Storm Watcher", -- [1]
					"Vault of Archavon", -- [2]
				},
				[7022] = {
					"Venomlash Scorpid", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7030] = {
					"Shadowforge Geologist", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[22891] = {
					"Second Fragment Guardian", -- [1]
					"Coilfang: The Steamvault", -- [2]
				},
				[42692] = {
					"Stonecore Bruiser", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[40008] = {
					"Lucky", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[16167] = {
					"Bony Construct", -- [1]
					"Naxxramas", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				[7078] = {
					"Cleft Scorpid", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[18093] = {
					"Tarren Mill Protector", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[27431] = {
					"Drakkari Commander", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[5055] = {
					"Deviate Lasher", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[18731] = {
					"Ambassador Hellmaw", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[3560] = {
					"Healing Ward", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[40584] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[42695] = {
					"Stonecore Sentry", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[18317] = {
					"Ethereal Priest", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[28584] = {
					"Unbound Firestorm", -- [1]
					"Halls of Lightning", -- [2]
				},
				[30663] = {
					"Azure Binder", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[30695] = {
					"Portal Keeper", -- [1]
					"Violet Hold", -- [2]
				},
				[36874] = {
					"Disturbed Glacial Revenant", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[41096] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[26729] = {
					"Steward", -- [1]
					"The Nexus", -- [2]
				},
				[7206] = {
					"Ancient Stone Keeper", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[26793] = {
					"Crystalline Frayer", -- [1]
					"The Nexus", -- [2]
				},
				[18637] = {
					"Cabal Shadow Priest", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[27654] = {
					"Drakos the Interrogator", -- [1]
					"The Oculus", -- [2]
				},
				[18701] = {
					"Dark Vortex", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[7246] = {
					"Sandfury Shadowhunter", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[4805] = {
					"Blackfathom Sea Witch", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[18797] = {
					"Tortured Skeleton", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[3636] = {
					"Deviate Ravager", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[29096] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[7286] = {
					"Zul'Farrak Zombie", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[24656] = {
					"Fizzle", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[5271] = {
					"Atal'ai Deathwalker", -- [1]
					"Sunken Temple", -- [2]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[23179] = {
					"Tarren Mill Protector", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[7342] = {
					"Skeletal Summoner", -- [1]
					"Razorfen Downs", -- [2]
				},
				[11368] = {
					"Bloodseeker Bat", -- [1]
					"Zul'Gurub", -- [2]
				},
				[7358] = {
					"Amnennar the Coldbringer", -- [1]
					"Razorfen Downs", -- [2]
				},
				[25354] = {
					"Mutate Fleshlasher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[47231] = {
					"Shadowy Attendant", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[24722] = {
					"Fel Crystal", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[42696] = {
					"Stonecore Warbringer", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[8905] = {
					"Warbringer Construct", -- [1]
					"Blackrock Depths", -- [2]
				},
				[8914] = {
					"Twilight Bodyguard", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[24683] = {
					"Sunblade Mage Guard", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[11322] = {
					"Searing Blade Cultist", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[23563] = {
					"Soul Weaver", -- [1]
					"Naxxramas", -- [2]
				},
				[3671] = {
					"Lady Anacondra", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[47238] = {
					"Whipping Wind", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[27753] = {
					"Drakkari Invader", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[29832] = {
					"Drakkari Golem", -- [1]
					"Gundrak", -- [2]
				},
				[20900] = {
					"Unchained Doombringer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[26734] = {
					"Azure Enforcer", -- [1]
					"The Nexus", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[17455] = {
					"Bonechewer Beastmaster", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[27977] = {
					"Krystallus", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[8891] = {
					"Anvilrage Guardsman", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8907] = {
					"Wrath Hammer Construct", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[16593] = {
					"Shattered Hand Brawler", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[21126] = {
					"Coilfang Scale-Healer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[19949] = {
					"Sapling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[15112] = {
					"Brain Wash Totem", -- [1]
					"Zul'Gurub", -- [2]
				},
				[28201] = {
					"Bile Golem", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[7346] = {
					"Splinterbone Centurion", -- [1]
					"Razorfen Downs", -- [2]
				},
				[9019] = {
					"Emperor Dagran Thaurissan", -- [1]
					"Blackrock Depths", -- [2]
				},
				[9035] = {
					"Anger'rel", -- [1]
					"Blackrock Depths", -- [2]
				},
				[18094] = {
					"Tarren Mill Lookout", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[7606] = {
					"Oro Eyegouge", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[4958] = {
					"Haunting Spirit", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[20901] = {
					"Sargeron Archer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				[40586] = {
					"Lady Naz'jar", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[21127] = {
					"Coilfang Tempest", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[36620] = {
					"Soulguard Adept", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[28585] = {
					"Slag", -- [1]
					"Halls of Lightning", -- [2]
				},
				[30664] = {
					"Azure Mage Slayer", -- [1]
					"Violet Hold", -- [2]
				},
				[24555] = {
					"Garaxxas", -- [1]
					"Magister's Terrace", -- [2]
				},
				[19843] = {
					"Nethervine Trickster", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[36940] = {
					"Raging Ghoul", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[28736] = {
					"Skittering Infector", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[37068] = {
					"Tanouka", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[24715] = {
					"High Explosive Sheep", -- [1]
					"Magister's Terrace", -- [2]
				},
				[26794] = {
					"Ormorok the Tree-Shaper", -- [1]
					"The Nexus", -- [2]
				},
				[18638] = {
					"Cabal Zealot", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[3872] = {
					"Deathsworn Captain", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[18702] = {
					"Auchenai Necromancer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[5711] = {
					"Ogom the Wretched", -- [1]
					"Sunken Temple", -- [2]
				},
				[45704] = {
					"Lurking Tempest", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[22892] = {
					"Third Fragment Guardian", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[18830] = {
					"Cabal Fanatic", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[29097] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[18894] = {
					"Felguard Brute", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[26628] = {
					"Drakkari Scytheclaw", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[28579] = {
					"Hardened Steel Berserker", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[40011] = {
					"Spot", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[30338] = {
					"Ahn'kahar Swarmer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[33998] = {
					"Tempest Minion", -- [1]
					"Vault of Archavon", -- [2]
				},
				[9547] = {
					"Guzzling Patron", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[27971] = {
					"Unrelenting Construct", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[34049] = {
					"Tempest Minion", -- [1]
					"Vault of Archavon", -- [2]
				},
				[24698] = {
					"Ethereum Smuggler", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[11658] = {
					"Molten Giant", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[9436] = {
					"Spawn of Bael'Gar", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[24675] = {
					"Phoenix Egg", -- [1]
					"Magister's Terrace", -- [2]
				},
				[18325] = {
					"Sethekk Prophet", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[20864] = {
					"Protean Nightmare", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[18420] = {
					"Sunseeker Geomancer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[15483] = {
					"Fire Nova Totem VII", -- [1]
					"Magister's Terrace", -- [2]
				},
				[28578] = {
					"Hardened Steel Reaver", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[36877] = {
					"Wrathbone Skeleton", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[36941] = {
					"Risen Witch Doctor", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[22885] = {
					"Dragon Turtle", -- [1]
					"Black Temple", -- [2]
					"enUS", -- [3]
				},
				[37069] = {
					"Lumbering Abomination", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[19598] = {
					"Mutate Fleshlasher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[134331] = {
					"King Rahu'ai", -- [1]
					"Kings' Rest", -- [2]
				},
				[15976] = {
					"Venom Stalker", -- [1]
					"Naxxramas", -- [2]
				},
				[18311] = {
					"Ethereal Crypt Raider", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[16024] = {
					"Embalming Slime", -- [1]
					"Naxxramas", -- [2]
				},
				[27978] = {
					"Sjonnir The Ironshaper", -- [1]
					"Halls of Stone", -- [2]
				},
				[16056] = {
					"Diseased Maggot", -- [1]
					"Naxxramas", -- [2]
				},
				[24849] = {
					"Proto-Drake Rider", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[17839] = {
					"Rift Lord", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[17871] = {
					"Underbog Shambler", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[11789] = {
					"Deep Borer", -- [1]
					"Maraudon", -- [2]
				},
				[3983] = {
					"Interrogator Vishas", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[30249] = {
					"Scion of Eternity", -- [1]
					"The Eye of Eternity", -- [2]
				},
				[16168] = {
					"Stoneskin Gargoyle", -- [1]
					"Naxxramas", -- [2]
				},
				[20078] = {
					"Summoned Bloodwarder Reservist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[8928] = {
					"Burrowing Thundersnout", -- [1]
					"Blackrock Depths", -- [2]
				},
				[16216] = {
					"Unholy Swords", -- [1]
					"Naxxramas", -- [2]
				},
				[4812] = {
					"Twilight Loreseeker", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4514] = {
					"Raging Agam'ar", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[5259] = {
					"Atal'ai Witch Doctor", -- [1]
					"Sunken Temple", -- [2]
				},
				[18309] = {
					"Ethereal Scavenger", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[36494] = {
					"Forgemaster Garfrost", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[12218] = {
					"Vile Larva", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[18319] = {
					"Time-Lost Scryer", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[28586] = {
					"General Bjarngrim", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[30665] = {
					"Veteran Mage Hunter", -- [1]
					"Violet Hold", -- [2]
				},
				[24556] = {
					"Zelfan", -- [1]
					"Magister's Terrace", -- [2]
				},
				[26635] = {
					"Risen Drakkari Warrior", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[40634] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[8983] = {
					"Golem Lord Argelmach", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[26731] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[26763] = {
					"Anomalus", -- [1]
					"The Nexus", -- [2]
				},
				[27969] = {
					"Dark Rune Giant", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[18639] = {
					"Cabal Spellbinder", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[6207] = {
					"Caverndeep Ambusher", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[4428] = {
					"Death Speaker Jargba", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[6223] = {
					"Leprous Defender", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[10411] = {
					"Eye of Naxxramas", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[26529] = {
					"Meathook", -- [1]
					"The Culling of Stratholme", -- [2]
				},
				[18640] = {
					"Cabal Warlock", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[29098] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[22883] = {
					"Aqueous Spawn", -- [1]
					"Black Temple", -- [2]
					"enUS", -- [3]
				},
				[31007] = {
					"Azure Binder", -- [1]
					"Violet Hold", -- [2]
				},
				[16486] = {
					"Web Wrap", -- [1]
					"Naxxramas", -- [2]
				},
				[40013] = {
					"Buster", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[18405] = {
					"Tempest-Forge Peacekeeper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[42188] = {
					"Ozruk", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[24688] = {
					"Wretched Skulker", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[28384] = {
					"Lesser Air Elemental", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[5713] = {
					"Gasher", -- [1]
					"Sunken Temple", -- [2]
				},
				[4288] = {
					"Scarlet Beastmaster", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4296] = {
					"Scarlet Adept", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4304] = {
					"Scarlet Tracking Hound", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[19876] = {
					"Lord Robin Daris", -- [1]
					"Karazhan", -- [2]
				},
				[17264] = {
					"Bonechewer Ravener", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[16067] = {
					"Deathcharger Steed", -- [1]
					"Naxxramas", -- [2]
				},
				[134338] = {
					"Tidesage Enforcer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[6391] = {
					"Holdout Warrior", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[18498] = {
					"Unliving Soldier", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[6407] = {
					"Holdout Technician", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[6908] = {
					"Olaf", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4861] = {
					"Shrike Bat", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[10811] = {
					"Instructor Galford", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[29834] = {
					"Drakkari Frenzy", -- [1]
					"Gundrak", -- [2]
				},
				[17941] = {
					"Mennu the Betrayer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[8876] = {
					"Sandfury Acolyte", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[27966] = {
					"Dark Rune Controller", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[4424] = {
					"Aggem Thorncurse", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[20867] = {
					"Death Watcher", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[6487] = {
					"Arcanist Doan", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[8892] = {
					"Anvilrage Footman", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8908] = {
					"Molten War Golem", -- [1]
					"Blackrock Depths", -- [2]
				},
				[37711] = {
					"Hungering Ghoul", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[19919] = {
					"Thorn Lasher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[26687] = {
					"Gortok Palehoof", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[26624] = {
					"Wretched Belcher", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[4530] = {
					"Razorfen Handler", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4512] = {
					"Rotting Agam'ar", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4520] = {
					"Razorfen Geomancer", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[6575] = {
					"Scarlet Trainee", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[15979] = {
					"Tomb Horror", -- [1]
					"Naxxramas", -- [2]
				},
				[29838] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[17892] = {
					"Infinite Chronomancer", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[135365] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
				},
				[17400] = {
					"Felguard Annihilator", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[130404] = {
					"Vermin Trapper", -- [1]
					"Freehold", -- [2]
				},
				[18320] = {
					"Time-Lost Shadowmage", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[28587] = {
					"Volkhan", -- [1]
					"Halls of Lightning", -- [2]
				},
				[28619] = {
					"Web Wrap", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[24557] = {
					"Kagani Nightstrike", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[26636] = {
					"Risen Drakkari Soulmage", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
				},
				[20865] = {
					"Protean Horror", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[24685] = {
					"Sunblade Magister", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[11339] = {
					"Hakkari Shadow Hunter", -- [1]
					"Zul'Gurub", -- [2]
				},
				[26796] = {
					"Commander Stoutbeard", -- [1]
					"The Nexus", -- [2]
				},
				[11371] = {
					"Razzashi Serpent", -- [1]
					"Zul'Gurub", -- [2]
				},
				[11387] = {
					"Sandfury Speaker", -- [1]
					"Zul'Gurub", -- [2]
				},
				[26685] = {
					"Massive Jormungar", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[28734] = {
					"Anub'ar Skirmisher", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[26683] = {
					"Frenzied Worgen", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[11483] = {
					"Mana Remnant", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[20879] = {
					"Eredar Soul-Eater", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[20911] = {
					"Blackwing Drakonaar", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[134600] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[7320] = {
					"Stonevault Mauler", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[16194] = {
					"Unholy Axe", -- [1]
					"Naxxramas", -- [2]
				},
				[40015] = {
					"Runty", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[29266] = {
					"Xevozz", -- [1]
					"Violet Hold", -- [2]
				},
				[27636] = {
					"Azure Ley-Whelp", -- [1]
					"The Oculus", -- [2]
				},
				[17827] = {
					"Claw", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[134144] = {
					"Living Current", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[4857] = {
					"Stone Keeper", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4435] = {
					"Razorfen Warrior", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[10558] = {
					"Hearthsinger Forresten", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[36497] = {
					"Bronjahm", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[4832] = {
					"Twilight Lord Kelris", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[7915] = {
					"Walking Bomb", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[4848] = {
					"Shadowforge Darkcaster", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[15551] = {
					"Spectral Stable Hand", -- [1]
					"Karazhan", -- [2]
				},
				[6907] = {
					"Eric \"The Swift\"", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[36881] = {
					"Skeletal Slave", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[29680] = {
					"Slad'ran Viper", -- [1]
					"Gundrak", -- [2]
				},
				[18556] = {
					"Phasing Soldier", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
				},
				[15929] = {
					"Stalagg", -- [1]
					"Naxxramas", -- [2]
				},
				[23694] = {
					"Pulsing Pumpkin", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[19632] = {
					"Lykul Stinger", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[15977] = {
					"Poisonous Skitterer", -- [1]
					"Naxxramas", -- [2]
				},
				[29931] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[29819] = {
					"Drakkari Lancer", -- [1]
					"Gundrak", -- [2]
				},
				[16025] = {
					"Stitched Giant", -- [1]
					"Naxxramas", -- [2]
				},
				[43662] = {
					"Unbound Earth Rager", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[16057] = {
					"Rotting Maggot", -- [1]
					"Naxxramas", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[37713] = {
					"Deathwhisper Torturer", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[19920] = {
					"Thorn Flayer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[10435] = {
					"Magistrate Barthilas", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[26125] = {
					"Toothslobber", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[27960] = {
					"Dark Rune Warrior", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[30283] = {
					"Plague Walker", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[5291] = {
					"Hakkari Frostwing", -- [1]
					"Sunken Temple", -- [2]
				},
				[7079] = {
					"Viscous Fallout", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[45935] = {
					"Temple Adept", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[5048] = {
					"Deviate Adder", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[2529] = {
					"Son of Arugal", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[37107] = {
					"Vermina", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[4860] = {
					"Stone Steward", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[12203] = {
					"Landslide", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[12219] = {
					"Barbed Lasher", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[18321] = {
					"Sethekk Talon Lord", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[46382] = {
					"Petty Criminal", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[30667] = {
					"Azure Sorcerer", -- [1]
					"Violet Hold", -- [2]
				},
				[24558] = {
					"Ellrys Duskhallow", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[26637] = {
					"Risen Drakkari Handler", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[26669] = {
					"Ymirjar Savage", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[28924] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[24686] = {
					"Sunblade Warlock", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[15550] = {
					"Attumen the Huntsman", -- [1]
					"Karazhan", -- [2]
				},
				[6906] = {
					"Baelog", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[16594] = {
					"Shadowmoon Acolyte", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[26861] = {
					"King Ymiron", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[18934] = {
					"Durnholde Mage", -- [1]
					"The Escape From Durnholde", -- [2]
				},
				[7247] = {
					"Sandfury Soul Eater", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[10412] = {
					"Crypt Crawler", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[14510] = {
					"High Priestess Mar'li", -- [1]
					"Zul'Gurub", -- [2]
				},
				[7271] = {
					"Witch Doctor Zum'rah", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[205997] = {
					"Mirror Image", -- [1]
					"The Oculus", -- [2]
					"enUS", -- [3]
				},
				[7011] = {
					"Earthen Rocksmasher", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[3977] = {
					"High Inquisitor Whitemane", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[5256] = {
					"Atal'ai Warrior", -- [1]
					"Sunken Temple", -- [2]
				},
				[40017] = {
					"Twilight Element Warden", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[40943] = {
					"Gilgoblin Aquamage", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[7327] = {
					"Withered Warrior", -- [1]
					"Razorfen Downs", -- [2]
				},
				[7335] = {
					"Death's Head Geomancer", -- [1]
					"Razorfen Downs", -- [2]
				},
				[205998] = {
					"Mirror Image", -- [1]
					"The Oculus", -- [2]
					"enUS", -- [3]
				},
				[7351] = {
					"Tomb Reaver", -- [1]
					"Razorfen Downs", -- [2]
				},
				[46252] = {
					"Riverpaw Shaman", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[7608] = {
					"Murta Grimgut", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[11361] = {
					"Zulian Tiger", -- [1]
					"Zul'Gurub", -- [2]
				},
				[36499] = {
					"Soulguard Reaper", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[29051] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[15041] = {
					"Spawn of Mar'li", -- [1]
					"Zul'Gurub", -- [2]
				},
				[205999] = {
					"Mirror Image", -- [1]
					"The Oculus", -- [2]
					"enUS", -- [3]
				},
				[27597] = {
					"Hulking Corpse", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[19486] = {
					"Sunseeker Chemist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[15438] = {
					"Greater Fire Elemental", -- [1]
					"Naxxramas", -- [2]
				},
				[19505] = {
					"Sunseeker Channeler", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[19508] = {
					"Sunseeker Herbalist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[10812] = {
					"Grand Crusader Dathrohan", -- [1]
					"Stratholme", -- [2]
				},
				[29836] = {
					"Drakkari Battle Rider", -- [1]
					"Gundrak", -- [2]
				},
				[19633] = {
					"Bloodwarder Mender", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[15547] = {
					"Spectral Charger", -- [1]
					"Karazhan", -- [2]
				},
				[29932] = {
					"Eck the Ferocious", -- [1]
					"Gundrak", -- [2]
				},
				[14986] = {
					"Shade of Jin'do", -- [1]
					"Zul'Gurub", -- [2]
				},
				[27949] = {
					"Alliance Commander", -- [1]
					"The Nexus", -- [2]
				},
				[27981] = {
					"Malformed Ooze", -- [1]
					"Halls of Stone", -- [2]
				},
				[8893] = {
					"Anvilrage Soldier", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[39698] = {
					"Karsh Steelbender", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[47135] = {
					"Fetid Ghoul", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[29240] = {
					"Stormforged Lieutenant", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[19953] = {
					"Frayer Protector", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[24079] = {
					"Dragonflayer Forge Master", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[22873] = {
					"Coilskar General", -- [1]
					"Black Temple", -- [2]
					"enUS", -- [3]
				},
				[30284] = {
					"Bonegrinder", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[10419] = {
					"Risen Conjuror", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[9037] = {
					"Gloom'rel", -- [1]
					"Blackrock Depths", -- [2]
				},
				[30681] = {
					"Onyx Blaze Mistress", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[15068] = {
					"Zulian Guardian", -- [1]
					"Zul'Gurub", -- [2]
				},
				[36893] = {
					"Ymirjar Flamebearer", -- [1]
					"Pit of Saron", -- [2]
					"enUS", -- [3]
				},
				[30451] = {
					"Shadron", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[11794] = {
					"Sister of Celebras", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[11486] = {
					"Prince Tortheldrin", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[44752] = {
					"Faceless Sapper", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[18322] = {
					"Sethekk Ravenguard", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[38113] = {
					"Marwyn", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[30668] = {
					"Azure Raider", -- [1]
					"Violet Hold", -- [2]
				},
				[24559] = {
					"Warlord Salaris", -- [1]
					"Magister's Terrace", -- [2]
				},
				[13323] = {
					"Subterranean Diemetradon", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[5648] = {
					"Sandfury Shadowcaster", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[17724] = {
					"Underbat", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[24687] = {
					"Sunblade Physician", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[11340] = {
					"Hakkari Blood Priest", -- [1]
					"Zul'Gurub", -- [2]
				},
				[30892] = {
					"Portal Guardian", -- [1]
					"Violet Hold", -- [2]
				},
				[18642] = {
					"Fel Guardhound", -- [1]
					"Auchindoun: Shadow Labyrinth", -- [2]
				},
				[24815] = {
					"Sunblade Imp", -- [1]
					"Magister's Terrace", -- [2]
					"enUS", -- [3]
				},
				[43537] = {
					"Stonecore Earthshaper", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[5712] = {
					"Zolo", -- [1]
					"Sunken Temple", -- [2]
				},
				[5720] = {
					"Weaver", -- [1]
					"Sunken Temple", -- [2]
				},
				[11452] = {
					"Wildspawn Rogue", -- [1]
					"Dire Maul", -- [2]
				},
				[20881] = {
					"Unbound Devastator", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[11484] = {
					"Residual Monstrosity", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[36568] = {
					"Crazed Apothecary", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[133430] = {
					"Venture Co. Mastermind", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[11472] = {
					"Eldreth Spirit", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[40019] = {
					"Twilight Obsidian Borer", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[50834] = {
					"Rethilgore", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[21137] = {
					"Infinite Assassin", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[11665] = {
					"Lava Annihilator", -- [1]
					"Molten Core", -- [2]
					"enUS", -- [3]
				},
				[14396] = {
					"Eye of Immol'thar", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[38175] = {
					"Ghostly Priest", -- [1]
					"Halls of Reflection", -- [2]
					"enUS", -- [3]
				},
				[19218] = {
					"Gatewatcher Gyro-Kill", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[30453] = {
					"Onyx Sanctum Guardian", -- [1]
					"The Obsidian Sanctum", -- [2]
				},
				[19962] = {
					"Blue Seedling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[36565] = {
					"Apothecary Baxter", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[40923] = {
					"Unstable Corruption", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[54303] = {
					"Doomguard", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[27598] = {
					"Fetid Troll Corpse", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[17395] = {
					"Shadowmoon Summoner", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[17427] = {
					"Shattered Hand Archer", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[26674] = {
					"Darkweb Hatchling", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[17491] = {
					"Laughing Skull Rogue", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[15930] = {
					"Feugen", -- [1]
					"Naxxramas", -- [2]
				},
				[14398] = {
					"Eldreth Darter", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[45912] = {
					"Wild Vortex", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[15978] = {
					"Crypt Reaver", -- [1]
					"Naxxramas", -- [2]
				},
				[17976] = {
					"Commander Sarannis", -- [1]
					"Tempest Keep: The Botanica", -- [2]
					"enUS", -- [3]
				},
				[184259] = {
					"Night Lord", -- [1]
					"Karazhan", -- [2]
				},
				[45919] = {
					"Young Storm Dragon", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[27982] = {
					"Forged Iron Dwarf", -- [1]
					"Halls of Stone", -- [2]
				},
				[133852] = {
					"Living Rot", -- [1]
					"The Underrot", -- [2]
				},
				[39700] = {
					"Beauty", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[11120] = {
					"Risen Hammersmith", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[6016] = {
					"Elemental Protection Totem", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[24080] = {
					"Dragonflayer Weaponsmith", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[16154] = {
					"Risen Squire", -- [1]
					"Naxxramas", -- [2]
				},
				[40084] = {
					"Bellows Slave", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[8095] = {
					"Sul'lithuz Sandcrawler", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[52761] = {
					"Gordok Reaver", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[42845] = {
					"Rock Borer", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[6232] = {
					"Arcane Nullifier X-21", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[8127] = {
					"Antu'sul", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[184261] = {
					"Wanton Host", -- [1]
					"Karazhan", -- [2]
				},
				[6233] = {
					"Mechanized Sentry", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
				[36502] = {
					"Devourer of Souls", -- [1]
					"The Forge of Souls", -- [2]
					"enUS", -- [3]
				},
				[6112] = {
					"Windfury Totem", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[6234] = {
					"Mechanized Guardian", -- [1]
					"Gnomeregan", -- [2]
					"enUS", -- [3]
				},
			},
			["aura_cooldown_reverse"] = false,
			["indicator_anchor"] = {
				["y"] = -12,
				["x"] = 1,
				["side"] = 1,
			},
			["health_selection_overlay_alpha"] = 0,
			["minor_height_scale"] = 0.9999999403953552,
			["aura_padding"] = 2,
			["last_news_time"] = 1551553489,
			["aura_width2"] = 16,
			["aura_stack_size"] = 13,
			["aura_height2"] = 14,
			["health_cutoff"] = false,
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
			},
			["extra_icon_anchor"] = {
				["y"] = 2,
				["x"] = -30,
				["side"] = 2,
			},
			["extra_icon_wide_icon"] = false,
			["range_check_alpha"] = 0.199999988079071,
			["semver"] = "1.0.4",
			["aura_frame2_anchor"] = {
				["y"] = 15.5,
				["side"] = 7,
			},
			["aura_alpha"] = 1,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
			["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
			["castbar_icon_x_offset"] = 1,
			["debuff_show_cc"] = false,
			["transparency_behavior"] = 2,
			["aura_consolidate"] = true,
			["extra_icon_width"] = 28,
			["health_statusbar_texture"] = "xVerminClean",
			["hook_auto_imported"] = {
				["Color Automation"] = 1,
				["Blockade Encounter"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Hide Neutral Units"] = 1,
				["Aura Reorder"] = 3,
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Monk Statue"] = 2,
				["Bwonsamdi Reaping"] = 1,
				["Jaina Encounter"] = 6,
				["Execute Range"] = 1,
				["Players Targetting Amount"] = 4,
				["Extra Border"] = 2,
				["Targetting Alpha"] = 3,
				["Target Color"] = 3,
				["Combo Points"] = 6,
				["Attacking Specific Unit"] = 2,
			},
			["minor_width_scale"] = 0.9999999403953552,
			["castbar_target_text_size"] = 6,
			["aura_frame1_anchor"] = {
				["y"] = 15.5,
				["side"] = 1,
			},
			["honor_blizzard_plate_alpha"] = true,
			["aura_height"] = 14,
			["non_targeted_alpha_enabled"] = true,
			["cast_statusbar_bgtexture"] = "xVerminClean",
			["aura2_x_offset"] = 0,
			["target_indicator"] = "NONE",
			["extra_icon_stack_size"] = 12,
			["saved_cvars"] = {
				["nameplateShowOnlyNames"] = "0",
				["nameplateOverlapV"] = "1.1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "0",
				["nameplateShowFriendlyTotems"] = "1",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowDebuffsOnFriendly"] = "0",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "0",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["clampTargetNameplateToScreen"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "80",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateTargetBehindMaxDistance"] = "30",
				["nameplateShowEnemies"] = "0",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "1",
				["nameplateSelfTopInset"] = "0.57687740325928",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "0",
				["nameplateShowEnemyPets"] = "1",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.15",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateLargeTopInset"] = "0.085",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateMotion"] = "0",
				["ShowClassColorInNameplate"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateOccludedAlphaMult"] = "0",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateRemovalAnimation"] = "0",
				["nameplateSelfBottomInset"] = "0.32596862792969",
				["nameplateShowEnemyTotems"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateShowEnemyGuardians"] = "0",
				["nameplateSelfAlpha"] = "1",
				["nameplateShowFriends"] = "0",
				["nameplatePersonalShowAlways"] = "1",
			},
			["login_counter"] = 9821,
			["extra_icon_caster_name"] = false,
			["aura_cooldown_show_swipe"] = false,
			["show_aggro_flash"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 0.9000000357627869,
				},
			},
			["bossmod_cooldown_text_enabled"] = false,
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator6",
			["plate_config"] = {
				["player"] = {
					["spellpercent_text_font"] = "Accidental Presidency",
					["level_text_font"] = "Accidental Presidency",
					["actorname_text_font"] = "Accidental Presidency",
					["big_actortitle_text_font"] = "Accidental Presidency",
					["spellname_text_font"] = "Accidental Presidency",
					["click_through"] = true,
					["power_percent_text_font"] = "Accidental Presidency",
					["power_percent_text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
					},
					["percent_text_font"] = "Accidental Presidency",
					["big_actorname_text_font"] = "Accidental Presidency",
				},
				["friendlyplayer"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Accidental Presidency",
					["show_guild_name"] = true,
					["level_text_size"] = 8,
					["actorname_use_class_color"] = true,
					["spellpercent_text_anchor"] = {
						["x"] = 1,
						["side"] = 5,
					},
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellpercent_text_outline"] = "NONE",
					["level_text_font"] = "Accidental Presidency",
					["spellname_text_color"] = {
						0.95294117647059, -- [1]
						[3] = 0.9921568627451,
					},
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["all_names"] = true,
					["big_actortitle_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 11,
					["only_damaged"] = false,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["only_thename"] = true,
					["big_actortitle_text_font"] = "Accidental Presidency",
					["spellpercent_text_size"] = 9,
					["level_text_anchor"] = {
						["x"] = 1,
						["side"] = 5,
					},
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						nil, -- [1]
						8, -- [2]
					},
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["spellname_text_font"] = "Accidental Presidency",
					["big_actorname_text_outline"] = "OUTLINE",
					["big_actortitle_text_size"] = 10,
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["actorname_text_size"] = 12,
					["big_actorname_text_font"] = "Accidental Presidency",
					["percent_text_size"] = 8,
					["percent_text_ooc"] = true,
					["percent_show_health"] = true,
					["spellpercent_text_enabled"] = true,
					["power_percent_text_font"] = "Accidental Presidency",
					["percent_text_font"] = "Accidental Presidency",
					["buff_frame_y_offset"] = 0,
					["quest_enabled"] = true,
					["actorname_text_font"] = "Accidental Presidency",
					["actorname_text_anchor"] = {
						["y"] = -3,
						["x"] = -1,
						["side"] = 1,
					},
					["health_incombat"] = {
						120, -- [1]
						14, -- [2]
					},
					["health"] = {
						120, -- [1]
						14, -- [2]
					},
					["percent_text_enabled"] = true,
					["spellname_text_size"] = 9,
					["level_text_alpha"] = 0.29999998211861,
					["percent_text_outline"] = "NONE",
					["level_text_enabled"] = true,
				},
				["friendlynpc"] = {
					["castbar_offset"] = -5,
					["spellpercent_text_font"] = "Accidental Presidency",
					["level_text_size"] = 8,
					["cast"] = {
						80, -- [1]
						5, -- [2]
					},
					["spellpercent_text_anchor"] = {
						["x"] = 1,
						["side"] = 5,
					},
					["spellname_text_outline"] = "OUTLINE",
					["spellpercent_text_outline"] = "NONE",
					["level_text_font"] = "Accidental Presidency",
					["spellname_text_color"] = {
						0.95294117647059, -- [1]
						[3] = 0.9921568627451,
					},
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 9,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["big_actortitle_text_font"] = "Accidental Presidency",
					["spellpercent_text_size"] = 8,
					["level_text_anchor"] = {
						["x"] = 1,
						["side"] = 5,
					},
					["cast_incombat"] = {
						80, -- [1]
						5, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["percent_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["spellname_text_font"] = "Accidental Presidency",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["big_actorname_text_font"] = "Accidental Presidency",
					["big_actortitle_text_size"] = 10,
					["big_actorname_text_size"] = 10,
					["percent_text_ooc"] = true,
					["level_text_alpha"] = 0.29999998211861,
					["percent_text_size"] = 8,
					["percent_text_font"] = "Accidental Presidency",
					["quest_enabled"] = false,
					["actorname_text_font"] = "Accidental Presidency",
					["power_percent_text_font"] = "Accidental Presidency",
					["quest_color_enabled"] = false,
					["spellname_text_size"] = 8,
					["health"] = {
						120, -- [1]
						14, -- [2]
					},
					["percent_text_outline"] = "NONE",
					["actorname_text_anchor"] = {
						["y"] = -3,
						["x"] = -1,
						["side"] = 1,
					},
					["health_incombat"] = {
						nil, -- [1]
						14, -- [2]
					},
					["percent_show_health"] = true,
					["level_text_enabled"] = true,
				},
				["enemynpc"] = {
					["level_text_size"] = 10,
					["cast"] = {
						140, -- [1]
						8, -- [2]
					},
					["spellpercent_text_anchor"] = {
						["x"] = 1,
						["side"] = 5,
					},
					["spellpercent_text_outline"] = "NONE",
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 7,
					["spellpercent_text_size"] = 9,
					["level_text_anchor"] = {
						["y"] = 1.5,
						["x"] = -2,
						["side"] = 2,
					},
					["cast_incombat"] = {
						140, -- [1]
						8, -- [2]
					},
					["spellname_text_size"] = 8,
					["spellname_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["percent_text_anchor"] = {
						["y"] = -2,
						["side"] = 11,
					},
					["actorname_text_size"] = 8,
					["level_text_outline"] = "OUTLINE",
					["level_text_alpha"] = 1,
					["percent_text_size"] = 7,
					["quest_enabled"] = false,
					["spellname_text_color"] = {
						0.95294117647059, -- [1]
						[3] = 0.9921568627451,
					},
					["quest_color_enabled"] = false,
					["health_incombat"] = {
						140, -- [1]
						12, -- [2]
					},
					["health"] = {
						140, -- [1]
					},
					["power_percent_text_font"] = "Accidental Presidency",
					["actorname_text_anchor"] = {
						["y"] = 1,
						["side"] = 1,
					},
					["spellpercent_text_enabled"] = false,
				},
				["global_health_height"] = 14,
				["enemyplayer"] = {
					["big_actorname_text_size"] = 10,
					["actorname_use_class_color"] = true,
					["cast"] = {
						140, -- [1]
						5, -- [2]
					},
					["fixed_class_color"] = {
						nil, -- [1]
						0.04705882352941176, -- [2]
						0.1490196078431373, -- [3]
					},
					["spellpercent_text_anchor"] = {
						["x"] = 1,
						["side"] = 5,
					},
					["spellname_text_outline"] = "OUTLINE",
					["spellpercent_text_outline"] = "NONE",
					["all_names"] = true,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 7,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellpercent_text_size"] = 9,
					["level_text_anchor"] = {
						["y"] = 1.5,
						["x"] = -2,
						["side"] = 2,
					},
					["cast_incombat"] = {
						140, -- [1]
						5, -- [2]
					},
					["spellname_text_size"] = 8,
					["spellname_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["percent_text_anchor"] = {
						["y"] = -2,
						["side"] = 11,
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 8,
					["power_percent_text_font"] = "Accidental Presidency",
					["level_text_outline"] = "OUTLINE",
					["use_playerclass_color"] = false,
					["level_text_alpha"] = 1,
					["spellpercent_text_enabled"] = false,
					["big_actortitle_text_size"] = 10,
					["quest_enabled"] = false,
					["spellname_text_color"] = {
						0.95294117647059, -- [1]
						[3] = 0.9921568627451,
					},
					["quest_color_enabled"] = false,
					["health_incombat"] = {
						140, -- [1]
						12, -- [2]
					},
					["health"] = {
						140, -- [1]
					},
					["actorname_text_anchor"] = {
						["y"] = 1,
						["side"] = 1,
					},
					["percent_text_size"] = 7,
				},
				["global_health_width"] = 120,
			},
			["aura_y_offset"] = 15.5,
			["use_ui_parent"] = true,
			["focus_texture"] = "Melli",
			["cast_statusbar_bgcolor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0.79781, -- [4]
			},
			["resources_settings"] = {
				["global_settings"] = {
					["show_depleted"] = false,
					["scale"] = 0.7000000476837158,
				},
				["chr"] = {
					["Player-4465-036D491F"] = "Runes",
					["Player-4465-01D5BF39"] = "ArcaneCharges",
					["Player-4465-01FA5DEE"] = "ComboPoints",
					["Player-4465-01CE7466"] = "SoulShards",
					["Player-4465-02B843FA"] = "ComboPoints",
					["Player-4465-02BB4683"] = "HolyPower",
				},
			},
			["indicator_scale"] = 0.300000011920929,
			["cast_statusbar_spark_offset"] = -13,
			["castbar_icon_size"] = "same as castbar plus healthbar",
			["npc_colors"] = {
				[131670] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[129602] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134284] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[133870] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[134157] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[136006] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[132532] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[144071] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134158] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[122973] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134701] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[136295] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[136934] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134990] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[128967] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[138465] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[134417] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[129366] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[139422] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[136139] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[134418] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[133685] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[131677] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134514] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[136076] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[127757] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[137511] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[137830] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[129367] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[130435] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[133432] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[128969] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[139425] = {
					false, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[132126] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[130404] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[133593] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[131585] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[133912] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[135474] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[131586] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[134232] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[129369] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[127106] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[131587] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[137484] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137516] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[130485] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[131492] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[129529] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[137517] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[129370] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[130661] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[138187] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[134139] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137486] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[131685] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[129227] = {
					false, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[134331] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[138061] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[127315] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[134364] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[133345] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[129547] = {
					true, -- [1]
					false, -- [2]
					"olivedrab", -- [3]
				},
				[134174] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[137521] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[138063] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[141283] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[138255] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[138064] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131817] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[134144] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[131818] = {
					false, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[141285] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[136249] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[126919] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[129788] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[137716] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135007] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134338] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[127111] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[135167] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[128434] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[135263] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[139949] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[132491] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[128435] = {
					false, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[135329] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[134150] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[122969] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[134629] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[135258] = {
					false, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[133430] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[135235] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[133482] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[137478] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137103] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[131436] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[136549] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[125977] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[135204] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[131666] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[129600] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134137] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[129559] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134599] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137713] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[131858] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[141284] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[126918] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[136470] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[133835] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[136353] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[135365] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[136186] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[134600] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[136214] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[133852] = {
					true, -- [1]
					false, -- [2]
					"olivedrab", -- [3]
				},
				[122971] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[130436] = {
					false, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[130488] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[126928] = {
					false, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[122984] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[122972] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[134012] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[135239] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[134251] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[135241] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[133436] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[136005] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
			},
			["cast_statusbar_spark_half"] = true,
			["auto_inside_raid_dungeon"] = {
				["hide_enemy_player_totems"] = true,
				["hide_enemy_player_pets"] = true,
			},
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1620377377,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 363,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Name"] = "Attacking Specific Unit [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 95,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Hide Neutral Units [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1553450458,
					["Icon"] = 1990989,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 185,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Name"] = "Players Targeting a Target [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1551825362,
					["Icon"] = 1966587,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Current Target Color [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["Time"] = 1552354619,
					["Icon"] = 878211,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [4]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 284,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 192,
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled and unitFrame.ActorType == \"enemyplayer\") then\n        \n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n        \n    else\n        envTable.BorderFrame:Hide() \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Name"] = "Extra Border [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1551825335,
					["Icon"] = 133689,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [6]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 107,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Color Automation [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1551825317,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 139,
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n        \n        if (percent <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.ExecutePercent)\n            envTable.InExecuteRange = true\n            \n        elseif (percent < envTable.SecondRangeStart and percent >= envTable.SecondRangeEnd) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.SecondRangeEnd)\n            envTable.InExecuteRange = true\n            \n        else\n            if (envTable.InExecuteRange) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                Plater.RefreshNameplateColor (unitFrame)\n                Plater.SetBorderColor (unitFrame)\n                envTable.InExecuteRange = false\n            end\n        end\n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = true\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --second execute range (UseCustomExecutePercent must be enabled)\n    envTable.SecondRangeStart = 0.999\n    envTable.SecondRangeEnd = 0.8\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame, divisorPercent)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Name"] = "Advanced Execute Range",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1551825289,
					["Icon"] = 135358,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 356,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 236,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
					},
					["Name"] = "Jaina Encounter [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1551894760,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
							["1"] = 2281,
							["Enabled"] = true,
						},
						["affix"] = {
						},
					},
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 81,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Name"] = "Stormwall Encounter [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1551887545,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
							["1"] = 2280,
							["Enabled"] = true,
						},
						["affix"] = {
						},
					},
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 58,
					["HooksTemp"] = {
					},
					["Author"] = "Herith�gue-Proudmoore",
					["Desc"] = "Change the border of the focus target.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.BorderThickness = 3\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.UpdateBorder (unitFrame, unit)\n        local plateFrame = unitFrame:GetParent()\n        \n        if (UnitIsUnit (\"focus\", unit)) then\n            Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            local borderSize = envTable.BorderThickness\n            unitFrame.healthBar.border:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.border:UpdateSizes()        \n            \n        else\n            Plater.SetBorderColor (unitFrame)\n            Plater.UpdatePlateBorderThickness (unitFrame.PlateFrame)\n            unitFrame.healthBar.border:UpdateSizes()\n        end\n    end\nend\n\n\n\n",
					},
					["Name"] = "Focus Target Border",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1552962607,
					["Icon"] = 133006,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [13]
				{
					["Enabled"] = false,
					["Revision"] = 47,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
					},
					["Name"] = "Don't Have Aura [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1551825334,
					["Icon"] = 136207,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [14]
				{
					["Enabled"] = false,
					["Revision"] = 55,
					["LastHookEdited"] = "Constructor",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1579030189,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
							["Enabled"] = true,
							["117"] = true,
						},
					},
					["HooksTemp"] = {
					},
					["Name"] = "M+ Bwonsamdi Reaping",
					["Icon"] = 2446016,
					["PlaterCore"] = 1,
				}, -- [15]
				{
					["Enabled"] = false,
					["Revision"] = 44,
					["Options"] = {
					},
					["LastHookEdited"] = "Cast Start",
					["Author"] = "Kastfall-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Show the name of the unit current target ",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --max length of the text\n    envTable.TextMaxLength = 100\n    \n    --update the spell name text\n    function envTable.UpdateSpellNameText (unitFrame)\n        \n        local castBar = unitFrame.castBar\n        local textString = castBar.Text\n        local spellName = castBar.SpellName\n        \n        if (unitFrame.targetUnitID) then\n            local targetName = UnitName (unitFrame.targetUnitID)\n            \n            if (targetName) then\n                textString:SetText (spellName .. \" > \" .. targetName) \n                \n                if (envTable.TextMaxLength) then\n                    Plater.LimitTextSize (textString, envTable.TextMaxLength)\n                end\n                \n            else\n                textString:SetText (spellName)\n            end\n        else\n            textString:SetText (spellName)\n        end\n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1665137650,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["HooksTemp"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --max length of the text\n    envTable.TextMaxLength = 100\n    \n    --update the spell name text\n    function envTable.UpdateSpellNameText (unitFrame)\n        \n        local castBar = unitFrame.castBar\n        local textString = castBar.Text\n        local spellName = castBar.SpellName\n        \n        if (unitFrame.targetUnitID) then\n            local targetName = UnitName (unitFrame.targetUnitID)\n            \n            if (targetName) then\n                textString:SetText (spellName .. \" > \" .. targetName) \n                \n                if (envTable.TextMaxLength) then\n                    Plater.LimitTextSize (textString, envTable.TextMaxLength)\n                end\n                \n            else\n                textString:SetText (spellName)\n            end\n        else\n            textString:SetText (spellName)\n        end\n    end\nend",
					},
					["Name"] = "Cast Target",
					["Icon"] = 413580,
					["PlaterCore"] = 1,
				}, -- [16]
				{
					["Enabled"] = false,
					["Revision"] = 43,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Only show nameplates while in combat, see the constructor for more options.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Zone Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckIfCanShowNameplate (unitFrame)\n        if (Plater.IsInCombat()) then\n            \n            if (not unitFrame.healthBar:IsShown()) then\n                Plater.ShowHealthBar (unitFrame)\n                Plater.EnableHighlight (unitFrame)\n            end\n            \n        else\n            \n            if (unitFrame.healthBar:IsShown()) then\n                Plater.HideHealthBar (unitFrame)\n                Plater.DisableHighlight (unitFrame)\n            end\n            \n        end        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Only in Combat",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1551825361,
					["Icon"] = 135473,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [17]
				{
					["Enabled"] = false,
					["Revision"] = 35,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add an exclamation icon on units with color set in the Npc Colors tab with the \"Only Script\" box selected.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local npcColor = Plater.GetNpcColor (unitFrame)\n    if (npcColor) then\n        unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n        unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)        \n        unitFrame.NpcColorCodeTexture:Show()\n        \n    else\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.IconTexture = [[Interface\\AddOns\\Plater\\media\\exclamation_64]]\n    envTable.Alpha = 0.8\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetTexture (envTable.IconTexture)\n        \n        --texture side | anchor to which frame | frame side | x offset | y offset\n        unitFrame.NpcColorCodeTexture:SetPoint (\"right\", unitFrame.healthBar, \"right\", -2, 0)\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Npc Colors Icon",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1553450716,
					["Icon"] = "Interface\\AddOns\\Plater\\media\\exclamation_64",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [18]
				{
					["Enabled"] = false,
					["Revision"] = 68,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a color tag on units with color set in the Npc Colors tab with the \"Only Script\" box selected.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateColorTag (unitFrame)   \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateTexture (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Alpha = 0.75\n    \n    envTable.Anchor = {\n        side = 11, --right side inside the nameplate\n        x = -3,\n        y = 0\n    }\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetColorTexture (1, 1, 1, 1)\n        \n    end\n    \n    function  envTable.UpdateColorTag (unitFrame)\n        local npcColor = Plater.GetNpcColor (unitFrame)\n        if (npcColor) then\n            unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n            unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)           \n            unitFrame.NpcColorCodeTexture:Show()        \n        end\n    end\n    \n    function  envTable.UpdateTexture (unitFrame)\n        Plater.SetAnchor (unitFrame.NpcColorCodeTexture, envTable.Anchor)\n        unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight() - 4, unitFrame.healthBar:GetHeight() - 4)\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n        envTable.UpdateColorTag (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Npc Colors Tag",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1553450705,
					["Icon"] = "Interface\\AddOns\\Plater\\media\\radio_64",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [19]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Ditador-Azralon",
					["Options"] = {
					},
					["Desc"] = "Change the color of the aura timer by it's time left",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1665137855,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Nameplate Updated",
					["Name"] = "Paint Aura Timers",
					["Icon"] = "Interface\\Timer\\Challenges-Logo",
					["PlaterCore"] = 1,
				}, -- [20]
				{
					["Enabled"] = false,
					["Revision"] = 133,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
					},
					["Author"] = "????????-Illidan",
					["Options"] = {
					},
					["Desc"] = "Config aura borders",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
					},
					["Prio"] = 99,
					["Time"] = 1665138777,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Nameplate Updated",
					["Name"] = "Advanced Debuff Border",
					["Icon"] = 133006,
					["PlaterCore"] = 1,
				}, -- [21]
				{
					["Enabled"] = false,
					["Revision"] = 35,
					["HooksTemp"] = {
					},
					["Author"] = "�r��ne-Kel'thuzad",
					["Desc"] = "Show yellow star for elite; Silver star for rares",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.UpdateIndicator (unitFrame, unitId)\n        local unitClassification = UnitClassification (unitId)\n        local unitName = UnitName (unitId)\n        unitName = unitName or UNKNOWN\n        \n        if (unitClassification == \"rareelite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. \"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t \" .. unitName)\n            \n        elseif (unitClassification == \"rare\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. unitName)\n            \n        elseif (unitClassification == \"elite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t\" .. unitName)\n            \n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Rarity in the Name",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1551825364,
					["Icon"] = "Interface\\AddOns\\Plater\\media\\star_full_64",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [22]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end    \nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateThreatState (unitFrame, unitId)\n    \nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Anchor = {side = 11, x = -2, y = 0}\n    envTable.Texture = \"Interface\\\\AddOns\\\\Plater\\\\media\\\\exclamation2_64\"\n    \n    --it'll only use the icon if the nameplate has a color from the Npc Colors tab and \"Only Scripts\" disabled.\n    envTable.OnlyWhenUsingNpcColor = true --if false, it'll always use the icon\n    \n    --private\n    envTable.PlayerRole = \"NONE\" --automatically changed by the script\n    \n    function envTable.CreateIndicator (unitFrame)\n        if (not unitFrame.ThreatIcon) then\n            unitFrame.ThreatIcon = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        end\n    end\n    \n    function envTable.UpdateIndicator (unitFrame)\n        envTable.CreateIndicator (unitFrame)\n        \n        unitFrame.ThreatIcon:SetTexture (envTable.Texture)\n        Plater.SetAnchor (unitFrame.ThreatIcon, envTable.Anchor)\n        unitFrame.ThreatIcon:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateThreatState (unitFrame, unitId)\n        if (not unitFrame.ThreatIcon) then --if there's no icon created yet\n            return\n            \n        elseif (not Plater.IsInCombat()) then --not in combat\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (unitFrame.IsSelf) then --personal bar\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (envTable.OnlyWhenUsingNpcColor) then --must be using a npc color?\n            if (not unitFrame.UsingCustomColor) then\n                unitFrame.ThreatIcon:Hide()\n                return\n            end\n        end\n        \n        local isTanking, threatStatus, threatpct = UnitDetailedThreatSituation (\"player\", unitId)\n        \n        if (isTanking) then\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Hide()\n            else\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateAggroColor))\n            end\n        else\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateNoAggroColor))                \n            else\n                unitFrame.ThreatIcon:Hide()                \n            end\n        end\n    end\n    \n    function envTable.UpdatePlayerRole (unitFrame)\n        local profile = Plater.db.profile\n        local role = Plater:GetPlayerRole()\n        \n        if (role == \"TANK\") then\n            envTable.PlayerRole = \"TANK\"\n            envTable.NameplateAggroColor = profile.tank.colors.aggro\n            envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            \n        else\n            envTable.PlayerRole = \"DAMAGER\"\n            envTable.NameplateAggroColor = profile.dps.colors.aggro\n            envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            \n        end        \n    end\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend",
					},
					["Author"] = "Cyclopes-Turalyon",
					["Options"] = {
					},
					["Desc"] = "Add an icon to indicate an unit has Aggro on you. By default only show for units using a custom color from Npc Colors.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame)\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateThreatState (unitFrame, unitId)\n    \nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end    \nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Anchor = {side = 11, x = -2, y = 0}\n    envTable.Texture = \"Interface\\\\AddOns\\\\Plater\\\\media\\\\exclamation2_64\"\n    \n    --it'll only use the icon if the nameplate has a color from the Npc Colors tab and \"Only Scripts\" disabled.\n    envTable.OnlyWhenUsingNpcColor = true --if false, it'll always use the icon\n    \n    --private\n    envTable.PlayerRole = \"NONE\" --automatically changed by the script\n    \n    function envTable.CreateIndicator (unitFrame)\n        if (not unitFrame.ThreatIcon) then\n            unitFrame.ThreatIcon = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        end\n    end\n    \n    function envTable.UpdateIndicator (unitFrame)\n        envTable.CreateIndicator (unitFrame)\n        \n        unitFrame.ThreatIcon:SetTexture (envTable.Texture)\n        Plater.SetAnchor (unitFrame.ThreatIcon, envTable.Anchor)\n        unitFrame.ThreatIcon:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateThreatState (unitFrame, unitId)\n        if (not unitFrame.ThreatIcon) then --if there's no icon created yet\n            return\n            \n        elseif (not Plater.IsInCombat()) then --not in combat\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (unitFrame.IsSelf) then --personal bar\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (envTable.OnlyWhenUsingNpcColor) then --must be using a npc color?\n            if (not unitFrame.UsingCustomColor) then\n                unitFrame.ThreatIcon:Hide()\n                return\n            end\n        end\n        \n        local isTanking, threatStatus, threatpct = UnitDetailedThreatSituation (\"player\", unitId)\n        \n        if (isTanking) then\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Hide()\n            else\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateAggroColor))\n            end\n        else\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateNoAggroColor))                \n            else\n                unitFrame.ThreatIcon:Hide()                \n            end\n        end\n    end\n    \n    function envTable.UpdatePlayerRole (unitFrame)\n        local profile = Plater.db.profile\n        local role = Plater:GetPlayerRole()\n        \n        if (role == \"TANK\") then\n            envTable.PlayerRole = \"TANK\"\n            envTable.NameplateAggroColor = profile.tank.colors.aggro\n            envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            \n        else\n            envTable.PlayerRole = \"DAMAGER\"\n            envTable.NameplateAggroColor = profile.dps.colors.aggro\n            envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            \n        end        \n    end\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend",
					},
					["Prio"] = 99,
					["Time"] = 1665136691,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "",
					["Name"] = "Aggro Indicator",
					["Icon"] = 132344,
					["PlaterCore"] = 1,
				}, -- [23]
				{
					["Enabled"] = false,
					["Revision"] = 20,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Edit the Constructor script setting the font you want in the FONT = \"\", then /reload.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"Accidental Presidency\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
					},
					["Name"] = "Change All Fonts",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1551825316,
					["Icon"] = 134331,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [24]
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show the power bar for specific units",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\") then\n        \n        local arenaEnemies = GetNumArenaOpponentSpecs()\n        local found = false\n        for i = 1, arenaEnemies do\n            local guid = UnitGUID (\"arena\" .. i)\n            print (guid)\n            if (guid == unitFrame.namePlateUnitGUID) then\n                \n                local spec = GetArenaOpponentSpec (i)\n                print (spec)\n                if (spec) then\n                    local id, name, description, icon, role, class = GetSpecializationInfoByID (spec)\n                    print (name)\n                    if (role == \"HEALER\") then\n                        envTable.UpdatePowerBar (unitFrame)\n                    end\n                    print (role)\n                end\n                \n                break\n            end\n        end\n        \n        return\n    end\n    \n    --show for enemy players\n    if (unitFrame.ActorType == \"enemyplayer\") then\n        envTable.UpdatePowerBar (unitFrame)\n        return\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.PowerBarAnchor = {side = 4, x = 0, y = -10}\n    \n    function envTable.UpdatePowerBar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        Plater.SetAnchor (unitFrame.powerBar, envTable.PowerBarAnchor)\n        \n    end\n    \nend\n\n\n",
					},
					["Name"] = "Power Bar",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1553450521,
					["Icon"] = 1375677,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [25]
				{
					["Enabled"] = false,
					["Revision"] = 164,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    if(unitFrame.ActorType == \"enemynpc\" or unitFrame.ActorType == \"enemyplayer\") then\n        envTable.ShowIcon = true\n    end\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
					},
					["Author"] = "Ditador-Azralon",
					["Options"] = {
					},
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    if(unitFrame.ActorType == \"enemynpc\" or unitFrame.ActorType == \"enemyplayer\") then\n        envTable.ShowIcon = true\n    end\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1665077611,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Name"] = "Cast Icon Anchor",
					["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
					["PlaterCore"] = 1,
				}, -- [26]
				{
					["Enabled"] = false,
					["Revision"] = 88,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    envTable.showIcon = false\n    \n    if(unitFrame.ActorType == \"enemynpc\" or unitFrame.ActorType == \"enemyplayer\") then\n        envTable.showIcon = true\n    end\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        if(envTable.showIcon) then\n            local castBar = unitFrame.castBar\n            \n            local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n            castBar.IconBorder:SetVertexColor (r, g, b, a)\n            \n            local size = envTable.BorderThickness\n            castBar.IconBorder:SetBorderSizes (size, size, size, size)\n            castBar.IconBorder:UpdateSizes()\n            \n            local icon = castBar.Icon\n            if (envTable.AnchorSide == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, 0)\n                icon:SetPoint (\"bottomright\", castBar, \"bottomleft\", -1, 0)\n                icon:SetWidth (icon:GetHeight())\n                \n            elseif (envTable.AnchorSide == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, 0)\n                icon:SetPoint (\"bottomleft\", castBar, \"bottomright\", 1, 0)\n                icon:SetWidth (icon:GetHeight())\n                \n            end\n            \n            icon:Show()\n            castBar.IconOverlayFrame:Show()\n            \n        else \n            --  icon:Hide()\n            -- castBar.IconOverlayFrame:Hide()\n        end\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame and  envTable.showIcon) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Options"] = {
					},
					["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    envTable.showIcon = false\n    \n    if(unitFrame.ActorType == \"enemynpc\" or unitFrame.ActorType == \"enemyplayer\") then\n        envTable.showIcon = true\n    end\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        if(envTable.showIcon) then\n            local castBar = unitFrame.castBar\n            \n            local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n            castBar.IconBorder:SetVertexColor (r, g, b, a)\n            \n            local size = envTable.BorderThickness\n            castBar.IconBorder:SetBorderSizes (size, size, size, size)\n            castBar.IconBorder:UpdateSizes()\n            \n            local icon = castBar.Icon\n            if (envTable.AnchorSide == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, 0)\n                icon:SetPoint (\"bottomright\", castBar, \"bottomleft\", -1, 0)\n                icon:SetWidth (icon:GetHeight())\n                \n            elseif (envTable.AnchorSide == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, 0)\n                icon:SetPoint (\"bottomleft\", castBar, \"bottomright\", 1, 0)\n                icon:SetWidth (icon:GetHeight())\n                \n            end\n            \n            icon:Show()\n            castBar.IconOverlayFrame:Show()\n            \n        else \n            --  icon:Hide()\n            -- castBar.IconOverlayFrame:Hide()\n        end\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame and  envTable.showIcon) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1665137658,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "",
					["Name"] = "Cast Icon Border",
					["Icon"] = 133004,
					["PlaterCore"] = 1,
				}, -- [27]
				{
					["Enabled"] = false,
					["Revision"] = 114,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon =false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    unitFrame.castBar:SetFrameStrata(\"BACKGROUND\")\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.CastBarBorder:SetFrameStrata(\"BACKGROUND\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Adds a pixels perfect border around the cast bar.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon =false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    unitFrame.castBar:SetFrameStrata(\"BACKGROUND\")\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.CastBarBorder:SetFrameStrata(\"BACKGROUND\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1665137582,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Cast Start",
					["Name"] = "Cast Bar Border",
					["Icon"] = 133004,
					["PlaterCore"] = 1,
				}, -- [28]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "????????-Illidan",
					["OptionsValues"] = {
					},
					["Desc"] = "Debuff timer show decimal values",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then\n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then            \n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end        \n    end    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --minimum time left to take effect\n    envTable.MinTime = 9.999\n    \nend",
					},
					["Prio"] = 99,
					["Name"] = "Decimal Debuff Timer",
					["PlaterCore"] = 1,
					["HooksTemp"] = {
					},
					["Time"] = 1664728511,
					["Icon"] = 609811,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [29]
				{
					["Enabled"] = false,
					["Revision"] = 100,
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Nameplate Updated",
					["Author"] = "?????-Illidan",
					["Options"] = {
					},
					["Desc"] = "Format Buff Special icons like the regular aura icons.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --    if false then return end\n    \n    for _, iconFrame in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        \n        unitFrame.ExtraIconFrame.options.show_text = true\n        \n        local profile = Plater.db.profile\n        \n        Plater.SetAnchor (iconFrame.CountdownText, profile.aura_timer_text_anchor)\n        Plater:SetFontSize (iconFrame.CountdownText, profile.aura_timer_text_size)\n        Plater:SetFontFace (iconFrame.CountdownText, profile.aura_timer_text_font)\n        \n        Plater.SetFontOutlineAndShadow (iconFrame.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n        \n        iconFrame.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n        iconFrame.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n        iconFrame.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)        \n        \n    end\n    \nend",
					},
					["Prio"] = 99,
					["Name"] = "Buff Special Mod",
					["PlaterCore"] = 1,
					["HooksTemp"] = {
					},
					["Time"] = 1651256148,
					["Icon"] = 136139,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [30]
				{
					["Enabled"] = false,
					["Revision"] = 29,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds two arrows into the target indicators options.",
					["Hooks"] = {
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 12,\n        height = 12,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \n    \n    \nend\n\n\n",
					},
					["Name"] = "Arrow Target Indicators",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Player Talent Update",
					["Time"] = 1551887544,
					["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_right_64",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [31]
				{
					["Enabled"] = false,
					["Revision"] = 20,
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.unitName:SetDrawLayer (\"overlay\", 7)\nend\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Ditador-Azralon",
					["Options"] = {
					},
					["Desc"] = "Set the unit name to be above the target shading texture.",
					["Hooks"] = {
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.unitName:SetDrawLayer (\"overlay\", 7)\nend\n\n\n\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Name"] = "Unit Name Over Target Shading",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Target Changed",
					["Time"] = 1665138533,
					["Icon"] = 237377,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [32]
				{
					["Enabled"] = false,
					["Revision"] = 25,
					["Options"] = {
					},
					["LastHookEdited"] = "Cast Start",
					["Author"] = "Ditador-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Set the spark height to the same size of the cast bar.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Name"] = "Adjust Spark Size",
					["PlaterCore"] = 1,
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
					},
					["Time"] = 1665136675,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\spark6",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [33]
				{
					["Enabled"] = false,
					["Revision"] = 74,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Show power bar for some units.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShowPowerBarForUnit (unitFrame)    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --power bar options:\n    \n    --for which units it should\n    envTable.ShowForEnemyPlayers = true\n    envTable.ShowForEnemyNpcs = false\n    \n    --specific npcs, can be the npc name or npcId\n    --this list work even if the ShowForEnemyNpcs is false\n    envTable.SpecificNpcs = {\n        [\"the rock\"] = true, --npc name\n        [225] = true, --npcId\n    }\n    \n    --anchor the power bar to\n    envTable.Anchor = {\n        side = 13, --inside the healthbar, bottom side\n        x = 0, \n        y = 0,\n    }\n    \n    --power bar height\n    envTable.Height = 1\n    \n    --power bar percent text\n    envTable.PercentTextEnabled = false\n    envTable.PercentTextAnchor = {\n        side = 7, --top right\n        x = 2, \n        y = 0,\n    }\n    \n    \n    --private\n    function envTable.ShowPowerbar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        envTable.UpdatePowerbar (unitFrame)\n    end\n    \n    function envTable.UpdatePowerbar (unitFrame)\n        local powerBar = unitFrame.powerBar\n        Plater.SetAnchor (powerBar, envTable.Anchor, unitFrame.healthBar)\n        powerBar:SetSize (unitFrame.healthBar:GetWidth(), envTable.Height)\n        \n        envTable.SavePowerBarSize (unitFrame, envTable.Height)\n        \n        if (envTable.PercentTextEnabled) then\n            powerBar.percentText:Show()\n            --copy the font from the health percent\n            Plater:SetFontFace (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_font)\n            Plater:SetFontSize (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_size)\n            Plater.SetAnchor (powerBar.percentText, envTable.PercentTextAnchor)\n        else\n            powerBar.percentText:Hide()\n        end\n    end\n    \n    function envTable.CanShowPowerBarForUnit (unitFrame)\n        --check if the is in the special list to force show\n        local forceShowPowerBar = envTable.SpecificNpcs [unitFrame.namePlateNpcId] or envTable.SpecificNpcs [unitFrame.namePlateUnitName] or envTable.SpecificNpcs [unitFrame.namePlateUnitNameLower]\n        if (forceShowPowerBar) then\n            envTable.ShowPowerbar (unitFrame)\n            \n            --check if the unit is a enemy player\n        elseif (unitFrame.ActorType == \"enemyplayer\") then\n            if (envTable.ShowForEnemyPlayers) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n            \n            --check if the unit is a enemy npc\n        elseif (unitFrame.ActorType == \"enemynpc\") then\n            if (envTable.ShowForEnemyNpcs) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n        end\n    end\n    \n    function envTable.SavePowerBarSize (unitFrame, height)\n        local plateConfigs = Plater.db.profile.plate_config [unitFrame.ActorType]\n        plateConfigs.mana[1] = plateConfigs.health[1]\n        plateConfigs.mana[2] = height\n        plateConfigs.mana_incombat[1] = plateConfigs.health_incombat[1]\n        plateConfigs.mana_incombat[2] = height\n    end\nend\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Name"] = "Power Bar",
					["PlaterCore"] = 1,
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --power bar options:\n    \n    --for which units it should\n    envTable.ShowForEnemyPlayers = true\n    envTable.ShowForEnemyNpcs = false\n    \n    --specific npcs, can be the npc name or npcId\n    --this list work even if the ShowForEnemyNpcs is false\n    envTable.SpecificNpcs = {\n        [\"the rock\"] = true, --npc name\n        [225] = true, --npcId\n    }\n    \n    --anchor the power bar to\n    envTable.Anchor = {\n        side = 13, --inside the healthbar, bottom side\n        x = 0, \n        y = 0,\n    }\n    \n    --power bar height\n    envTable.Height = 1\n    \n    --power bar percent text\n    envTable.PercentTextEnabled = false\n    envTable.PercentTextAnchor = {\n        side = 7, --top right\n        x = 2, \n        y = 0,\n    }\n    \n    \n    --private\n    function envTable.ShowPowerbar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        envTable.UpdatePowerbar (unitFrame)\n    end\n    \n    function envTable.UpdatePowerbar (unitFrame)\n        local powerBar = unitFrame.powerBar\n        Plater.SetAnchor (powerBar, envTable.Anchor, unitFrame.healthBar)\n        powerBar:SetSize (unitFrame.healthBar:GetWidth(), envTable.Height)\n        \n        envTable.SavePowerBarSize (unitFrame, envTable.Height)\n        \n        if (envTable.PercentTextEnabled) then\n            powerBar.percentText:Show()\n            --copy the font from the health percent\n            Plater:SetFontFace (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_font)\n            Plater:SetFontSize (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_size)\n            Plater.SetAnchor (powerBar.percentText, envTable.PercentTextAnchor)\n        else\n            powerBar.percentText:Hide()\n        end\n    end\n    \n    function envTable.CanShowPowerBarForUnit (unitFrame)\n        --check if the is in the special list to force show\n        local forceShowPowerBar = envTable.SpecificNpcs [unitFrame.namePlateNpcId] or envTable.SpecificNpcs [unitFrame.namePlateUnitName] or envTable.SpecificNpcs [unitFrame.namePlateUnitNameLower]\n        if (forceShowPowerBar) then\n            envTable.ShowPowerbar (unitFrame)\n            \n            --check if the unit is a enemy player\n        elseif (unitFrame.ActorType == \"enemyplayer\") then\n            if (envTable.ShowForEnemyPlayers) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n            \n            --check if the unit is a enemy npc\n        elseif (unitFrame.ActorType == \"enemynpc\") then\n            if (envTable.ShowForEnemyNpcs) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n        end\n    end\n    \n    function envTable.SavePowerBarSize (unitFrame, height)\n        local plateConfigs = Plater.db.profile.plate_config [unitFrame.ActorType]\n        plateConfigs.mana[1] = plateConfigs.health[1]\n        plateConfigs.mana[2] = height\n        plateConfigs.mana_incombat[1] = plateConfigs.health_incombat[1]\n        plateConfigs.mana_incombat[2] = height\n    end\nend\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShowPowerBarForUnit (unitFrame)    \nend",
					},
					["Time"] = 1665137828,
					["Icon"] = "Interface/Addons/Plater/Media/fire_64",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [34]
				{
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 348,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Name"] = "Cast Bar Icon Settings [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Key"] = "iconSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Size Offset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconPadding",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Key"] = "textureWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Width",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureHeightMod",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "texturePosition",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Position",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [35]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["UID"] = "0x633ffb124b5d4416",
					["Hooks"] = {
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    if UnitIsUnit(unitId,\"target\") then\n        unitFrame.castBar:SetFrameStrata(\"LOW\")\n    else\n        unitFrame.castBar:SetFrameStrata(\"BACKGROUND\")\n    end\nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if UnitIsUnit(unitId,\"target\") then\n        unitFrame.castBar:SetFrameStrata(\"LOW\")\n    else\n        unitFrame.castBar:SetFrameStrata(\"BACKGROUND\")\n    end\nend",
					},
					["Time"] = 1670245296,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = "",
					["Enabled"] = true,
					["Revision"] = 75,
					["Options"] = {
					},
					["Author"] = "Vermin-Golemagg",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "CastBar SetStrata",
					["PlaterCore"] = 1,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    print(\"init\",unitId,UnitIsUnit(unitId,\"target\"))\n    if UnitIsUnit(unitId,\"target\") then\n        unitFrame.castBar:SetFrameStrata(\"LOW\")\n    else\n        unitFrame.castBar:SetFrameStrata(\"BACKGROUND\")\n    end\nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if UnitIsUnit(unitId,\"target\") then\n        unitFrame.castBar:SetFrameStrata(\"LOW\")\n    else\n        unitFrame.castBar:SetFrameStrata(\"BACKGROUND\")\n    end\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    if UnitIsUnit(unitId,\"target\") then\n        unitFrame.castBar:SetFrameStrata(\"LOW\")\n    else\n        unitFrame.castBar:SetFrameStrata(\"BACKGROUND\")\n    end\nend",
						["Deinitialization"] = "		function (modTable)\n			--insert code here\n			\n		end\n	",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    if UnitIsUnit(unitId,\"target\") then\n        unitFrame.castBar:SetFrameStrata(\"LOW\")\n    else\n        unitFrame.castBar:SetFrameStrata(\"BACKGROUND\")\n    end\nend",
						["Initialization"] = "function (modTable)\n    local frame\n    for i = 1, 32 do\n        frame =  _G [\"NamePlate\"..i..\"PlaterUnitFrameCastBar\"]\n        if frame and 1==2 then \n            frame:SetFrameStrata(\"BACKGROUND\")\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:SetFrameStrata(\"BACKGROUND\")\nend\n\n\n\n\n\n\n",
					},
				}, -- [36]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \n    \n    -- print(Plater.PlayerIsTank)\n    \n    -- Plater.PlayerIsTank=true\nend\n\n\n",
					},
					["UID"] = "0x638deb9f1cb510e",
					["Hooks"] = {
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \n    \n    -- print(Plater.PlayerIsTank)\n    \n    -- Plater.PlayerIsTank=true\nend\n\n\n",
					},
					["Time"] = 1670248588,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "",
					["Enabled"] = true,
					["Revision"] = 9,
					["Options"] = {
					},
					["Author"] = "Battlearm-Golemagg",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Plater.PlayerIsTank",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Enter Combat",
				}, -- [37]
			},
			["aura_width"] = 16,
			["health_statusbar_bgcolor"] = {
				0.0431372, -- [1]
				0.0431372, -- [2]
				0.0431372, -- [3]
				1, -- [4]
			},
			["pet_width_scale"] = 0.9999999403953552,
			["indicator_rare"] = false,
			["quick_hide"] = true,
			["cast_statusbar_texture"] = "xVerminClean",
			["extra_icon_stack_outline"] = "OUTLINE",
			["resources"] = {
				["y_offset"] = 1,
				["y_offset_target"] = 9,
				["scale"] = 0.79999995231628,
			},
			["click_space"] = {
				120, -- [1]
			},
			["extra_icon_auras"] = {
				"Sunder Armor", -- [1]
				"Expose Armor", -- [2]
			},
			["aura2_grow_direction"] = 1,
			["ui_parent_cast_level"] = 10,
			["ui_parent_buff2_level"] = 10,
			["range_check_in_range_or_target_alpha_friendlies"] = 1,
			["use_color_lerp"] = true,
			["cast_statusbar_spark_color"] = {
				0.98823529411765, -- [1]
				[3] = 0.94117647058823,
			},
			["pet_height_scale"] = 0.9999999403953552,
			["aura_x_offset"] = 0,
			["first_run3"] = true,
			["ui_parent_scale_tune"] = 1.71999979019165,
			["ui_parent_buff_strata"] = "LOW",
			["healthbar_framelevel"] = 0,
			["ui_parent_buff_level"] = 10,
			["health_statusbar_bgtexture"] = "xVerminClean",
			["indicator_raidmark_anchor"] = {
				["x"] = -40,
			},
			["tank"] = {
				["colors"] = {
					["anothertank"] = {
						0.3725490196078432, -- [1]
						1, -- [2]
						0.9215686274509803, -- [3]
					},
					["aggro"] = {
						0.05490196078431373, -- [1]
						1, -- [2]
						0, -- [3]
					},
					["nocombat"] = {
						1, -- [1]
						0.8509803921568627, -- [2]
						0.5137254901960784, -- [3]
					},
					["noaggro"] = {
						nil, -- [1]
						0.09411764705882353, -- [2]
					},
					["pulling"] = {
						0.4784313725490196, -- [1]
						[3] = 0.3882352941176471,
					},
				},
			},
			["aura_tracker"] = {
				["buff_tracked"] = {
					["280001"] = true,
					[227931] = true,
					[233210] = true,
					[297133] = true,
					[163689] = true,
				},
				["debuff"] = {
					224991, -- [1]
					277950, -- [2]
				},
				["buff_banned"] = {
					["206150"] = true,
					["61574"] = true,
					["61573"] = true,
				},
			},
			["castbar_target_show"] = true,
			["cast_statusbar_color"] = {
				nil, -- [1]
				0.85882352941176, -- [2]
				nil, -- [3]
				0.96000000089407, -- [4]
			},
			["update_throttle"] = 0.09999999403953552,
			["not_affecting_combat_alpha"] = 1,
			["use_health_animation"] = true,
			["target_highlight_alpha"] = 1,
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["auto_toggle_stacking_enabled"] = true,
			["target_shady_alpha"] = 0.597934901714325,
			["target_highlight_height"] = 21,
			["version"] = 5,
			["hover_highlight_alpha"] = 0.09999999403953552,
			["indicator_raidmark_scale"] = 0.699999988079071,
			["extra_icon_auras_mine"] = {
				["224991"] = true,
				["Sunder Armor"] = false,
			},
			["castbar_icon_attach_to_side"] = "right",
			["cast_statusbar_spark_alpha"] = 0.699999988079071,
			["patch_version"] = 35,
			["no_spellname_length_limit"] = true,
			["range_check_in_range_or_target_alpha"] = 1,
			["aura_timer_text_size"] = 10,
			["extra_icon_show_timer"] = false,
			["castbar_framelevel"] = 0,
			["number_region_first_run"] = true,
			["buffs_on_aura2"] = true,
			["first_run2"] = true,
			["health_animation_time_dilatation"] = 2.869999885559082,
			["aura_grow_direction"] = 3,
			["cast_statusbar_fadeout_time"] = 0.4999999701976776,
			["ghost_auras"] = {
				["height"] = 10.23566341400147,
				["auras"] = {
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
				},
				["alpha"] = 0.8486258387565613,
				["width"] = 10.23566341400147,
			},
			["castbar_target_anchor"] = {
				["side"] = 11,
			},
			["script_auto_imported"] = {
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Effect After Cast [P]"] = 2,
				["Explosion Affix M+"] = 14,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 2,
				["Cast - Small Alert"] = 12,
				["Aura - Invalidate Unit"] = 1,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Tank Interrupt"] = 12,
				["Cast - Important Target [P]"] = 2,
				["Unit - Show Energy"] = 11,
				["Unit Power"] = 1,
				["Cast - Very Important"] = 15,
				["Cast - Alert + Timer [P]"] = 4,
				["Blink by Time Left"] = 1,
				["Cast - Shield Interrupt"] = 2,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Fixate"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Cast - Stop Casting"] = 4,
				["Color Change"] = 1,
				["Cast - On Going Cast [P]"] = 2,
				["Spiteful Affix"] = 3,
				["Auto Set Skull"] = 11,
				["Unit - Important"] = 11,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - Glowing [P]"] = 10,
				["Aura Border Color"] = 1,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Add - Explode on Die [P]"] = 1,
				["Cast - Quick Flash"] = 2,
				["Aura - Buff Alert"] = 15,
				["Cast - Circular Swipe"] = 4,
				["Fixate On You"] = 11,
			},
			["dps"] = {
				["colors"] = {
					["solo"] = {
						0.1490196078431373, -- [1]
						1, -- [2]
						0, -- [3]
					},
					["aggro"] = {
						nil, -- [1]
						0, -- [2]
					},
					["noaggro"] = {
						0.2, -- [1]
						1, -- [2]
						0, -- [3]
					},
					["pulling"] = {
						0.8901960784313725, -- [1]
						1, -- [2]
					},
				},
			},
			["range_check_alpha_friendlies"] = 1,
			["range_check_enabled"] = false,
			["extra_icon_height"] = 28,
			["auto_toggle_stacking"] = {
				["party"] = false,
				["arena"] = false,
				["raid"] = false,
			},
			["cast_statusbar_spark_width"] = 25,
		},
		["Default"] = {
			["use_ui_parent"] = true,
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
			},
			["script_auto_imported"] = {
				["Aura - Buff Alert"] = 15,
				["Cast - Effect After Cast [P]"] = 2,
				["Explosion Affix M+"] = 14,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 2,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Glowing [P]"] = 10,
				["Unit - Important"] = 11,
				["Cast - Very Important"] = 15,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Unit - Show Energy"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Cast - Important Target [P]"] = 2,
				["Cast - Quick Flash"] = 2,
				["Relics 9.2 M Dungeons"] = 2,
				["Add - Explode on Die [P]"] = 1,
				["Auto Set Skull"] = 11,
				["Cast - Shield Interrupt"] = 2,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - On Going Cast [P]"] = 2,
				["Countdown"] = 11,
				["Cast - Stop Casting"] = 4,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Fixate"] = 11,
				["Spiteful Affix"] = 3,
				["Cast - Circular Swipe"] = 4,
				["Cast - Tank Interrupt"] = 12,
				["Fixate On You"] = 11,
			},
			["expansion_triggerwipe"] = {
				[2] = true,
				[3] = true,
			},
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.CheckUnit(unitFrame, envTable)\n        if (envTable._NpcID == 185680) then\n            --haste\n            envTable.SetColor(unitFrame, \"haste\")\n            \n        elseif (envTable._NpcID == 185683) then\n            --movement speed\n            envTable.SetColor(unitFrame, \"ms\")\n            \n        elseif (envTable._NpcID == 185685) then\n            --cooldown reduction\n            envTable.SetColor(unitFrame, \"cdr\")\n            \n        end\n    end\n    \n    function envTable.SetColor(unitFrame, bonusType)\n        \n        local r, g, b, a, name\n        \n        if (bonusType == \"haste\") then\n            name = scriptTable.config.hasteName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.hasteColor)\n            \n        elseif (bonusType == \"ms\") then\n            name = scriptTable.config.msName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.msColor)\n            \n        elseif (bonusType == \"cdr\") then\n            name = scriptTable.config.cdrName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.cdrColor)\n        end\n        \n        Plater.SetNameplateColor(unitFrame, r, g, b, a)\n        if (scriptTable.config.canChangeSize) then\n            Plater.SetNameplateSize(unitFrame, scriptTable.config.width, scriptTable.config.height)\n        end\n        \n        --border\n        if (scriptTable.config.showBorder) then\n            r, g, b, a = r+0.2, g+0.2, b+0.2\n            Plater.SetBorderColor(unitFrame, r, g, b)\n        end\n        \n        --name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\nend\n\n\n--185685 cooldown reduction\n--185680 haste\n--185683 movement speed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\nend\n\n\n",
					["Time"] = 1647994498,
					["url"] = "",
					["Icon"] = 4263293,
					["Enabled"] = true,
					["Revision"] = 70,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Make more easy to distinguish relics within dungeons in 9.2 patch",
					["NpcNames"] = {
						"185685", -- [1]
						"185680", -- [2]
						"185683", -- [3]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Relics 9.2 M Dungeons",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "ColorSettingsAnchor",
							["Value"] = "Color Settings",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Adjust the nameplate color for each mob",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Haste Color",
							["Value"] = {
								0.4549019607843137, -- [1]
								0.2156862745098039, -- [2]
								0.5490196078431373, -- [3]
								1, -- [4]
							},
							["Key"] = "hasteColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "haste color",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "msColor",
							["Value"] = {
								0.3098039215686275, -- [1]
								0.5215686274509804, -- [2]
								0.2588235294117647, -- [3]
								1, -- [4]
							},
							["Name"] = "Moviment Speep Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "moviment speep color",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Cooldown Reduction Color",
							["Value"] = {
								0.1725490196078431, -- [1]
								0.2823529411764706, -- [2]
								0.5215686274509804, -- [3]
								1, -- [4]
							},
							["Key"] = "cdrColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "cooldown reduction color",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Name"] = "SizeSettingsAnchor",
							["Value"] = "Size Settings",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "canChangeSize",
							["Value"] = false,
							["Name"] = "Change Nameplate Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If this is checked, the nameplate size is changed to the values below",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "total width of the nameplate",
							["Min"] = 50,
							["Key"] = "width",
							["Value"] = 100,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 40,
							["Desc"] = "total height of the nameplate",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 12,
							["Name"] = "Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "height",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 9",
							["Value"] = 0,
							["Key"] = "option9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "BorderSettingsAnchor",
							["Value"] = "Border Settings",
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Paint Border",
							["Value"] = true,
							["Key"] = "showBorder",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, the color of the border will have the same color as the nameplate",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 12",
							["Value"] = 0,
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "NameSettings",
							["Value"] = "Name Settings",
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 3,
							["Name"] = "Haste Name",
							["Value"] = "HASTE",
							["Key"] = "hasteName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 3,
							["Key"] = "cdrName",
							["Value"] = "CDR",
							["Name"] = "Cooldown Reduction Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 3,
							["Name"] = "Movement Speed Name",
							["Value"] = "MS",
							["Key"] = "msName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\n    \nend",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["SpellIds"] = {
						337220, -- [1]
						337253, -- [2]
						337251, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Alert + Timer [P]",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						332329, -- [21]
						320103, -- [22]
						321406, -- [23]
						335817, -- [24]
						321061, -- [25]
						320141, -- [26]
						326171, -- [27]
						163966, -- [28]
						227966, -- [29]
						372107, -- [30]
						388923, -- [31]
						376934, -- [32]
						384899, -- [33]
						373960, -- [34]
						374724, -- [35]
						385551, -- [36]
						259732, -- [37]
						373424, -- [38]
						373084, -- [39]
						87618, -- [40]
						255041, -- [41]
						428926, -- [42]
						76634, -- [43]
						200050, -- [44]
						197546, -- [45]
						198079, -- [46]
						199193, -- [47]
						266181, -- [48]
						253544, -- [49]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.431372, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
						320170, -- [16]
						320171, -- [17]
						320462, -- [18]
						330712, -- [19]
						332170, -- [20]
						333875, -- [21]
						326836, -- [22]
						342135, -- [23]
						333861, -- [24]
						341969, -- [25]
						317963, -- [26]
						327481, -- [27]
						328331, -- [28]
						322614, -- [29]
						325701, -- [30]
						326438, -- [31]
						323538, -- [32]
						321764, -- [33]
						296523, -- [34]
						330755, -- [35]
						295929, -- [36]
						296019, -- [37]
						335685, -- [38]
						170751, -- [39]
						342207, -- [40]
						350554, -- [41]
						348513, -- [42]
						351779, -- [43]
						328180, -- [44]
						319898, -- [45]
						166335, -- [46]
						172810, -- [47]
						172943, -- [48]
						173148, -- [49]
						163376, -- [50]
						228011, -- [51]
						228277, -- [52]
						29928, -- [53]
						228559, -- [54]
						230050, -- [55]
						374743, -- [56]
						227615, -- [57]
						229716, -- [58]
						229083, -- [59]
						299525, -- [60]
						300514, -- [61]
						285388, -- [62]
						294324, -- [63]
						294180, -- [64]
						293827, -- [65]
						297128, -- [66]
						294015, -- [67]
						291865, -- [68]
						281420, -- [69]
						274383, -- [70]
						259092, -- [71]
						367521, -- [72]
						374544, -- [73]
						385039, -- [74]
						382474, -- [75]
						369823, -- [76]
						377500, -- [77]
						260879, -- [78]
						186269, -- [79]
						378818, -- [80]
						371875, -- [81]
						372225, -- [82]
						200658, -- [83]
						266036, -- [84]
						265407, -- [85]
						164965, -- [86]
						429176, -- [87]
						428526, -- [88]
						418200, -- [89]
						407124, -- [90]
						200630, -- [91]
						415437, -- [92]
						264050, -- [93]
						267824, -- [94]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["version"] = -1,
					["Name"] = "Cast - Small Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604607993,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 406,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"156212", -- [1]
						"168098", -- [2]
						179124, -- [3]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Main Target [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Timeleft to Blink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1606506781,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 109,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["NpcNames"] = {
						"164451", -- [1]
						"164463", -- [2]
						"164461", -- [3]
						"165946", -- [4]
						"164501", -- [5]
						"164218", -- [6]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Health Markers [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "indicatorAlpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Fill Alpha",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996775,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
					["Enabled"] = true,
					["Revision"] = 843,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						321828, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Tank Interrupt [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						354173, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Key"] = "targetNameSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Key"] = "targetFrameWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Height",
						}, -- [35]
					},
					["version"] = -1,
					["Name"] = "Cast - Important Target [P]",
					["NpcNames"] = {
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 828,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						321247, -- [19]
						334522, -- [20]
						320232, -- [21]
						319962, -- [22]
						325879, -- [23]
						324427, -- [24]
						322999, -- [25]
						325360, -- [26]
						322903, -- [27]
						324103, -- [28]
						333294, -- [29]
						333540, -- [30]
						319521, -- [31]
						326021, -- [32]
						326450, -- [33]
						322711, -- [34]
						329104, -- [35]
						295000, -- [36]
						242391, -- [37]
						320197, -- [38]
						329608, -- [39]
						161090, -- [40]
						156301, -- [41]
						166341, -- [42]
						163379, -- [43]
						166923, -- [44]
						172952, -- [45]
						164426, -- [46]
						163665, -- [47]
						227578, -- [48]
						228528, -- [49]
						227789, -- [50]
						227779, -- [51]
						229608, -- [52]
						227925, -- [53]
						300129, -- [54]
						296522, -- [55]
						294349, -- [56]
						293854, -- [57]
						297834, -- [58]
						299588, -- [59]
						302682, -- [60]
						291946, -- [61]
						295169, -- [62]
						285440, -- [63]
						291613, -- [64]
						283551, -- [65]
						372735, -- [66]
						373017, -- [67]
						392488, -- [68]
						257732, -- [69]
						256060, -- [70]
						257899, -- [71]
						384633, -- [72]
						374339, -- [73]
						395694, -- [74]
						391634, -- [75]
						372701, -- [76]
						369328, -- [77]
						265487, -- [78]
						413044, -- [79]
						183526, -- [80]
						88194, -- [81]
						87762, -- [82]
						413385, -- [83]
						411001, -- [84]
						378282, -- [85]
						384161, -- [86]
						259572, -- [87]
						255371, -- [88]
						427460, -- [89]
						429172, -- [90]
						426500, -- [91]
						413607, -- [92]
						412922, -- [93]
						417481, -- [94]
						201399, -- [95]
						411994, -- [96]
						415770, -- [97]
						260907, -- [98]
						260703, -- [99]
						260741, -- [100]
						265876, -- [101]
						263959, -- [102]
						266225, -- [103]
						253517, -- [104]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						227548, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Aura is Shield [P]",
					["NpcNames"] = {
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						338353, -- [28]
						334748, -- [29]
						334749, -- [30]
						320784, -- [31]
						341352, -- [32]
						341520, -- [33]
						341522, -- [34]
						336005, -- [35]
						339777, -- [36]
						331933, -- [37]
						326617, -- [38]
						324914, -- [39]
						324776, -- [40]
						326046, -- [41]
						340634, -- [42]
						319070, -- [43]
						328295, -- [44]
						317936, -- [45]
						327413, -- [46]
						319654, -- [47]
						323821, -- [48]
						320772, -- [49]
						324293, -- [50]
						330562, -- [51]
						330868, -- [52]
						341902, -- [53]
						342139, -- [54]
						342675, -- [55]
						323190, -- [56]
						332836, -- [57]
						327648, -- [58]
						328217, -- [59]
						322938, -- [60]
						340544, -- [61]
						325876, -- [62]
						325700, -- [63]
						323552, -- [64]
						332666, -- [65]
						332612, -- [66]
						332706, -- [67]
						340026, -- [68]
						294171, -- [69]
						292910, -- [70]
						294165, -- [71]
						338871, -- [72]
						330813, -- [73]
						335694, -- [74]
						327461, -- [75]
						329787, -- [76]
						304946, -- [77]
						15245, -- [78]
						276754, -- [79]
						304831, -- [80]
						277036, -- [81]
						320657, -- [82]
						294362, -- [83]
						270248, -- [84]
						292926, -- [85]
						350421, -- [86]
						352158, -- [87]
						349985, -- [88]
						329239, -- [89]
						328400, -- [90]
						164192, -- [91]
						176032, -- [92]
						166335, -- [93]
						166387, -- [94]
						162066, -- [95]
						163689, -- [96]
						227592, -- [97]
						228254, -- [98]
						227999, -- [99]
						227987, -- [100]
						232115, -- [101]
						29580, -- [102]
						227616, -- [103]
						241828, -- [104]
						228606, -- [105]
						227800, -- [106]
						228239, -- [107]
						229706, -- [108]
						294884, -- [109]
						301629, -- [110]
						284219, -- [111]
						301689, -- [112]
						300650, -- [113]
						297835, -- [114]
						300171, -- [115]
						300087, -- [116]
						300414, -- [117]
						300436, -- [118]
						301088, -- [119]
						293729, -- [120]
						291928, -- [121]
						384194, -- [122]
						392451, -- [123]
						392924, -- [124]
						397889, -- [125]
						209413, -- [126]
						207980, -- [127]
						257397, -- [128]
						257736, -- [129]
						382787, -- [130]
						374699, -- [131]
						377402, -- [132]
						369602, -- [133]
						369465, -- [134]
						369400, -- [135]
						381593, -- [136]
						265091, -- [137]
						265433, -- [138]
						382791, -- [139]
						376780, -- [140]
						225573, -- [141]
						278444, -- [142]
						164887, -- [143]
						168082, -- [144]
						76813, -- [145]
						227913, -- [146]
						265368, -- [147]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "M+ Spiteful",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604599472,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 355,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"164362", -- [1]
						"168882", -- [2]
						"168988", -- [3]
						"170234", -- [4]
						"165905", -- [5]
						"170452", -- [6]
						80875, -- [7]
						163746, -- [8]
						152033, -- [9]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "nameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Size Offset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Skull Texture",
							["Name"] = "Skull Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Skull Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Alpha",
							["Value"] = 0.2,
							["Key"] = "skullAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 0.4,
							["Key"] = "skullScale",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Scale",
						}, -- [13]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
						398151, -- [1]
						323149, -- [2]
						324392, -- [3]
						340544, -- [4]
						342189, -- [5]
						333227, -- [6]
						163689, -- [7]
						227931, -- [8]
						233210, -- [9]
						300207, -- [10]
						301629, -- [11]
						297133, -- [12]
						377738, -- [13]
						378149, -- [14]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
						150159, -- [7]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Show Energy [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Key"] = "fontSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Countdown",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						285388, -- [1]
						426662, -- [2]
						426663, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["version"] = -1,
					["Name"] = "Fixate by Unit Buff [P]",
					["NpcNames"] = {
					},
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						381525, -- [6]
						386660, -- [7]
						385578, -- [8]
						384699, -- [9]
						153501, -- [10]
						153686, -- [11]
						154442, -- [12]
						192018, -- [13]
						219488, -- [14]
						372087, -- [15]
						391726, -- [16]
						391723, -- [17]
						377383, -- [18]
						388976, -- [19]
						370764, -- [20]
						387067, -- [21]
						391118, -- [22]
						391136, -- [23]
						382233, -- [24]
						209027, -- [25]
						212031, -- [26]
						207261, -- [27]
						207979, -- [28]
						198888, -- [29]
						199805, -- [30]
						199050, -- [31]
						191508, -- [32]
						152792, -- [33]
						153395, -- [34]
						323489, -- [35]
						323496, -- [36]
						319941, -- [37]
						319592, -- [38]
						334266, -- [39]
						325258, -- [40]
						334913, -- [41]
						326221, -- [42]
						322936, -- [43]
						323236, -- [44]
						321834, -- [45]
						336752, -- [46]
						325418, -- [47]
						324667, -- [48]
						327233, -- [49]
						324368, -- [50]
						324205, -- [51]
						323943, -- [52]
						319713, -- [53]
						320596, -- [54]
						320729, -- [55]
						323608, -- [56]
						330614, -- [57]
						320063, -- [58]
						332708, -- [59]
						334023, -- [60]
						317231, -- [61]
						317943, -- [62]
						320966, -- [63]
						334053, -- [64]
						328458, -- [65]
						321968, -- [66]
						331718, -- [67]
						325793, -- [68]
						330453, -- [69]
						326997, -- [70]
						334051, -- [71]
						292903, -- [72]
						330843, -- [73]
						294173, -- [74]
						189200, -- [75]
						352833, -- [76]
						330403, -- [77]
						166675, -- [78]
						176127, -- [79]
						166380, -- [80]
						162058, -- [81]
						167516, -- [82]
						166923, -- [83]
						178299, -- [84]
						172982, -- [85]
						163390, -- [86]
						173384, -- [87]
						173514, -- [88]
						29513, -- [89]
						227672, -- [90]
						228603, -- [91]
						227339, -- [92]
						227493, -- [93]
						241774, -- [94]
						229611, -- [95]
						229151, -- [96]
						300188, -- [97]
						299475, -- [98]
						299502, -- [99]
						300777, -- [100]
						301681, -- [101]
						298946, -- [102]
						298940, -- [103]
						300424, -- [104]
						283422, -- [105]
						294290, -- [106]
						291973, -- [107]
						293986, -- [108]
						291878, -- [109]
						292264, -- [110]
						209495, -- [111]
						257426, -- [112]
						255952, -- [113]
						257870, -- [114]
						413147, -- [115]
						383107, -- [116]
						377559, -- [117]
						388060, -- [118]
						376170, -- [119]
						384524, -- [120]
						375351, -- [121]
						390111, -- [122]
						369791, -- [123]
						369573, -- [124]
						369563, -- [125]
						369335, -- [126]
						369061, -- [127]
						375727, -- [128]
						265016, -- [129]
						265019, -- [130]
						260793, -- [131]
						260292, -- [132]
						272457, -- [133]
						272609, -- [134]
						269843, -- [135]
						183465, -- [136]
						226296, -- [137]
						188169, -- [138]
						183088, -- [139]
						410873, -- [140]
						411012, -- [141]
						88308, -- [142]
						382708, -- [143]
						375251, -- [144]
						375439, -- [145]
						372311, -- [146]
						373742, -- [147]
						372201, -- [148]
						374533, -- [149]
						377204, -- [150]
						201226, -- [151]
						204667, -- [152]
						198379, -- [153]
						200768, -- [154]
						253239, -- [155]
						250258, -- [156]
						255567, -- [157]
						194956, -- [158]
						427510, -- [159]
						426645, -- [160]
						412505, -- [161]
						412129, -- [162]
						419351, -- [163]
						401482, -- [164]
						404916, -- [165]
						200345, -- [166]
						200261, -- [167]
						198641, -- [168]
						265372, -- [169]
						271174, -- [170]
						264694, -- [171]
						264923, -- [172]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Animation Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animSpeed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["NpcNames"] = {
					},
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["NpcNames"] = {
						"165560", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						360850, -- [10]
						212784, -- [11]
						199033, -- [12]
						199034, -- [13]
						200969, -- [14]
						394512, -- [15]
						397881, -- [16]
						396020, -- [17]
						374430, -- [18]
						373429, -- [19]
						384353, -- [20]
						265376, -- [21]
						193941, -- [22]
						411002, -- [23]
						169445, -- [24]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Auto Set Skull",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [24]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Effect After Cast [P]",
					["NpcNames"] = {
					},
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
						258672, -- [20]
						258777, -- [21]
						257756, -- [22]
						257784, -- [23]
						256405, -- [24]
						256589, -- [25]
						393793, -- [26]
						388046, -- [27]
						375079, -- [28]
						390290, -- [29]
						369811, -- [30]
						369703, -- [31]
						226287, -- [32]
						410999, -- [33]
						372561, -- [34]
						256882, -- [35]
						172578, -- [36]
						412063, -- [37]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Key"] = "rotationDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Rotation Duration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Key"] = "animStartDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Name"] = "Texture Start Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "textureScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Scale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "textureAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - Circle AoE [P]",
					["NpcNames"] = {
					},
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1683596223,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 146,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
						"186227", -- [3]
						"184020", -- [4]
						"91005", -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Health Markers [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Name"] = "Fill Alpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Key"] = "nameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "skullAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullScale",
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["version"] = -1,
					["Name"] = "Add - Important [P]",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
						190381, -- [14]
						92538, -- [15]
						192464, -- [16]
						131009, -- [17]
						127315, -- [18]
						133361, -- [19]
						136330, -- [20]
						214117, -- [21]
						212483, -- [22]
						101008, -- [23]
					},
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Add - Tag Number [P]",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
						385029, -- [4]
						374563, -- [5]
						377341, -- [6]
						369675, -- [7]
						369365, -- [8]
						369411, -- [9]
						278961, -- [10]
						202108, -- [11]
						88186, -- [12]
						255824, -- [13]
						252781, -- [14]
						250096, -- [15]
						200248, -- [16]
						197797, -- [17]
						264520, -- [18]
						418202, -- [19]
						201839, -- [20]
						412012, -- [21]
						411958, -- [22]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Quick Flash [P]",
					["NpcNames"] = {
					},
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["version"] = -1,
					["Name"] = "Add - Warning [P]",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
						129758, -- [5]
						190426, -- [6]
						186696, -- [7]
						101075, -- [8]
						100818, -- [9]
						98081, -- [10]
						52019, -- [11]
					},
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Nameplate Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "scale",
						}, -- [5]
					},
					["version"] = -1,
					["Name"] = "Add - Non Elite Trash [P]",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
				}, -- [33]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["NpcNames"] = {
					},
				}, -- [34]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
						200291, -- [5]
						268202, -- [6]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Stop Casting [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
				}, -- [35]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Explode on Die [P]",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
						189299, -- [6]
						131402, -- [7]
						135052, -- [8]
					},
				}, -- [36]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["Icon"] = 236209,
					["Enabled"] = true,
					["Revision"] = 18,
					["semver"] = "",
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura While Casting [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [37]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = true,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - On Going Cast [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots X Offset",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Dots Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Key"] = "speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Key"] = "minAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
				}, -- [38]
			},
			["aura2_x_offset"] = 0,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1547392935,
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Color Automation [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["HooksTemp"] = {
					},
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Time"] = 1541606242,
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Hide Neutral Units [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1990989,
					["HooksTemp"] = {
					},
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1596791840,
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["version"] = -1,
					["Name"] = "Reorder Nameplate [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 574574,
					["semver"] = "",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Time"] = 1554138845,
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["Name"] = "Don't Have Aura [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 136207,
					["HooksTemp"] = {
					},
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Time"] = 1548278227,
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Name"] = "Players Targeting a Target [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["HooksTemp"] = {
					},
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Tecno-Azralon",
					["Time"] = 1547409079,
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Name"] = "Extra Border [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["HooksTemp"] = {
					},
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Time"] = 1552354619,
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Current Target Color [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 878211,
					["HooksTemp"] = {
					},
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 348,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Name"] = "Icon Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Key"] = "iconPadding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Texture Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Key"] = "textureHeightMod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Texture Position",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Ditador-Azralon",
					["Time"] = 1597097268,
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["version"] = -1,
					["Name"] = "Cast Bar Icon Settings [P]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["semver"] = "",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Ahwa-Azralon",
					["Time"] = 1547406548,
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Execute Range [Plater]",
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135358,
					["HooksTemp"] = {
					},
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 363,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["HooksTemp"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1620377377,
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["version"] = -1,
					["Name"] = "Attacking Specific Unit [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["semver"] = "",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 284,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Time"] = 1621935143,
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["version"] = -1,
					["Name"] = "Combo Points [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 135426,
					["semver"] = "",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 356,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["LastHookEdited"] = "",
					["Author"] = "Ditador-Azralon",
					["Time"] = 1608663128,
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["version"] = -1,
					["Name"] = "Aura Reorder [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["semver"] = "",
				}, -- [12]
			},
			["aura_x_offset"] = 0,
			["ui_parent_scale_tune"] = 1.538461594891974,
			["ghost_auras"] = {
				["auras"] = {
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
				},
			},
			["number_region_first_run"] = true,
			["aura2_y_offset"] = 5,
			["login_counter"] = 13,
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1625793282,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1154,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["Name"] = "Cast - Alert + Timer [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["__TrashAt"] = 1664870338,
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
					["Time"] = 1660511537,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 341,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1668336010,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373429, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 7,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetFromScale(0.2, 1)\n        texture.scale:SetToScale(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\nend\n\n\n\n\n\n\n\n\n",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1605214963,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 607,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						323149, -- [1]
						324392, -- [2]
						340544, -- [3]
						342189, -- [4]
						333227, -- [5]
						163689, -- [6]
						227931, -- [7]
						233210, -- [8]
						300207, -- [9]
						301629, -- [10]
						297133, -- [11]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1604454032,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 351,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						337220, -- [1]
						337253, -- [2]
						337251, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
					["Time"] = 1604617977,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 513,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						332329, -- [1]
						320103, -- [2]
						321406, -- [3]
						335817, -- [4]
						321061, -- [5]
						320141, -- [6]
						326171, -- [7]
						163966, -- [8]
						227966, -- [9]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Ultra Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Health Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Health Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the health bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1604617585,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 595,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						320170, -- [1]
						320171, -- [2]
						320462, -- [3]
						330712, -- [4]
						332170, -- [5]
						333875, -- [6]
						326836, -- [7]
						342135, -- [8]
						333861, -- [9]
						341969, -- [10]
						317963, -- [11]
						327481, -- [12]
						328331, -- [13]
						322614, -- [14]
						325701, -- [15]
						326438, -- [16]
						323538, -- [17]
						321764, -- [18]
						296523, -- [19]
						330755, -- [20]
						295929, -- [21]
						296019, -- [22]
						335685, -- [23]
						170751, -- [24]
						342207, -- [25]
						350554, -- [26]
						348513, -- [27]
						351779, -- [28]
						328180, -- [29]
						319898, -- [30]
						166335, -- [31]
						172810, -- [32]
						172943, -- [33]
						173148, -- [34]
						163376, -- [35]
						228011, -- [36]
						228277, -- [37]
						29928, -- [38]
						228559, -- [39]
						230050, -- [40]
						374743, -- [41]
						227615, -- [42]
						229716, -- [43]
						229083, -- [44]
						299525, -- [45]
						300514, -- [46]
						285388, -- [47]
						294324, -- [48]
						294180, -- [49]
						293827, -- [50]
						297128, -- [51]
						294015, -- [52]
						291865, -- [53]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a small animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n\n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
					["Time"] = 1666836560,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 346,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1669710101,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						373429, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 7,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1625696653,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 836,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						354173, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Important Target [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Shows the target name in a separate box",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Key"] = "option27",
							["Value"] = 0,
							["Name"] = "Option 27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Key"] = "option28",
							["Value"] = "Target Options",
							["Name"] = "Option 28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 14,
							["Key"] = "targetNameSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [29]
						{
							["Type"] = 4,
							["Key"] = "colorByClass",
							["Value"] = true,
							["Name"] = "Use Class Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Key"] = "targetBgColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Key"] = "targetBgBorderColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Fraction"] = false,
							["Value"] = 90,
							["Key"] = "targetFrameWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Width",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Frame Height",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameHeight",
						}, -- [35]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1626467946,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1162,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Alert + Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1660259323,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 52,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						227548, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura is Shield [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996691,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1060,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						338353, -- [1]
						334748, -- [2]
						334749, -- [3]
						320784, -- [4]
						341352, -- [5]
						341520, -- [6]
						341522, -- [7]
						336005, -- [8]
						339777, -- [9]
						331933, -- [10]
						326617, -- [11]
						324914, -- [12]
						324776, -- [13]
						326046, -- [14]
						340634, -- [15]
						319070, -- [16]
						328295, -- [17]
						317936, -- [18]
						327413, -- [19]
						319654, -- [20]
						323821, -- [21]
						320772, -- [22]
						324293, -- [23]
						330562, -- [24]
						330868, -- [25]
						341902, -- [26]
						342139, -- [27]
						342675, -- [28]
						323190, -- [29]
						332836, -- [30]
						327648, -- [31]
						328217, -- [32]
						322938, -- [33]
						340544, -- [34]
						325876, -- [35]
						325700, -- [36]
						323552, -- [37]
						332666, -- [38]
						332612, -- [39]
						332706, -- [40]
						340026, -- [41]
						294171, -- [42]
						292910, -- [43]
						294165, -- [44]
						338871, -- [45]
						330813, -- [46]
						335694, -- [47]
						327461, -- [48]
						329787, -- [49]
						304946, -- [50]
						15245, -- [51]
						276754, -- [52]
						304831, -- [53]
						277036, -- [54]
						320657, -- [55]
						294362, -- [56]
						270248, -- [57]
						292926, -- [58]
						350421, -- [59]
						352158, -- [60]
						349985, -- [61]
						329239, -- [62]
						328400, -- [63]
						164192, -- [64]
						176032, -- [65]
						166335, -- [66]
						166387, -- [67]
						162066, -- [68]
						163689, -- [69]
						227592, -- [70]
						228254, -- [71]
						227999, -- [72]
						227987, -- [73]
						232115, -- [74]
						29580, -- [75]
						227616, -- [76]
						241828, -- [77]
						228606, -- [78]
						227800, -- [79]
						228239, -- [80]
						229706, -- [81]
						294884, -- [82]
						301629, -- [83]
						284219, -- [84]
						301689, -- [85]
						300650, -- [86]
						297835, -- [87]
						300171, -- [88]
						300087, -- [89]
						300414, -- [90]
						300436, -- [91]
						301088, -- [92]
						293729, -- [93]
						291928, -- [94]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
					["Time"] = 1604698647,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 462,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [16]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1660340256,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 25,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						285388, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate by Unit Buff [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
					["Time"] = 1604599443,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 460,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						323489, -- [1]
						323496, -- [2]
						319941, -- [3]
						319592, -- [4]
						334266, -- [5]
						325258, -- [6]
						334913, -- [7]
						326221, -- [8]
						322936, -- [9]
						323236, -- [10]
						321834, -- [11]
						336752, -- [12]
						325418, -- [13]
						324667, -- [14]
						327233, -- [15]
						324368, -- [16]
						324205, -- [17]
						323943, -- [18]
						319713, -- [19]
						320596, -- [20]
						320729, -- [21]
						323608, -- [22]
						330614, -- [23]
						320063, -- [24]
						332708, -- [25]
						334023, -- [26]
						317231, -- [27]
						317943, -- [28]
						320966, -- [29]
						334053, -- [30]
						328458, -- [31]
						321968, -- [32]
						331718, -- [33]
						325793, -- [34]
						330453, -- [35]
						326997, -- [36]
						334051, -- [37]
						292903, -- [38]
						330843, -- [39]
						294173, -- [40]
						189200, -- [41]
						352833, -- [42]
						330403, -- [43]
						166675, -- [44]
						176127, -- [45]
						166380, -- [46]
						162058, -- [47]
						167516, -- [48]
						166923, -- [49]
						178299, -- [50]
						172982, -- [51]
						163390, -- [52]
						173384, -- [53]
						173514, -- [54]
						29513, -- [55]
						227672, -- [56]
						228603, -- [57]
						227339, -- [58]
						227493, -- [59]
						241774, -- [60]
						229611, -- [61]
						229151, -- [62]
						300188, -- [63]
						299475, -- [64]
						299502, -- [65]
						300777, -- [66]
						301681, -- [67]
						298946, -- [68]
						298940, -- [69]
						300424, -- [70]
						283422, -- [71]
						294290, -- [72]
						291973, -- [73]
						293986, -- [74]
						291878, -- [75]
						292264, -- [76]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.275,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Name"] = "Animation Speed",
							["Value"] = 0.2,
							["Key"] = "animSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "desaturateArrow",
							["Value"] = false,
							["Name"] = "Use White Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996917,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 717,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1669710101,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						321247, -- [1]
						334522, -- [2]
						320232, -- [3]
						319962, -- [4]
						325879, -- [5]
						324427, -- [6]
						322999, -- [7]
						325360, -- [8]
						322903, -- [9]
						324103, -- [10]
						333294, -- [11]
						333540, -- [12]
						319521, -- [13]
						326021, -- [14]
						326450, -- [15]
						322711, -- [16]
						329104, -- [17]
						295000, -- [18]
						242391, -- [19]
						320197, -- [20]
						329608, -- [21]
						350687, -- [22]
						161090, -- [23]
						156301, -- [24]
						166341, -- [25]
						163379, -- [26]
						166923, -- [27]
						172952, -- [28]
						164426, -- [29]
						163665, -- [30]
						227578, -- [31]
						228528, -- [32]
						227789, -- [33]
						227779, -- [34]
						229608, -- [35]
						227925, -- [36]
						300129, -- [37]
						296522, -- [38]
						294349, -- [39]
						293854, -- [40]
						297834, -- [41]
						299588, -- [42]
						302682, -- [43]
						291946, -- [44]
						295169, -- [45]
						285440, -- [46]
						291613, -- [47]
						283551, -- [48]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n        end)\n    end\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340966,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 21,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Effect After Cast [P]",
					["NpcNames"] = {
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1669326597,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 143,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.15,
							["Key"] = "rotationDuration",
							["Value"] = 0.2,
							["Name"] = "Rotation Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Key"] = "animStartDuration",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Start Duration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Name"] = "Texture Start Alpha",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureStartAlpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Key"] = "textureScale",
							["Value"] = 1,
							["Name"] = "Texture Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 0.4,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - Circle AoE [P]",
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    Plater.SetNameplateColor(unitFrame, scriptTable.config.healthBarColor)\n    \nend\n\n\n",
					["Time"] = 1669326367,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 641,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetNameplateColor (unitFrame, scriptTable.config.healthBarColor)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    Plater.DenyColorChange(unitFrame, true)\nend",
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						332329, -- [15]
						320103, -- [16]
						321406, -- [17]
						335817, -- [18]
						321061, -- [19]
						320141, -- [20]
						326171, -- [21]
						163966, -- [22]
						227966, -- [23]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Name"] = "Health Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Health Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the health bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.168627455830574, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [17]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [19]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [20]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1669340396,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 515,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    Plater.DenyColorChange(unitFrame, true)\nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 3,
							["Name"] = "Nameplate Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Extra Texture",
							["Value"] = "Extra Texture",
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "showExtraTexture",
							["Value"] = false,
							["Name"] = "Show Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "skullColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Key"] = "skullAlpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullScale",
						}, -- [14]
						{
							["Type"] = 7,
							["Key"] = "npcColor",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"chocolate", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"chocolate", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"chocolate", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"firebrickdark", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"midnightblue", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"chocolate", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"darkmagenta", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"darkmagenta", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"cornflowerblue", -- [2]
								}, -- [10]
							},
							["Name"] = "Npc Color By NpcID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["version"] = -1,
					["Name"] = "Add - Important [P]",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
					},
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = true,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Add - Tag Number [P]",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
					["Time"] = 1669326364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 453,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						373429, -- [20]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 7,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669339757,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1207,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Alert + Timer [P]",
					["NpcNames"] = {
					},
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    \nend\n\n\n",
					["Time"] = 1669340472,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 122,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  adds",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    Plater.DenyColorChange(unitFrame, true)\n    \n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\nend\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "useFlash",
							["Value"] = true,
							["Name"] = "Flash Nameplate",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [2]
						{
							["Type"] = 7,
							["Key"] = "npcColor",
							["Value"] = {
								{
									"189893", -- [1]
									"firebrickdark", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"firebrickdark", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"saddlebrown", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"firebrickdark", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"firebrickdark", -- [2]
								}, -- [5]
							},
							["Name"] = "NpcID to Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Add - Warning [P]",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
					},
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669327145,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1183,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						338353, -- [25]
						334748, -- [26]
						334749, -- [27]
						320784, -- [28]
						341352, -- [29]
						341520, -- [30]
						341522, -- [31]
						336005, -- [32]
						339777, -- [33]
						331933, -- [34]
						326617, -- [35]
						324914, -- [36]
						324776, -- [37]
						326046, -- [38]
						340634, -- [39]
						319070, -- [40]
						328295, -- [41]
						317936, -- [42]
						327413, -- [43]
						319654, -- [44]
						323821, -- [45]
						320772, -- [46]
						324293, -- [47]
						330562, -- [48]
						330868, -- [49]
						341902, -- [50]
						342139, -- [51]
						342675, -- [52]
						323190, -- [53]
						332836, -- [54]
						327648, -- [55]
						328217, -- [56]
						322938, -- [57]
						340544, -- [58]
						325876, -- [59]
						325700, -- [60]
						323552, -- [61]
						332666, -- [62]
						332612, -- [63]
						332706, -- [64]
						340026, -- [65]
						294171, -- [66]
						292910, -- [67]
						294165, -- [68]
						338871, -- [69]
						330813, -- [70]
						335694, -- [71]
						327461, -- [72]
						329787, -- [73]
						304946, -- [74]
						15245, -- [75]
						276754, -- [76]
						304831, -- [77]
						277036, -- [78]
						320657, -- [79]
						294362, -- [80]
						270248, -- [81]
						292926, -- [82]
						350421, -- [83]
						352158, -- [84]
						349985, -- [85]
						329239, -- [86]
						328400, -- [87]
						164192, -- [88]
						176032, -- [89]
						166335, -- [90]
						166387, -- [91]
						162066, -- [92]
						163689, -- [93]
						227592, -- [94]
						228254, -- [95]
						227999, -- [96]
						227987, -- [97]
						232115, -- [98]
						29580, -- [99]
						227616, -- [100]
						241828, -- [101]
						228606, -- [102]
						227800, -- [103]
						228239, -- [104]
						229706, -- [105]
						294884, -- [106]
						301629, -- [107]
						284219, -- [108]
						301689, -- [109]
						300650, -- [110]
						297835, -- [111]
						300171, -- [112]
						300087, -- [113]
						300414, -- [114]
						300436, -- [115]
						301088, -- [116]
						293729, -- [117]
						291928, -- [118]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    Plater.SetNameplateColor(unitFrame, scriptTable.config.healthBarColor)\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n",
					["Time"] = 1669249865,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 509,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    Plater.DenyColorChange(unitFrame, true)\nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 1,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Key"] = "arrowWidth",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Name"] = "Arrow Height",
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [16]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Health Bar",
							["Name"] = "Health Bar Title",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Health Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [19]
					},
					["version"] = -1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["NpcNames"] = {
					},
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n        Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n      Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    \nend\n\n\n",
					["Time"] = 1669340403,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 36,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, true)\n    \n    \n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [1]
					},
					["version"] = -1,
					["Name"] = "Add - Non Elite Trash [P]",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
					["Time"] = 1669257042,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 416,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow:SetAlpha(scriptTable.config.arrowAlpha)\n    \nend",
					["Time"] = 1669339586,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 560,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    \n    envTable.movingArrow:SetAlpha(scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetHeight(self:GetHeight() - 2)\n    envTable.movingArrow:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						372107, -- [6]
						381525, -- [7]
						386660, -- [8]
						385578, -- [9]
						384699, -- [10]
						153501, -- [11]
						153686, -- [12]
						154442, -- [13]
						192018, -- [14]
						219488, -- [15]
						372087, -- [16]
						391726, -- [17]
						391723, -- [18]
						377383, -- [19]
						388976, -- [20]
						370764, -- [21]
						387067, -- [22]
						391118, -- [23]
						391136, -- [24]
						382233, -- [25]
						209027, -- [26]
						212031, -- [27]
						207261, -- [28]
						207979, -- [29]
						198888, -- [30]
						199805, -- [31]
						199050, -- [32]
						191508, -- [33]
						152792, -- [34]
						153395, -- [35]
						323489, -- [36]
						323496, -- [37]
						319941, -- [38]
						319592, -- [39]
						334266, -- [40]
						325258, -- [41]
						334913, -- [42]
						326221, -- [43]
						322936, -- [44]
						323236, -- [45]
						321834, -- [46]
						336752, -- [47]
						325418, -- [48]
						324667, -- [49]
						327233, -- [50]
						324368, -- [51]
						324205, -- [52]
						323943, -- [53]
						319713, -- [54]
						320596, -- [55]
						320729, -- [56]
						323608, -- [57]
						330614, -- [58]
						320063, -- [59]
						332708, -- [60]
						334023, -- [61]
						317231, -- [62]
						317943, -- [63]
						320966, -- [64]
						334053, -- [65]
						328458, -- [66]
						321968, -- [67]
						331718, -- [68]
						325793, -- [69]
						330453, -- [70]
						326997, -- [71]
						334051, -- [72]
						292903, -- [73]
						330843, -- [74]
						294173, -- [75]
						189200, -- [76]
						352833, -- [77]
						330403, -- [78]
						166675, -- [79]
						176127, -- [80]
						166380, -- [81]
						162058, -- [82]
						167516, -- [83]
						166923, -- [84]
						178299, -- [85]
						172982, -- [86]
						163390, -- [87]
						173384, -- [88]
						173514, -- [89]
						29513, -- [90]
						227672, -- [91]
						228603, -- [92]
						227339, -- [93]
						227493, -- [94]
						241774, -- [95]
						229611, -- [96]
						229151, -- [97]
						300188, -- [98]
						299475, -- [99]
						299502, -- [100]
						300777, -- [101]
						301681, -- [102]
						298946, -- [103]
						298940, -- [104]
						300424, -- [105]
						283422, -- [106]
						294290, -- [107]
						291973, -- [108]
						293986, -- [109]
						291878, -- [110]
						292264, -- [111]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.275,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "animSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Speed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["NpcNames"] = {
					},
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669326503,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 786,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1672403458,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						321247, -- [15]
						334522, -- [16]
						320232, -- [17]
						319962, -- [18]
						325879, -- [19]
						324427, -- [20]
						322999, -- [21]
						325360, -- [22]
						322903, -- [23]
						324103, -- [24]
						333294, -- [25]
						333540, -- [26]
						319521, -- [27]
						326021, -- [28]
						326450, -- [29]
						322711, -- [30]
						329104, -- [31]
						295000, -- [32]
						242391, -- [33]
						320197, -- [34]
						329608, -- [35]
						350687, -- [36]
						161090, -- [37]
						156301, -- [38]
						166341, -- [39]
						163379, -- [40]
						166923, -- [41]
						172952, -- [42]
						164426, -- [43]
						163665, -- [44]
						227578, -- [45]
						228528, -- [46]
						227789, -- [47]
						227779, -- [48]
						229608, -- [49]
						227925, -- [50]
						300129, -- [51]
						296522, -- [52]
						294349, -- [53]
						293854, -- [54]
						297834, -- [55]
						299588, -- [56]
						302682, -- [57]
						291946, -- [58]
						295169, -- [59]
						285440, -- [60]
						291613, -- [61]
						283551, -- [62]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Key"] = "shakeAmplitude",
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1671311518,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 511,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Name"] = "Cast Color by SpellID",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						374430, -- [20]
						373429, -- [21]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1674738075,
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1670202019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 468,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 5,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1674738075,
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670202618,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 798,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						321247, -- [18]
						334522, -- [19]
						320232, -- [20]
						319962, -- [21]
						325879, -- [22]
						324427, -- [23]
						322999, -- [24]
						325360, -- [25]
						322903, -- [26]
						324103, -- [27]
						333294, -- [28]
						333540, -- [29]
						319521, -- [30]
						326021, -- [31]
						326450, -- [32]
						322711, -- [33]
						329104, -- [34]
						295000, -- [35]
						242391, -- [36]
						320197, -- [37]
						329608, -- [38]
						350687, -- [39]
						161090, -- [40]
						156301, -- [41]
						166341, -- [42]
						163379, -- [43]
						166923, -- [44]
						172952, -- [45]
						164426, -- [46]
						163665, -- [47]
						227578, -- [48]
						228528, -- [49]
						227789, -- [50]
						227779, -- [51]
						229608, -- [52]
						227925, -- [53]
						300129, -- [54]
						296522, -- [55]
						294349, -- [56]
						293854, -- [57]
						297834, -- [58]
						299588, -- [59]
						302682, -- [60]
						291946, -- [61]
						295169, -- [62]
						285440, -- [63]
						291613, -- [64]
						283551, -- [65]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1674738075,
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1669340967,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 137,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Name"] = "Vertical Line Alpha",
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Add - Health Markers [P]",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
					},
					["__TrashAt"] = 1715848191,
				}, -- [33]
			},
			["patch_version"] = 35,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[227931] = true,
					[233210] = true,
					[209859] = true,
					[163689] = true,
					[297133] = true,
				},
			},
			["plate_config"] = {
				["global_health_width"] = 112,
				["global_health_height"] = 12,
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Hide Neutral Units"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Execute Range"] = 1,
				["Combo Points"] = 6,
				["Attacking Specific Unit"] = 2,
				["Target Color"] = 3,
				["Aura Reorder"] = 3,
				["Extra Border"] = 2,
			},
			["aura_y_offset"] = 5,
		},
	},
	["InterruptableSpells"] = {
		[34490] = true,
		[96231] = true,
		[32747] = true,
		[11972] = true,
		[76583] = true,
		[57994] = true,
		[1766] = true,
		[97547] = true,
		[59734] = true,
		[12555] = true,
		[15501] = true,
		[15610] = true,
		[47528] = true,
		[6552] = true,
		[91807] = true,
		[15615] = true,
		[88029] = true,
		[2139] = true,
		[93985] = true,
		[7074] = true,
		[31935] = true,
		[19647] = true,
		[10887] = true,
	},
	["captured_casts"] = {
		[59147] = {
			["npcID"] = 28580,
		},
		[59211] = {
			["npcID"] = 27638,
		},
		[80009] = {
			["source"] = "Palemane Poacher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2951,
		},
		[76171] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["npcID"] = 40825,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1046,
		},
		[8286] = {
			["npcID"] = 4424,
		},
		[14443] = {
			["npcID"] = 8920,
		},
		[43667] = {
			["encounterName"] = "Prince Keleseth",
			["npcID"] = 23953,
			["encounterID"] = 571,
		},
		[8398] = {
			["npcID"] = 4978,
		},
		[33624] = {
			["npcID"] = 18949,
		},
		[35927] = {
			["npcID"] = 19593,
		},
		[58700] = {
			["npcID"] = 31162,
		},
		[36247] = {
			["npcID"] = 22323,
		},
		[6352] = {
			["npcID"] = 3904,
		},
		[59020] = {
			["npcID"] = 29774,
		},
		[42708] = {
			["encounterName"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["encounterID"] = 575,
		},
		[42772] = {
			["npcID"] = 23956,
		},
		[59212] = {
			["npcID"] = 27635,
		},
		[61515] = {
			["npcID"] = 28580,
		},
		[35096] = {
			["npcID"] = 19633,
		},
		[8814] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowforge Geologist",
			["npcID"] = 7030,
		},
		[59852] = {
			["encounterName"] = "Sjonnir the Ironshaper",
			["npcID"] = 27979,
			["encounterID"] = 569,
		},
		[76813] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Spiritmender",
			["npcID"] = 41096,
		},
		[55886] = {
			["source"] = "Fiend of Earth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30043,
		},
		[32173] = {
			["npcID"] = 17961,
		},
		[37847] = {
			["npcID"] = 24979,
		},
		[11021] = {
			["npcID"] = 4324,
		},
		[40086] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragon Turtle",
			["npcID"] = 22885,
		},
		[52496] = {
			["npcID"] = 27734,
		},
		[58701] = {
			["npcID"] = 31164,
		},
		[48530] = {
			["npcID"] = 27162,
		},
		[60876] = {
			["npcID"] = 30597,
		},
		[50705] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Ley-Whelp",
			["npcID"] = 27636,
		},
		[52944] = {
			["source"] = "Jaloot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28121,
		},
		[49106] = {
			["npcID"] = 26696,
		},
		[32858] = {
			["npcID"] = 18493,
		},
		[76047] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[28783] = {
			["encounterName"] = "Anub'Rekhan",
			["npcID"] = 15956,
			["encounterID"] = 1107,
		},
		[47443] = {
			["npcID"] = 26607,
		},
		[43413] = {
			["npcID"] = 26827,
		},
		[80781] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rockwing Screecher",
			["npcID"] = 10409,
		},
		[6728] = {
			["npcID"] = 3280,
		},
		[20787] = {
			["npcID"] = 32263,
		},
		[20819] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scarlet Sorcerer",
			["npcID"] = 4294,
		},
		[15547] = {
			["npcID"] = 18501,
		},
		[54096] = {
			["encounterName"] = "Grand Widow Faerlina",
			["npcID"] = 16506,
			["encounterID"] = 1110,
		},
		[50066] = {
			["npcID"] = 27936,
		},
		[15611] = {
			["npcID"] = 8928,
		},
		[46164] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Kael'thas Sunstrider",
			["npcID"] = 24664,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1894,
		},
		[15659] = {
			["encounterName"] = "Darkweaver Syth",
			["encounterID"] = 1903,
			["npcID"] = 18472,
		},
		[58702] = {
			["npcID"] = 31165,
		},
		[50578] = {
			["npcID"] = 28066,
		},
		[13692] = {
			["npcID"] = 9163,
		},
		[29487] = {
			["source"] = "Night Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16460,
		},
		[21331] = {
			["source"] = "Deeprot Tangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 13142,
		},
		[61133] = {
			["npcID"] = 31277,
		},
		[29583] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
		},
		[34842] = {
			["npcID"] = 16975,
		},
		[39000] = {
			["npcID"] = 22095,
		},
		[13900] = {
			["npcID"] = 9017,
		},
		[59726] = {
			["encounterName"] = "Maiden of Grief",
			["npcID"] = 27975,
			["encounterID"] = 565,
		},
		[49555] = {
			["encounterName"] = "Trollgore",
			["source"] = "Trollgore",
			["npcID"] = 26630,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 369,
		},
		[59854] = {
			["encounterName"] = "Novos the Summoner",
			["encounterID"] = 371,
			["npcID"] = 26631,
		},
		[6984] = {
			["npcID"] = 4531,
		},
		[55888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fiend of Water",
			["npcID"] = 30044,
		},
		[60046] = {
			["source"] = "Lady Sylvanas Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31651,
		},
		[66966] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Talrendis Ancient",
			["npcID"] = 35198,
		},
		[11981] = {
			["npcID"] = 16950,
		},
		[21971] = {
			["npcID"] = 26607,
		},
		[56272] = {
			["encounterName"] = "Malygos",
			["source"] = "Malygos",
			["npcID"] = 28859,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 734,
		},
		[50323] = {
			["npcID"] = 25609,
		},
		[54481] = {
			["encounterName"] = "Erekem",
			["source"] = "Erekem",
			["encounterID"] = 2658,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29315,
		},
		[52498] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Necromancer",
			["npcID"] = 28200,
		},
		[60814] = {
			["npcID"] = 31718,
		},
		[38361] = {
			["npcID"] = 21102,
		},
		[54801] = {
			["encounterName"] = "Drakkari Colossus",
			["npcID"] = 29573,
			["encounterID"] = 385,
		},
		[66967] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Talrendis Ancient",
			["npcID"] = 35198,
		},
		[59215] = {
			["npcID"] = 28276,
		},
		[61326] = {
			["npcID"] = 26735,
		},
		[32860] = {
			["npcID"] = 18493,
		},
		[51475] = {
			["npcID"] = 27962,
		},
		[55633] = {
			["npcID"] = 29832,
		},
		[59855] = {
			["encounterName"] = "Novos the Summoner",
			["encounterID"] = 371,
			["npcID"] = 26631,
		},
		[43543] = {
			["npcID"] = 23919,
		},
		[20820] = {
			["npcID"] = 27246,
		},
		[66968] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Talrendis Ancient",
			["npcID"] = 35198,
		},
		[8399] = {
			["npcID"] = 4832,
		},
		[60239] = {
			["npcID"] = 32188,
		},
		[69527] = {
			["source"] = "Iceborn Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36891,
		},
		[54290] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Webspinner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29335,
		},
		[52307] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bittertide Hydra",
			["npcID"] = 28003,
		},
		[31407] = {
			["npcID"] = 17729,
		},
		[44503] = {
			["npcID"] = 24690,
		},
		[17174] = {
			["npcID"] = 23177,
		},
		[59024] = {
			["npcID"] = 27962,
		},
		[38618] = {
			["npcID"] = 21852,
		},
		[59152] = {
			["npcID"] = 30418,
		},
		[59280] = {
			["npcID"] = 28153,
		},
		[36827] = {
			["npcID"] = 20901,
		},
		[55314] = {
			["npcID"] = 16163,
		},
		[5401] = {
			["npcID"] = 3131,
		},
		[49365] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fordragon Battle Mage",
			["npcID"] = 27695,
		},
		[43416] = {
			["npcID"] = 23663,
		},
		[59856] = {
			["encounterName"] = "Novos the Summoner",
			["encounterID"] = 371,
			["npcID"] = 26631,
		},
		[33501] = {
			["npcID"] = 18848,
		},
		[26098] = {
			["npcID"] = 18450,
		},
		[88080] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Whipping Wind",
			["npcID"] = 47238,
		},
		[56402] = {
			["npcID"] = 29875,
		},
		[38107] = {
			["npcID"] = 19754,
		},
		[38171] = {
			["npcID"] = 22017,
		},
		[36252] = {
			["npcID"] = 20801,
		},
		[44504] = {
			["npcID"] = 24690,
		},
		[48854] = {
			["source"] = "Ymirjar Flesh Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26670,
		},
		[59281] = {
			["encounterName"] = "Cyanigosa",
			["npcID"] = 31134,
			["encounterID"] = 545,
		},
		[49110] = {
			["npcID"] = 26933,
		},
		[59473] = {
			["encounterName"] = "Erekem",
			["source"] = "Erekem",
			["encounterID"] = 2658,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29315,
		},
		[59537] = {
			["source"] = "Thrall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31650,
		},
		[28785] = {
			["encounterName"] = "Anub'Rekhan",
			["source"] = "Anub'Rekhan",
			["encounterID"] = 1107,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 15956,
		},
		[45336] = {
			["npcID"] = 24972,
		},
		[47447] = {
			["npcID"] = 26358,
		},
		[45592] = {
			["npcID"] = 25453,
		},
		[51797] = {
			["npcID"] = 26257,
		},
		[20821] = {
			["npcID"] = 740,
		},
		[33502] = {
			["encounterName"] = "Grandmaster Vorpil",
			["npcID"] = 18639,
		},
		[56147] = {
			["npcID"] = 16298,
		},
		[7800] = {
			["npcID"] = 416,
		},
		[50198] = {
			["npcID"] = 26728,
		},
		[80022] = {
			["source"] = "Captured Lashtail Hatchling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42870,
		},
		[70043] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["npcID"] = 36497,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 829,
		},
		[31472] = {
			["encounterName"] = "Chrono Lord Deja",
			["encounterID"] = 1920,
			["npcID"] = 17879,
		},
		[50774] = {
			["encounterName"] = "Drakos the Interrogator",
			["source"] = "Drakos the Interrogator",
			["npcID"] = 27654,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 528,
		},
		[7896] = {
			["npcID"] = 4288,
		},
		[31600] = {
			["npcID"] = 25227,
		},
		[59154] = {
			["npcID"] = 28920,
		},
		[31664] = {
			["npcID"] = 27691,
		},
		[49111] = {
			["npcID"] = 27608,
		},
		[7952] = {
			["npcID"] = 3638,
		},
		[39068] = {
			["npcID"] = 22375,
		},
		[80279] = {
			["source"] = "Stonecore Rift Conjurer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42691,
		},
		[13901] = {
			["npcID"] = 19671,
		},
		[7992] = {
			["npcID"] = 3277,
		},
		[8000] = {
			["npcID"] = 4038,
		},
		[23860] = {
			["encounterName"] = "High Priest Venoxis",
			["source"] = "High Priest Venoxis",
			["npcID"] = 14507,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 784,
		},
		[8040] = {
			["npcID"] = 3840,
		},
		[52118] = {
			["npcID"] = 27007,
		},
		[77721] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Burning Blade Apprentice",
			["npcID"] = 3198,
		},
		[88084] = {
			["encounterName"] = "Falric",
			["source"] = "Mirror Image",
			["npcID"] = 47243,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 841,
		},
		[48280] = {
			["npcID"] = 23654,
		},
		[50455] = {
			["npcID"] = 28006,
		},
		[52566] = {
			["npcID"] = 28834,
		},
		[50583] = {
			["npcID"] = 25719,
		},
		[52758] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zepik the Gorloc Hunter",
			["npcID"] = 28216,
		},
		[38557] = {
			["npcID"] = 23652,
		},
		[22421] = {
			["npcID"] = 13280,
		},
		[59347] = {
			["npcID"] = 29118,
		},
		[2054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Geopriest Gukk'rok",
			["npcID"] = 5863,
		},
		[51287] = {
			["npcID"] = 27289,
		},
		[59603] = {
			["npcID"] = 24071,
		},
		[43291] = {
			["npcID"] = 24216,
		},
		[20822] = {
			["npcID"] = 19881,
		},
		[6257] = {
			["npcID"] = 3375,
		},
		[56277] = {
			["npcID"] = 4949,
		},
		[56405] = {
			["encounterName"] = "Gothik the Harvester",
			["npcID"] = 16060,
			["encounterID"] = 1109,
		},
		[38110] = {
			["npcID"] = 19428,
		},
		[50456] = {
			["npcID"] = 28018,
		},
		[38238] = {
			["npcID"] = 19428,
		},
		[36255] = {
			["npcID"] = 16943,
		},
		[52695] = {
			["npcID"] = 27555,
		},
		[29458] = {
			["source"] = "Arch Mage Xintor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16977,
		},
		[23381] = {
			["npcID"] = 18118,
		},
		[31601] = {
			["source"] = "Crypt Crawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10412,
		},
		[38750] = {
			["npcID"] = 21500,
		},
		[59284] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blight Slinger",
			["npcID"] = 31526,
		},
		[49113] = {
			["npcID"] = 26925,
		},
		[49241] = {
			["npcID"] = 27542,
		},
		[35040] = {
			["npcID"] = 19995,
		},
		[25748] = {
			["npcID"] = 25453,
		},
		[8800] = {
			["npcID"] = 674,
		},
		[27891] = {
			["source"] = "Sludge Belcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16029,
		},
		[32017] = {
			["npcID"] = 17158,
		},
		[49753] = {
			["source"] = "Iron Rune Runemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23675,
		},
		[15037] = {
			["npcID"] = 9637,
		},
		[47962] = {
			["npcID"] = 25334,
		},
		[43996] = {
			["npcID"] = 24529,
		},
		[38047] = {
			["npcID"] = 27635,
		},
		[32369] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18430,
		},
		[54615] = {
			["npcID"] = 30864,
		},
		[15245] = {
			["npcID"] = 19354,
		},
		[57046] = {
			["npcID"] = 26737,
		},
		[36832] = {
			["npcID"] = 20902,
		},
		[9232] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Inquisitor Whitemane",
			["npcID"] = 3977,
		},
		[15453] = {
			["npcID"] = 16165,
		},
		[55703] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spitting Cobra",
			["npcID"] = 29774,
		},
		[20791] = {
			["npcID"] = 11324,
		},
		[20823] = {
			["npcID"] = 20159,
		},
		[33506] = {
			["encounterName"] = "Grandmaster Vorpil",
			["npcID"] = 18634,
		},
		[33634] = {
			["npcID"] = 19258,
		},
		[46044] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Imp",
			["npcID"] = 24815,
		},
		[44189] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["npcID"] = 24664,
			["encounterID"] = 1894,
		},
		[29427] = {
			["npcID"] = 17730,
		},
		[9616] = {
			["npcID"] = 18136,
		},
		[58966] = {
			["npcID"] = 29836,
		},
		[52889] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zepik the Gorloc Hunter",
			["npcID"] = 28216,
		},
		[17273] = {
			["npcID"] = 19543,
		},
		[61269] = {
			["npcID"] = 32534,
		},
		[31730] = {
			["npcID"] = 30404,
		},
		[61461] = {
			["npcID"] = 30286,
		},
		[37089] = {
			["npcID"] = 20138,
		},
		[59734] = {
			["encounterName"] = "Ingvar the Plunderer",
			["encounterID"] = 575,
			["npcID"] = 23954,
		},
		[55704] = {
			["npcID"] = 29981,
		},
		[23862] = {
			["encounterName"] = "High Priest Venoxis",
			["source"] = "High Priest Venoxis",
			["npcID"] = 14507,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 784,
		},
		[47772] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 520,
			["npcID"] = 26731,
		},
		[4962] = {
			["npcID"] = 30543,
		},
		[14030] = {
			["npcID"] = 14375,
		},
		[47964] = {
			["npcID"] = 416,
		},
		[35746] = {
			["npcID"] = 20780,
		},
		[24054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hakkari Witch Doctor",
			["npcID"] = 11831,
		},
		[7057] = {
			["npcID"] = 3875,
		},
		[32370] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18430,
		},
		[34083] = {
			["npcID"] = 16937,
		},
		[54617] = {
			["npcID"] = 29333,
		},
		[58967] = {
			["npcID"] = 29836,
		},
		[50843] = {
			["encounterName"] = "Krystallus",
			["source"] = "Krystallus",
			["npcID"] = 27977,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 563,
		},
		[81440] = {
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43391,
		},
		[59223] = {
			["encounterName"] = "Mage-Lord Urom",
			["encounterID"] = 532,
			["npcID"] = 27645,
		},
		[32722] = {
			["npcID"] = 16901,
		},
		[53210] = {
			["npcID"] = 29183,
		},
		[8209] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bingham Gadgetspring",
			["npcID"] = 36407,
		},
		[41056] = {
			["npcID"] = 30666,
		},
		[61590] = {
			["npcID"] = 30893,
		},
		[28884] = {
			["encounterName"] = "The Four Horsemen",
			["npcID"] = 16064,
			["encounterID"] = 1121,
		},
		[59863] = {
			["encounterName"] = "Tribunal of Ages",
			["npcID"] = 27984,
			["encounterID"] = 567,
		},
		[20792] = {
			["npcID"] = 3717,
		},
		[47773] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 520,
			["npcID"] = 26731,
		},
		[64213] = {
			["encounterName"] = "Emalon the Storm Watcher",
			["source"] = "Emalon the Storm Watcher",
			["npcID"] = 33993,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 774,
		},
		[7289] = {
			["npcID"] = 20115,
		},
		[46046] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Physician",
			["npcID"] = 24687,
		},
		[40097] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilskar Soothsayer",
			["npcID"] = 22876,
		},
		[54682] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gundrak Fire-eater",
			["npcID"] = 29237,
		},
		[38370] = {
			["npcID"] = 23434,
		},
		[48733] = {
			["npcID"] = 27430,
		},
		[93468] = {
			["encounterName"] = "Baron Ashbury",
			["source"] = "Baron Ashbury",
			["encounterID"] = 1069,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46962,
		},
		[17274] = {
			["npcID"] = 27107,
		},
		[59160] = {
			["npcID"] = 28582,
		},
		[17434] = {
			["npcID"] = 29109,
		},
		[61591] = {
			["npcID"] = 30893,
		},
		[53467] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["encounterID"] = 218,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29120,
		},
		[76325] = {
			["source"] = "Twilight Flame Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39708,
		},
		[35236] = {
			["npcID"] = 20324,
		},
		[7489] = {
			["npcID"] = 3927,
		},
		[47966] = {
			["npcID"] = 27061,
		},
		[36004] = {
			["npcID"] = 21058,
		},
		[44256] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24553,
		},
		[15230] = {
			["npcID"] = 13197,
		},
		[56858] = {
			["npcID"] = 30111,
		},
		[48734] = {
			["npcID"] = 27430,
		},
		[700] = {
			["npcID"] = 3671,
		},
		[61272] = {
			["npcID"] = 32534,
		},
		[61528] = {
			["npcID"] = 27972,
		},
		[55643] = {
			["npcID"] = 29920,
		},
		[22744] = {
			["source"] = "Eldreth Apparition",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11471,
		},
		[53788] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unbound Firestorm",
			["npcID"] = 28584,
		},
		[20793] = {
			["npcID"] = 3269,
		},
		[20825] = {
			["npcID"] = 1564,
		},
		[64215] = {
			["encounterName"] = "Emalon the Storm Watcher",
			["source"] = "Emalon the Storm Watcher",
			["npcID"] = 33993,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 774,
		},
		[7801] = {
			["npcID"] = 416,
		},
		[13583] = {
			["npcID"] = 7158,
		},
		[56539] = {
			["npcID"] = 30274,
		},
		[23224] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Baron Silverlaine",
			["encounterID"] = 1070,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3887,
		},
		[54684] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gundrak Bat Rider",
			["npcID"] = 29332,
		},
		[44577] = {
			["npcID"] = 24815,
		},
		[59034] = {
			["npcID"] = 27965,
		},
		[36645] = {
			["npcID"] = 19779,
		},
		[44961] = {
			["npcID"] = 24911,
		},
		[36837] = {
			["npcID"] = 20898,
		},
		[17435] = {
			["npcID"] = 29109,
		},
		[15982] = {
			["npcID"] = 18069,
		},
		[51742] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hemet Nesingwary",
			["npcID"] = 28451,
		},
		[51806] = {
			["npcID"] = 26828,
		},
		[64216] = {
			["encounterName"] = "Emalon the Storm Watcher",
			["source"] = "Emalon the Storm Watcher",
			["npcID"] = 33993,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 774,
		},
		[79400] = {
			["source"] = "Akasha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39964,
		},
		[93857] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Baron Silverlaine",
			["encounterID"] = 1070,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3887,
		},
		[17883] = {
			["npcID"] = 18312,
		},
		[48096] = {
			["encounterName"] = "Keristrasza",
			["encounterID"] = 526,
			["npcID"] = 26723,
		},
		[33895] = {
			["npcID"] = 18827,
		},
		[50335] = {
			["npcID"] = 29115,
		},
		[12096] = {
			["npcID"] = 5271,
		},
		[38245] = {
			["encounterName"] = "Talon King Ikiss",
			["encounterID"] = 1902,
			["npcID"] = 18473,
		},
		[8129] = {
			["npcID"] = 4799,
		},
		[60954] = {
			["npcID"] = 30484,
		},
		[42723] = {
			["encounterName"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["encounterID"] = 575,
		},
		[36646] = {
			["npcID"] = 21346,
		},
		[53086] = {
			["npcID"] = 27018,
		},
		[18395] = {
			["npcID"] = 7246,
		},
		[34791] = {
			["npcID"] = 18405,
		},
		[53278] = {
			["npcID"] = 29136,
		},
		[61594] = {
			["npcID"] = 30695,
		},
		[57628] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30623,
		},
		[30933] = {
			["npcID"] = 23946,
		},
		[3110] = {
			["npcID"] = 416,
		},
		[20794] = {
			["npcID"] = 3263,
		},
		[20826] = {
			["npcID"] = 5617,
		},
		[69167] = {
			["encounterName"] = "Overlrod Tyrannus",
			["source"] = "Scourgelord Tyrannus",
			["npcID"] = 36658,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 837,
		},
		[12528] = {
			["npcID"] = 7352,
		},
		[6274] = {
			["npcID"] = 3458,
		},
		[52383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lightning Construct",
			["npcID"] = 27972,
		},
		[70063] = {
			["encounterName"] = "Escaped from Arthas",
			["event"] = "SPELL_CAST_START",
			["source"] = "The Lich King",
			["npcID"] = 36954,
		},
		[38182] = {
			["npcID"] = 15241,
		},
		[76588] = {
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39990,
		},
		[52703] = {
			["npcID"] = 26407,
		},
		[34344] = {
			["npcID"] = 19527,
		},
		[58972] = {
			["npcID"] = 29822,
		},
		[48801] = {
			["npcID"] = 31003,
		},
		[61339] = {
			["encounterName"] = "Xevozz",
			["source"] = "Xevozz",
			["npcID"] = 29266,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2661,
		},
		[34984] = {
			["npcID"] = 21128,
		},
		[27831] = {
			["encounterName"] = "Gothik the Harvester",
			["npcID"] = 16126,
			["encounterID"] = 1109,
		},
		[76717] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defiled Earth Rager",
			["npcID"] = 40023,
		},
		[51808] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magister Keldonus",
			["npcID"] = 26828,
		},
		[33641] = {
			["npcID"] = 18966,
		},
		[6530] = {
			["npcID"] = 3461,
		},
		[8994] = {
			["npcID"] = 9499,
		},
		[44196] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["npcID"] = 24674,
			["encounterID"] = 1894,
		},
		[30358] = {
			["source"] = "Night Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16460,
		},
		[36200] = {
			["npcID"] = 16944,
		},
		[76590] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faceless Watcher",
			["npcID"] = 40936,
		},
		[34345] = {
			["npcID"] = 18870,
		},
		[58973] = {
			["npcID"] = 29820,
		},
		[55007] = {
			["npcID"] = 29696,
		},
		[30614] = {
			["npcID"] = 26434,
		},
		[59357] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["npcID"] = 28733,
			["encounterID"] = 216,
		},
		[57374] = {
			["encounterName"] = "The Four Horsemen",
			["npcID"] = 16065,
			["encounterID"] = 1121,
		},
		[32938] = {
			["npcID"] = 18460,
		},
		[53472] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["encounterID"] = 218,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29120,
		},
		[70194] = {
			["encounterName"] = "Escaped from Arthas",
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Sylvanas Windrunner",
			["npcID"] = 37554,
		},
		[51681] = {
			["npcID"] = 26605,
		},
		[15503] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Apoko",
			["npcID"] = 24553,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[59997] = {
			["encounterName"] = "Herald Volazj",
			["npcID"] = 30624,
			["encounterID"] = 215,
		},
		[20827] = {
			["npcID"] = 1653,
		},
		[22938] = {
			["npcID"] = 19671,
		},
		[33642] = {
			["npcID"] = 18969,
		},
		[6778] = {
			["npcID"] = 3673,
		},
		[52257] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frosthowl Screecher",
			["npcID"] = 28170,
		},
		[58462] = {
			["source"] = "Azure Spellbreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31009,
		},
		[31478] = {
			["npcID"] = 17918,
		},
		[34346] = {
			["npcID"] = 18870,
		},
		[68788] = {
			["encounterName"] = "Forgemaster Garfrost",
			["source"] = "Forgemaster Garfrost",
			["encounterID"] = 833,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36494,
		},
		[59038] = {
			["npcID"] = 27972,
		},
		[57055] = {
			["encounterName"] = "Amanitar",
			["npcID"] = 30258,
			["encounterID"] = 1989,
		},
		[69172] = {
			["encounterName"] = "Overlrod Tyrannus",
			["source"] = "Scourgelord Tyrannus",
			["npcID"] = 36658,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 837,
		},
		[17405] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Balnazzar",
			["npcID"] = 10813,
		},
		[36905] = {
			["npcID"] = 20905,
		},
		[53345] = {
			["npcID"] = 29102,
		},
		[17501] = {
			["source"] = "Crimson Cannon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11199,
		},
		[59742] = {
			["encounterName"] = "Krystallus",
			["npcID"] = 27977,
			["encounterID"] = 563,
		},
		[13952] = {
			["npcID"] = 4280,
		},
		[11921] = {
			["npcID"] = 19016,
		},
		[39592] = {
			["npcID"] = 22895,
		},
		[11969] = {
			["npcID"] = 4331,
		},
		[4971] = {
			["npcID"] = 4440,
		},
		[4979] = {
			["npcID"] = 3263,
		},
		[54241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ichoron",
			["npcID"] = 29313,
		},
		[54369] = {
			["encounterName"] = "Zuramat",
			["npcID"] = 29314,
			["encounterID"] = 2663,
		},
		[78129] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Dragonstalker",
			["npcID"] = 43992,
		},
		[50403] = {
			["npcID"] = 28005,
		},
		[7098] = {
			["npcID"] = 3276,
		},
		[44518] = {
			["npcID"] = 24686,
		},
		[34347] = {
			["npcID"] = 19527,
		},
		[30615] = {
			["npcID"] = 17478,
		},
		[7154] = {
			["source"] = "Eldreth Spectre",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11473,
		},
		[16367] = {
			["npcID"] = 27678,
		},
		[59359] = {
			["encounterName"] = "Anub'arak",
			["npcID"] = 29217,
			["encounterID"] = 218,
		},
		[36906] = {
			["npcID"] = 20905,
		},
		[61598] = {
			["npcID"] = 30340,
		},
		[8259] = {
			["npcID"] = 4438,
		},
		[3606] = {
			["npcID"] = 2523,
		},
		[59807] = {
			["encounterName"] = "Trollgore",
			["encounterID"] = 369,
			["npcID"] = 26630,
		},
		[41448] = {
			["npcID"] = 23441,
		},
		[33324] = {
			["npcID"] = 18500,
		},
		[59999] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30623,
		},
		[22907] = {
			["encounterName"] = "Swamplord Musel'ek",
			["encounterID"] = 1947,
			["npcID"] = 17826,
		},
		[16798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hearthsinger Forresten",
			["npcID"] = 10558,
		},
		[424340] = {
			["encounterName"] = "Krick",
			["source"] = "Greater Fire Elemental",
			["encounterID"] = 835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 15438,
		},
		[8435] = {
			["npcID"] = 4831,
		},
		[79922] = {
			["source"] = "Stonecore Flayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42808,
		},
		[31287] = {
			["npcID"] = 18079,
		},
		[52451] = {
			["encounterName"] = "Salram the Fleshcrafter",
			["encounterID"] = 294,
			["npcID"] = 26530,
		},
		[54626] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jin'Alai Medicine Man",
			["npcID"] = 28504,
		},
		[44519] = {
			["npcID"] = 24686,
		},
		[34348] = {
			["npcID"] = 18870,
		},
		[12737] = {
			["npcID"] = 23993,
		},
		[25530] = {
			["npcID"] = 15480,
		},
		[36843] = {
			["npcID"] = 18867,
		},
		[57377] = {
			["encounterName"] = "The Four Horsemen",
			["source"] = "Sir Zeliek",
			["encounterID"] = 1121,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16063,
		},
		[49317] = {
			["npcID"] = 27682,
		},
		[59616] = {
			["npcID"] = 23960,
		},
		[19645] = {
			["source"] = "Wailing Banshee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10464,
		},
		[57825] = {
			["npcID"] = 30286,
		},
		[33325] = {
			["npcID"] = 18702,
		},
		[939] = {
			["npcID"] = 4096,
		},
		[47782] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Plagued Dragonflayer Rune-Caster",
			["npcID"] = 24198,
		},
		[81459] = {
			["source"] = "Stonecore Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43537,
		},
		[28089] = {
			["encounterName"] = "Thaddius",
			["npcID"] = 15928,
			["encounterID"] = 1120,
		},
		[8995] = {
			["npcID"] = 6523,
		},
		[48294] = {
			["encounterName"] = "King Ymiron",
			["source"] = "King Ymiron",
			["npcID"] = 26861,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 583,
		},
		[50405] = {
			["npcID"] = 27270,
		},
		[42281] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pulsing Pumpkin",
			["npcID"] = 23694,
		},
		[82858] = {
			["encounterName"] = "High Priestess Azil",
			["source"] = "High Priestess Azil",
			["encounterID"] = 1057,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42333,
		},
		[50597] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Ice Giant",
			["npcID"] = 26291,
		},
		[15232] = {
			["npcID"] = 18094,
		},
		[11085] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Electrocutioner 6000",
			["npcID"] = 6235,
		},
		[37924] = {
			["encounterName"] = "Mage-Lord Urom",
			["source"] = "Phantasmal Water",
			["npcID"] = 27653,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 532,
		},
		[52814] = {
			["npcID"] = 26578,
		},
		[42729] = {
			["encounterName"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["encounterID"] = 575,
		},
		[59169] = {
			["npcID"] = 30418,
		},
		[959] = {
			["npcID"] = 4427,
		},
		[81442] = {
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43391,
		},
		[69562] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soulguard Animator",
			["npcID"] = 36516,
		},
		[58827] = {
			["encounterName"] = "Salram the Fleshcrafter",
			["encounterID"] = 294,
			["npcID"] = 26530,
		},
		[53348] = {
			["npcID"] = 29102,
		},
		[86830] = {
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43391,
		},
		[59617] = {
			["npcID"] = 23960,
		},
		[81039] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irradiated Slime",
			["npcID"] = 6218,
		},
		[59745] = {
			["encounterName"] = "Zuramat",
			["npcID"] = 29314,
			["encounterID"] = 2663,
		},
		[55715] = {
			["npcID"] = 29980,
		},
		[86574] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fungal Behemoth",
			["npcID"] = 42475,
		},
		[45608] = {
			["npcID"] = 25339,
		},
		[70425] = {
			["encounterName"] = "Overlrod Tyrannus",
			["source"] = "Freed Horde Slave",
			["npcID"] = 37578,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 837,
		},
		[51877] = {
			["npcID"] = 26577,
		},
		[69051] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["npcID"] = 36502,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 831,
		},
		[16799] = {
			["source"] = "Skul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10393,
		},
		[42131] = {
			["npcID"] = 23883,
		},
		[7802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kuppep",
			["npcID"] = 416,
		},
		[50255] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Skadi the Ruthless",
			["encounterID"] = 581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26693,
		},
		[76572] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Twilight Sadist",
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39980,
		},
		[44137] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24556,
		},
		[75543] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39665,
		},
		[50832] = {
			["npcID"] = 27235,
		},
		[75813] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Tempest Witch",
			["npcID"] = 40634,
		},
		[81576] = {
			["source"] = "Stonecore Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43537,
		},
		[60833] = {
			["npcID"] = 30414,
		},
		[58850] = {
			["encounterName"] = "Mal'ganis",
			["encounterID"] = 296,
			["npcID"] = 26533,
		},
		[78903] = {
			["encounterName"] = "Ozruk",
			["source"] = "Ozruk",
			["encounterID"] = 1058,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42188,
		},
		[76820] = {
			["source"] = "Naz'jar Spiritmender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41139,
		},
		[13745] = {
			["npcID"] = 8913,
		},
		[46824] = {
			["npcID"] = 26206,
		},
		[75823] = {
			["encounterName"] = "Corla, Herald of Twilight",
			["source"] = "Corla, Herald of Twilight",
			["encounterID"] = 1038,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39679,
		},
		[53093] = {
			["npcID"] = 26935,
		},
		[11762] = {
			["npcID"] = 416,
		},
		[34798] = {
			["npcID"] = 18419,
		},
		[40102] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqueous Spawn",
			["npcID"] = 22883,
		},
		[89105] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lurking Tempest",
			["npcID"] = 45704,
		},
		[17503] = {
			["source"] = "Maleki the Pallid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10438,
		},
		[80158] = {
			["source"] = "Stonecore Warbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42696,
		},
		[51494] = {
			["npcID"] = 27969,
		},
		[96134] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stone Drake",
			["npcID"] = 42522,
		},
		[51622] = {
			["npcID"] = 26771,
		},
		[16000] = {
			["source"] = "Celebrian Dryad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11793,
		},
		[11922] = {
			["npcID"] = 5481,
		},
		[33111] = {
			["npcID"] = 17371,
		},
		[68658] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Netgun Gnome",
			["npcID"] = 36385,
		},
		[11970] = {
			["npcID"] = 11520,
		},
		[11986] = {
			["npcID"] = 18077,
		},
		[7967] = {
			["npcID"] = 3654,
		},
		[33711] = {
			["encounterName"] = "Murmur",
			["encounterID"] = 1910,
			["npcID"] = 18708,
		},
		[32248] = {
			["npcID"] = 18396,
		},
		[54309] = {
			["source"] = "Anub'ar Prime Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29128,
		},
		[11820] = {
			["npcID"] = 26343,
		},
		[44202] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Phoenix",
			["encounterID"] = 1894,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24674,
		},
		[12098] = {
			["npcID"] = 5280,
		},
		[86581] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jadecrest Basilisk",
			["npcID"] = 43981,
		},
		[59466] = {
			["encounterName"] = "Lavanthor",
			["source"] = "Lavanthor",
			["encounterID"] = 2662,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29312,
		},
		[76719] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Incendiary Spark",
			["npcID"] = 40021,
		},
		[48616] = {
			["npcID"] = 27356,
		},
		[52774] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormforged Mender",
			["npcID"] = 28582,
		},
		[76307] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["npcID"] = 40788,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1046,
		},
		[61090] = {
			["npcID"] = 31159,
		},
		[2941] = {
			["source"] = "Stonevault Flameweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7321,
		},
		[55077] = {
			["npcID"] = 29735,
		},
		[12258] = {
			["npcID"] = 7342,
		},
		[18399] = {
			["npcID"] = 17395,
		},
		[55269] = {
			["npcID"] = 29747,
		},
		[2055] = {
			["npcID"] = 4809,
		},
		[59210] = {
			["npcID"] = 27636,
		},
		[15979] = {
			["source"] = "Arcane Aberration",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11480,
		},
		[31281] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Living Blood",
			["npcID"] = 43123,
		},
		[61730] = {
			["npcID"] = 26705,
		},
		[8292] = {
			["npcID"] = 4421,
		},
		[30937] = {
			["npcID"] = 17653,
		},
		[76584] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Zealot",
			["npcID"] = 39990,
		},
		[49704] = {
			["npcID"] = 26625,
		},
		[60003] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30624,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 215,
		},
		[51879] = {
			["npcID"] = 26467,
		},
		[10435] = {
			["npcID"] = 7400,
		},
		[69528] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ymirjar Deathbringer",
			["npcID"] = 36892,
		},
		[17171] = {
			["source"] = "Mossflayer Shadowhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8561,
		},
		[76686] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Obsidian Borer",
			["npcID"] = 40019,
		},
		[54113] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overlord Drakuru",
			["npcID"] = 28998,
		},
		[88082] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Mirror Image",
			["npcID"] = 47244,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 829,
		},
		[52493] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Silthik",
			["encounterID"] = 216,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28731,
		},
		[58532] = {
			["source"] = "Portal Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30695,
		},
		[44267] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24558,
		},
		[22876] = {
			["source"] = "Wandering Eye of Kilrogg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14386,
		},
		[22909] = {
			["source"] = "Eye of Immol'thar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14396,
		},
		[79379] = {
			["source"] = "Gilblin Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41746,
		},
		[42476] = {
			["npcID"] = 23739,
		},
		[38446] = {
			["npcID"] = 22081,
		},
		[58980] = {
			["npcID"] = 29826,
		},
		[75539] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39665,
		},
		[48873] = {
			["encounterName"] = "King Dred",
			["encounterID"] = 373,
			["npcID"] = 27483,
		},
		[46042] = {
			["source"] = "Sunblade Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24686,
		},
		[83366] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stranglethorn Raptor",
			["npcID"] = 685,
		},
		[51112] = {
			["encounterName"] = "Mage-Lord Urom",
			["encounterID"] = 532,
			["npcID"] = 27655,
		},
		[1090] = {
			["npcID"] = 3678,
		},
		[51240] = {
			["npcID"] = 26830,
		},
		[1094] = {
			["npcID"] = 4036,
		},
		[32749] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scarlet Wizard",
			["npcID"] = 4300,
		},
		[31865] = {
			["npcID"] = 17399,
		},
		[51496] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Rune Shaper",
			["npcID"] = 27965,
		},
		[76560] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gilgoblin Aquamage",
			["npcID"] = 40943,
		},
		[57765] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30622,
		},
		[75683] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[20817] = {
			["source"] = "Grimkor's Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 32163,
		},
		[10915] = {
			["npcID"] = 8127,
		},
		[46036] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Magister",
			["npcID"] = 24685,
		},
		[56038] = {
			["source"] = "Vargul Deathwaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29449,
		},
		[17141] = {
			["source"] = "Risen Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10423,
		},
		[50025] = {
			["npcID"] = 27881,
		},
		[50089] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 371,
		},
		[81181] = {
			["source"] = "Windfury Wind Witch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2963,
		},
		[54311] = {
			["npcID"] = 15979,
		},
		[8996] = {
			["npcID"] = 6523,
		},
		[33969] = {
			["npcID"] = 18981,
		},
		[46315] = {
			["npcID"] = 25743,
		},
		[36144] = {
			["encounterName"] = "Dalliah the Doomsayer",
			["encounterID"] = 1913,
			["npcID"] = 20885,
		},
		[52755] = {
			["encounterName"] = "Krystallus",
			["source"] = "Hardened Steel Skycaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28580,
		},
		[64140] = {
			["source"] = "Monstrous Plaguebat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8602,
		},
		[69012] = {
			["encounterName"] = "Krick",
			["source"] = "Krick",
			["encounterID"] = 835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36477,
		},
		[27634] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24555,
		},
		[22334] = {
			["npcID"] = 27410,
		},
		[42669] = {
			["encounterName"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["encounterID"] = 575,
		},
		[87481] = {
			["source"] = "Flame Ascendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40709,
		},
		[50985] = {
			["source"] = "The Etymidian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28222,
		},
		[53096] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quetz'lun's Spirit",
			["npcID"] = 28030,
		},
		[59301] = {
			["encounterName"] = "King Ymiron",
			["source"] = "King Ymiron",
			["encounterID"] = 583,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26861,
		},
		[59365] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["npcID"] = 28729,
			["encounterID"] = 216,
		},
		[7106] = {
			["npcID"] = 3854,
		},
		[51432] = {
			["source"] = "Ymirjar Necromancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28368,
		},
		[3477] = {
			["source"] = "Nightlash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 1983,
		},
		[35057] = {
			["npcID"] = 19716,
		},
		[59685] = {
			["npcID"] = 23956,
		},
		[72222] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tortured Rifleman",
			["npcID"] = 38176,
		},
		[57766] = {
			["encounterName"] = "Herald Volazj",
			["encounterID"] = 215,
			["npcID"] = 30621,
		},
		[20735] = {
			["source"] = "Illyanna Ravenoak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11488,
		},
		[37488] = {
			["npcID"] = 16951,
		},
		[47723] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 520,
			["npcID"] = 26928,
		},
		[11443] = {
			["npcID"] = 7337,
		},
		[69780] = {
			["encounterName"] = "Escaped from Arthas",
			["event"] = "SPELL_CAST_START",
			["source"] = "The Lich King",
			["npcID"] = 36954,
		},
		[11836] = {
			["npcID"] = 7273,
		},
		[15585] = {
			["npcID"] = 17730,
		},
		[59220] = {
			["encounterName"] = "Mage-Lord Urom",
			["source"] = "Phantasmal Cloudscraper",
			["npcID"] = 27645,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 532,
		},
		[79884] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Windfury Sorceress",
			["npcID"] = 2964,
		},
		[60453] = {
			["npcID"] = 29542,
		},
		[44141] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
		},
		[86331] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Grand Vizier Ertan",
			["npcID"] = 43878,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1043,
		},
		[70306] = {
			["source"] = "Frostblade",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 37670,
		},
		[52521] = {
			["npcID"] = 28658,
		},
		[50538] = {
			["npcID"] = 25687,
		},
		[15242] = {
			["npcID"] = 17477,
		},
		[52624] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unbound Firestorm",
			["npcID"] = 28584,
		},
		[52904] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Titanium Thunderer",
			["npcID"] = 28965,
		},
		[72898] = {
			["npcID"] = 37994,
		},
		[52905] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormfury Revenant",
			["npcID"] = 28826,
		},
		[52969] = {
			["source"] = "Jaloot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28121,
		},
		[34019] = {
			["npcID"] = 19422,
		},
		[85692] = {
			["encounterName"] = "Corla, Herald of Twilight",
			["source"] = "Doomguard",
			["encounterID"] = 1038,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11859,
		},
		[11763] = {
			["npcID"] = 416,
		},
		[59366] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["npcID"] = 28731,
			["encounterID"] = 216,
		},
		[45101] = {
			["npcID"] = 24979,
		},
		[72208] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tortured Rifleman",
			["npcID"] = 38176,
		},
		[12492] = {
			["npcID"] = 5710,
		},
		[35058] = {
			["npcID"] = 19716,
		},
		[52960] = {
			["encounterName"] = "Loken",
			["source"] = "Loken",
			["npcID"] = 28923,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 561,
		},
		[69028] = {
			["encounterName"] = "Krick",
			["source"] = "Krick",
			["encounterID"] = 835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36477,
		},
		[93863] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Rethilgore",
			["encounterID"] = 1070,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 50834,
		},
		[37361] = {
			["npcID"] = 11838,
		},
		[68899] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["npcID"] = 36502,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 831,
		},
		[16033] = {
			["npcID"] = 18069,
		},
		[7761] = {
			["npcID"] = 1866,
		},
		[50721] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snowflake",
			["npcID"] = 28153,
		},
		[14034] = {
			["npcID"] = 17771,
		},
		[29562] = {
			["encounterName"] = "Moroes",
			["source"] = "Lady Keira Berrybuck",
			["encounterID"] = 653,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17007,
		},
		[54249] = {
			["encounterName"] = "Lavanthor",
			["source"] = "Lavanthor",
			["encounterID"] = 2662,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29312,
		},
		[69573] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wrathbone Coldwraith",
			["npcID"] = 36842,
		},
		[54313] = {
			["npcID"] = 15979,
		},
		[36631] = {
			["npcID"] = 24770,
		},
		[58535] = {
			["source"] = "Portal Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30893,
		},
		[60646] = {
			["npcID"] = 31145,
		},
		[58663] = {
			["encounterName"] = "Archavon the Stone Watcher",
			["source"] = "Archavon the Stone Watcher",
			["npcID"] = 31125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 772,
		},
		[34163] = {
			["npcID"] = 17871,
		},
		[69570] = {
			["encounterName"] = "Overlrod Tyrannus",
			["source"] = "Freed Horde Slave",
			["npcID"] = 37579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 837,
		},
		[60902] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Archavon Warder",
			["npcID"] = 32353,
		},
		[75330] = {
			["encounterName"] = "Overlrod Tyrannus",
			["source"] = "Wrathbone Sorcerer",
			["npcID"] = 37728,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 837,
		},
		[7487] = {
			["npcID"] = 3927,
		},
		[57547] = {
			["npcID"] = 31095,
		},
		[36594] = {
			["npcID"] = 20673,
		},
		[55081] = {
			["encounterName"] = "Slad'ran",
			["source"] = "Slad'ran",
			["npcID"] = 29304,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 383,
		},
		[34661] = {
			["encounterName"] = "Thorngrin the Tender",
			["source"] = "Thorngrin the Tender",
			["npcID"] = 17978,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1928,
		},
		[50785] = {
			["encounterName"] = "Varos Cloudstrider",
			["source"] = "Varos Cloudstrider",
			["npcID"] = 27447,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 530,
		},
		[69574] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wrathbone Coldwraith",
			["npcID"] = 36842,
		},
		[51243] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Greater Ley-Whelp",
			["npcID"] = 28276,
		},
		[34931] = {
			["npcID"] = 18331,
		},
		[59993] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30621,
		},
		[16336] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spectral Citizen",
			["npcID"] = 10384,
		},
		[24024] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gurubashi Bat Rider",
			["npcID"] = 14750,
		},
		[16866] = {
			["source"] = "Venom Belcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10417,
		},
		[50348] = {
			["npcID"] = 27996,
		},
		[5188] = {
			["npcID"] = 3669,
		},
		[49708] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkweb Recluse",
			["npcID"] = 26625,
		},
		[20800] = {
			["npcID"] = 11518,
		},
		[83264] = {
			["source"] = "Dark Ranger Velonara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 44637,
		},
		[10436] = {
			["npcID"] = 7402,
		},
		[10452] = {
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4853,
		},
		[47981] = {
			["encounterName"] = "Ormorok the Tree-Shaper",
			["npcID"] = 26794,
			["encounterID"] = 524,
		},
		[52139] = {
			["npcID"] = 26836,
		},
		[23039] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Searing Ghoul",
			["npcID"] = 1795,
		},
		[79938] = {
			["source"] = "Death's Step Putrifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45443,
		},
		[56425] = {
			["npcID"] = 30270,
		},
		[76100] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[44271] = {
			["npcID"] = 24555,
		},
		[50476] = {
			["npcID"] = 27655,
		},
		[68785] = {
			["encounterName"] = "Forgemaster Garfrost",
			["source"] = "Forgemaster Garfrost",
			["encounterID"] = 833,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36494,
		},
		[36275] = {
			["npcID"] = 21104,
		},
		[12675] = {
			["npcID"] = 9041,
		},
		[29582] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
		},
		[56937] = {
			["encounterName"] = "Grand Magus Telestra",
			["npcID"] = 26930,
			["encounterID"] = 520,
		},
		[61095] = {
			["npcID"] = 32503,
		},
		[87487] = {
			["source"] = "Flame Ascendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40709,
		},
		[36627] = {
			["npcID"] = 20775,
		},
		[59368] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["npcID"] = 28684,
			["encounterID"] = 216,
		},
		[31707] = {
			["npcID"] = 510,
		},
		[31739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "7th Legion Cleric",
			["npcID"] = 26780,
		},
		[36915] = {
			["npcID"] = 20908,
		},
		[56969] = {
			["npcID"] = 26735,
		},
		[80195] = {
			["source"] = "Stonecore Bruiser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42692,
		},
		[29563] = {
			["encounterName"] = "Moroes",
			["source"] = "Lady Catriona Von'Indi",
			["npcID"] = 19872,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 653,
		},
		[35124] = {
			["npcID"] = 18420,
		},
		[57801] = {
			["npcID"] = 29503,
		},
		[7483] = {
			["npcID"] = 4279,
		},
		[80835] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Crystal-walker",
			["npcID"] = 43373,
		},
		[29304] = {
			["source"] = "Shadowbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16176,
		},
		[64102] = {
			["npcID"] = 23778,
		},
		[60072] = {
			["encounterName"] = "Malygos",
			["source"] = "Malygos",
			["npcID"] = 28859,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 734,
		},
		[93629] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["encounterID"] = 1072,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46964,
		},
		[58153] = {
			["npcID"] = 30202,
		},
		[36705] = {
			["encounterName"] = "Warp Splinter",
			["npcID"] = 17977,
			["encounterID"] = 1929,
		},
		[46191] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[69577] = {
			["source"] = "Deathwhisper Necrolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36788,
		},
		[37939] = {
			["npcID"] = 21102,
		},
		[8997] = {
			["npcID"] = 6523,
		},
		[58537] = {
			["npcID"] = 30893,
		},
		[31705] = {
			["npcID"] = 18584,
		},
		[52524] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Narjil",
			["encounterID"] = 216,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28729,
		},
		[47777] = {
			["npcID"] = 26802,
		},
		[58793] = {
			["encounterName"] = "Sartharion",
			["source"] = "Tenebron",
			["npcID"] = 30452,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 742,
		},
		[15234] = {
			["npcID"] = 17961,
		},
		[52780] = {
			["encounterName"] = "Ionar",
			["source"] = "Ionar",
			["npcID"] = 28546,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 559,
		},
		[56938] = {
			["encounterName"] = "Grand Magus Telestra",
			["npcID"] = 26928,
			["encounterID"] = 520,
		},
		[64141] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Freezing Ghoul",
			["npcID"] = 1796,
		},
		[48878] = {
			["encounterName"] = "King Dred",
			["encounterID"] = 373,
			["npcID"] = 27483,
		},
		[25054] = {
			["npcID"] = 27677,
		},
		[59241] = {
			["npcID"] = 26670,
		},
		[59305] = {
			["encounterName"] = "King Ymiron",
			["encounterID"] = 583,
			["npcID"] = 26861,
		},
		[96189] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shattered Sun Marksman",
			["npcID"] = 24938,
		},
		[59433] = {
			["encounterName"] = "Anub'arak",
			["npcID"] = 29120,
			["encounterID"] = 218,
		},
		[29339] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spectral Stable Hand",
			["npcID"] = 15551,
		},
		[55467] = {
			["npcID"] = 16215,
		},
		[52886] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zepik the Gorloc Hunter",
			["npcID"] = 28216,
		},
		[68895] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spiteful Apparition",
			["npcID"] = 36551,
		},
		[55659] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakkari Fire Weaver",
			["npcID"] = 29822,
		},
		[7739] = {
			["source"] = "Stonevault Flameweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7321,
		},
		[84931] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["npcID"] = 40825,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1046,
		},
		[18651] = {
			["npcID"] = 29439,
		},
		[20801] = {
			["npcID"] = 18641,
		},
		[68939] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["npcID"] = 36502,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 831,
		},
		[33526] = {
			["encounterName"] = "Darkweaver Syth",
			["encounterID"] = 1903,
			["npcID"] = 19203,
		},
		[25055] = {
			["source"] = "Scarlet Enchanter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 9452,
		},
		[15586] = {
			["npcID"] = 17833,
		},
		[50094] = {
			["npcID"] = 24228,
		},
		[31602] = {
			["source"] = "Nerub'enkan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10437,
		},
		[54316] = {
			["npcID"] = 15979,
		},
		[33910] = {
			["npcID"] = 16906,
		},
		[33974] = {
			["npcID"] = 18827,
		},
		[50414] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Drakkari Bat Rider",
			["npcID"] = 26638,
		},
		[52973] = {
			["source"] = "Moodle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28122,
		},
		[9573] = {
			["npcID"] = 9537,
		},
		[36277] = {
			["npcID"] = 21148,
		},
		[2601] = {
			["npcID"] = 4300,
		},
		[31516] = {
			["npcID"] = 21285,
		},
		[36469] = {
			["npcID"] = 20561,
		},
		[66893] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reprogrammed Shredder",
			["npcID"] = 35129,
		},
		[69068] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soulguard Adept",
			["npcID"] = 36620,
		},
		[51356] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Turgid the Vile",
			["npcID"] = 27808,
		},
		[55521] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakkari Battle Rider",
			["npcID"] = 29836,
		},
		[5884] = {
			["npcID"] = 29858,
		},
		[59370] = {
			["encounterName"] = "Drakos the Interrogator",
			["encounterID"] = 528,
			["npcID"] = 27654,
		},
		[84037] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["npcID"] = 40792,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[34934] = {
			["npcID"] = 18394,
		},
		[10258] = {
			["source"] = "Archaedas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2748,
		},
		[61673] = {
			["npcID"] = 30300,
		},
		[31473] = {
			["encounterName"] = "Aeonus",
			["source"] = "Aeonus",
			["encounterID"] = 1919,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17881,
		},
		[69056] = {
			["source"] = "Soulguard Watchman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36478,
		},
		[11892] = {
			["source"] = "Grimlok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4854,
		},
		[49711] = {
			["npcID"] = 26637,
		},
		[33335] = {
			["encounterName"] = "Grandmaster Vorpil",
			["encounterID"] = 1911,
			["npcID"] = 18634,
		},
		[55980] = {
			["source"] = "Enormos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30021,
		},
		[93505] = {
			["encounterName"] = "Lord Walden",
			["source"] = "Lord Walden",
			["encounterID"] = 1073,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46963,
		},
		[33527] = {
			["encounterName"] = "Darkweaver Syth",
			["encounterID"] = 1903,
			["npcID"] = 19205,
		},
		[59463] = {
			["encounterName"] = "Erekem",
			["source"] = "Erekem",
			["encounterID"] = 2658,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29315,
		},
		[50900] = {
			["encounterName"] = "Sjonnir the Ironshaper",
			["source"] = "Forged Iron Trogg",
			["npcID"] = 27979,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 569,
		},
		[58283] = {
			["npcID"] = 30895,
		},
		[24189] = {
			["encounterName"] = "High Priest Thekal",
			["source"] = "High Priest Thekal",
			["encounterID"] = 789,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14509,
		},
		[54317] = {
			["npcID"] = 15979,
		},
		[38197] = {
			["encounterName"] = "Talon King Ikiss",
			["encounterID"] = 1902,
			["npcID"] = 18473,
		},
		[33975] = {
			["npcID"] = 19191,
		},
		[1516] = {
			["npcID"] = 2951,
		},
		[72268] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tortured Rifleman",
			["npcID"] = 38176,
		},
		[17142] = {
			["npcID"] = 22862,
		},
		[8131] = {
			["npcID"] = 4291,
		},
		[413172] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Immortal Crusher Tentacle",
			["npcID"] = 206038,
		},
		[36406] = {
			["npcID"] = 20141,
		},
		[28478] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 15990,
			["encounterID"] = 1114,
		},
		[37162] = {
			["encounterName"] = "Harbinger Skyriss",
			["encounterID"] = 1914,
			["npcID"] = 20912,
		},
		[18327] = {
			["source"] = "Baroness Anastari",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10436,
		},
		[59179] = {
			["npcID"] = 28965,
		},
		[59243] = {
			["source"] = "Ymirjar Flesh Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26670,
		},
		[707] = {
			["npcID"] = 12319,
		},
		[69582] = {
			["source"] = "Plagueborn Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36879,
		},
		[34871] = {
			["npcID"] = 20115,
		},
		[32888] = {
			["npcID"] = 18506,
		},
		[8246] = {
			["npcID"] = 4119,
		},
		[79050] = {
			["encounterName"] = "High Priestess Azil",
			["source"] = "High Priestess Azil",
			["encounterID"] = 1057,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42333,
		},
		[51503] = {
			["npcID"] = 27966,
		},
		[62250] = {
			["encounterName"] = "Ley-Guardian Eregos",
			["npcID"] = 28276,
		},
		[35255] = {
			["npcID"] = 20478,
		},
		[8422] = {
			["npcID"] = 4289,
		},
		[49712] = {
			["npcID"] = 30484,
		},
		[47729] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 520,
			["npcID"] = 26930,
		},
		[35511] = {
			["npcID"] = 23177,
		},
		[33528] = {
			["encounterName"] = "Darkweaver Syth",
			["encounterID"] = 1903,
			["npcID"] = 19204,
		},
		[22945] = {
			["source"] = "Arcane Torrent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14399,
		},
		[3131] = {
			["npcID"] = 10197,
		},
		[16868] = {
			["source"] = "Shrieking Banshee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10463,
		},
		[69583] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ymirjar Flamebearer",
			["npcID"] = 36893,
		},
		[54318] = {
			["npcID"] = 29337,
		},
		[16565] = {
			["source"] = "Baroness Anastari",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10436,
		},
		[50379] = {
			["encounterName"] = "Trollgore",
			["source"] = "Scourge Reanimator",
			["encounterID"] = 369,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26626,
		},
		[50416] = {
			["npcID"] = 25728,
		},
		[32330] = {
			["npcID"] = 17732,
		},
		[54164] = {
			["encounterName"] = "Xevozz",
			["npcID"] = 29271,
			["encounterID"] = 2661,
		},
		[34232] = {
			["npcID"] = 21783,
		},
		[50672] = {
			["npcID"] = 25334,
		},
		[8598] = {
			["source"] = "Wrathtail Sea Witch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3715,
		},
		[58536] = {
			["source"] = "Portal Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30893,
		},
		[46029] = {
			["source"] = "Sunblade Blood Knight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24684,
		},
		[42740] = {
			["npcID"] = 23960,
		},
		[34616] = {
			["npcID"] = 19511,
		},
		[59244] = {
			["source"] = "Ymirjar Flesh Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26670,
		},
		[53167] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Rune Theurgist",
			["npcID"] = 27963,
		},
		[59372] = {
			["encounterName"] = "Varos Cloudstrider",
			["encounterID"] = 530,
			["npcID"] = 27447,
		},
		[6979] = {
			["npcID"] = 4281,
		},
		[7951] = {
			["npcID"] = 5756,
		},
		[15228] = {
			["npcID"] = 11604,
		},
		[57753] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Onyx Blaze Mistress",
			["npcID"] = 30681,
		},
		[52761] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zepik the Gorloc Hunter",
			["npcID"] = 28216,
		},
		[8806] = {
			["npcID"] = 3258,
		},
		[59723] = {
			["encounterName"] = "Maiden of Grief",
			["npcID"] = 27975,
			["encounterID"] = 565,
		},
		[60009] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30621,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 215,
		},
		[61893] = {
			["npcID"] = 27717,
		},
		[60012] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30625,
		},
		[55982] = {
			["source"] = "Enormos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30021,
		},
		[33529] = {
			["encounterName"] = "Darkweaver Syth",
			["encounterID"] = 1903,
			["npcID"] = 19206,
		},
		[77773] = {
			["source"] = "Scarlet Scryer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4293,
		},
		[52080] = {
			["npcID"] = 27006,
		},
		[31914] = {
			["encounterName"] = "Epoch Hunter",
			["encounterID"] = 1906,
			["npcID"] = 18096,
		},
		[83914] = {
			["encounterName"] = "Ozumat",
			["source"] = "Vicious Mindlasher",
			["npcID"] = 44715,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[9613] = {
			["npcID"] = 19411,
		},
		[59435] = {
			["source"] = "Varimathras",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31565,
		},
		[58849] = {
			["encounterName"] = "Mal'ganis",
			["encounterID"] = 296,
			["npcID"] = 26533,
		},
		[44276] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24556,
		},
		[8272] = {
			["npcID"] = 4525,
		},
		[52592] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Krik'thir the Gatewatcher",
			["encounterID"] = 216,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28684,
		},
		[34233] = {
			["npcID"] = 17014,
		},
		[38391] = {
			["npcID"] = 19643,
		},
		[34361] = {
			["npcID"] = 18422,
		},
		[34425] = {
			["source"] = "Lake Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17153,
		},
		[54670] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Warlord Zol'Maz",
			["npcID"] = 28902,
		},
		[59469] = {
			["encounterName"] = "Lavanthor",
			["source"] = "Lavanthor",
			["encounterID"] = 2662,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29312,
		},
		[51121] = {
			["encounterName"] = "Mage-Lord Urom",
			["source"] = "Mage-Lord Urom",
			["npcID"] = 27655,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 532,
		},
		[83915] = {
			["encounterName"] = "Ozumat",
			["source"] = "Vicious Mindlasher",
			["npcID"] = 44715,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[30686] = {
			["encounterName"] = "Omor the Unscarred",
			["encounterID"] = 1891,
			["npcID"] = 17308,
		},
		[6660] = {
			["npcID"] = 3265,
		},
		[59430] = {
			["encounterName"] = "Anub'arak",
			["npcID"] = 29120,
			["encounterID"] = 218,
		},
		[36984] = {
			["npcID"] = 20901,
		},
		[57376] = {
			["encounterName"] = "The Four Horsemen",
			["npcID"] = 16063,
			["encounterID"] = 1121,
		},
		[61546] = {
			["encounterName"] = "Krystallus",
			["encounterID"] = 563,
			["npcID"] = 27977,
		},
		[58667] = {
			["npcID"] = 33422,
		},
		[53322] = {
			["source"] = "Anub'ar Crypt Fiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29118,
		},
		[17137] = {
			["source"] = "Scarlet Medic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10605,
		},
		[39415] = {
			["encounterName"] = "Harbinger Skyriss",
			["encounterID"] = 1914,
			["npcID"] = 20912,
		},
		[52209] = {
			["npcID"] = 27259,
		},
		[47731] = {
			["encounterName"] = "Grand Magus Telestra",
			["npcID"] = 26929,
			["encounterID"] = 520,
		},
		[50506] = {
			["npcID"] = 25707,
		},
		[22914] = {
			["source"] = "Illyanna Ravenoak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11488,
		},
		[22946] = {
			["source"] = "Arcane Torrent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14399,
		},
		[15587] = {
			["npcID"] = 4832,
		},
		[16869] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maleki the Pallid",
			["npcID"] = 10438,
		},
		[88010] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Vortex",
			["npcID"] = 45912,
		},
		[59663] = {
			["npcID"] = 31775,
		},
		[9532] = {
			["npcID"] = 18118,
		},
		[16997] = {
			["source"] = "Rockwing Screecher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10409,
		},
		[21071] = {
			["npcID"] = 12206,
		},
		[36153] = {
			["npcID"] = 21065,
		},
		[9574] = {
			["npcID"] = 18794,
		},
		[58438] = {
			["npcID"] = 30856,
		},
		[52721] = {
			["encounterName"] = "Mal'ganis",
			["source"] = "Mal'Ganis",
			["npcID"] = 26533,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 296,
		},
		[83021] = {
			["source"] = "Death's Step Miscreation",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45444,
		},
		[36345] = {
			["npcID"] = 20988,
		},
		[46772] = {
			["npcID"] = 26206,
		},
		[42870] = {
			["npcID"] = 24051,
		},
		[59182] = {
			["npcID"] = 28584,
		},
		[59246] = {
			["encounterName"] = "Skadi the Ruthless",
			["encounterID"] = 581,
			["npcID"] = 26691,
		},
		[15859] = {
			["source"] = "Twilight Shadowmage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4813,
		},
		[9734] = {
			["npcID"] = 3386,
		},
		[15795] = {
			["source"] = "Sister of Celebras",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11794,
		},
		[13860] = {
			["source"] = "Anok'ra the Manipulator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26769,
		},
		[11829] = {
			["npcID"] = 16905,
		},
		[59016] = {
			["encounterName"] = "Novos the Summoner",
			["encounterID"] = 371,
			["npcID"] = 27600,
		},
		[57676] = {
			["npcID"] = 30656,
		},
		[53617] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'ar Venomancer",
			["encounterID"] = 218,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29217,
		},
		[57775] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30625,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 215,
		},
		[35322] = {
			["encounterName"] = "Gatewatcher Iron-Hand",
			["npcID"] = 19710,
			["encounterID"] = 1934,
		},
		[47668] = {
			["npcID"] = 26635,
		},
		[68821] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apothecary Baxter",
			["npcID"] = 36565,
		},
		[49843] = {
			["npcID"] = 24872,
		},
		[57381] = {
			["encounterName"] = "The Four Horsemen",
			["source"] = "Lady Blaumeux",
			["encounterID"] = 1121,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16065,
		},
		[54431] = {
			["npcID"] = 25800,
		},
		[51612] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Rune Scholar",
			["npcID"] = 27964,
		},
		[15497] = {
			["npcID"] = 17963,
		},
		[33787] = {
			["npcID"] = 17962,
		},
		[37945] = {
			["npcID"] = 21462,
		},
		[58956] = {
			["encounterName"] = "Sartharion",
			["source"] = "Sartharion",
			["npcID"] = 28860,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 742,
		},
		[7068] = {
			["npcID"] = 3887,
		},
		[78801] = {
			["source"] = "Hydromancer Velratha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7795,
		},
		[16561] = {
			["npcID"] = 20270,
		},
		[45324] = {
			["npcID"] = 25197,
		},
		[60846] = {
			["npcID"] = 32290,
		},
		[52722] = {
			["encounterName"] = "Mal'ganis",
			["source"] = "Mal'Ganis",
			["npcID"] = 26533,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 296,
		},
		[14292] = {
			["npcID"] = 9524,
		},
		[7124] = {
			["npcID"] = 2529,
		},
		[7132] = {
			["npcID"] = 3863,
		},
		[32914] = {
			["npcID"] = 18437,
		},
		[59183] = {
			["npcID"] = 28584,
		},
		[59247] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Ymirjar Witch Doctor",
			["encounterID"] = 581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26691,
		},
		[60781] = {
			["npcID"] = 30205,
		},
		[45046] = {
			["npcID"] = 25033,
		},
		[49204] = {
			["source"] = "Ymirjar Dusk Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26694,
		},
		[61550] = {
			["source"] = "Venomtip",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28358,
		},
		[51507] = {
			["npcID"] = 27966,
		},
		[35195] = {
			["npcID"] = 18121,
		},
		[10326] = {
			["npcID"] = 28029,
		},
		[113] = {
			["npcID"] = 4516,
		},
		[22478] = {
			["npcID"] = 11490,
		},
		[69591] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilgewater Soldier",
			["npcID"] = 36925,
		},
		[51763] = {
			["source"] = "Dragonblight Mage Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 32572,
		},
		[60015] = {
			["encounterName"] = "Herald Volazj",
			["npcID"] = 30621,
			["encounterID"] = 215,
		},
		[22883] = {
			["source"] = "Hakkari Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11830,
		},
		[14532] = {
			["npcID"] = 8933,
		},
		[22414] = {
			["npcID"] = 11464,
		},
		[29120] = {
			["npcID"] = 18147,
		},
		[69463] = {
			["source"] = "Lord Kassarus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36822,
		},
		[12549] = {
			["npcID"] = 29624,
		},
		[54095] = {
			["encounterName"] = "Grand Widow Faerlina",
			["npcID"] = 16506,
			["encounterID"] = 1110,
		},
		[33916] = {
			["npcID"] = 16975,
		},
		[61337] = {
			["encounterName"] = "Xevozz",
			["npcID"] = 29266,
			["encounterID"] = 2661,
		},
		[12542] = {
			["npcID"] = 21104,
		},
		[15241] = {
			["npcID"] = 17269,
		},
		[37851] = {
			["npcID"] = 21909,
		},
		[60869] = {
			["npcID"] = 30633,
		},
		[44599] = {
			["npcID"] = 24687,
		},
		[50740] = {
			["npcID"] = 27202,
		},
		[50804] = {
			["encounterName"] = "Ley-Guardian Eregos",
			["source"] = "Ley-Guardian Eregos",
			["npcID"] = 27656,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 534,
		},
		[54962] = {
			["npcID"] = 23956,
		},
		[69080] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soulguard Bonecaster",
			["npcID"] = 36564,
		},
		[25602] = {
			["npcID"] = 19306,
		},
		[116] = {
			["npcID"] = 188027,
		},
		[55218] = {
			["encounterName"] = "Gal'darah",
			["npcID"] = 29306,
			["encounterID"] = 390,
		},
		[69592] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spitelash Warrior",
			["npcID"] = 6190,
		},
		[32829] = {
			["npcID"] = 18501,
		},
		[53363] = {
			["npcID"] = 30575,
		},
		[14900] = {
			["npcID"] = 4424,
		},
		[37979] = {
			["npcID"] = 29177,
		},
		[21668] = {
			["npcID"] = 13443,
		},
		[28280] = {
			["npcID"] = 15931,
		},
		[7484] = {
			["npcID"] = 4279,
		},
		[12466] = {
			["npcID"] = 18934,
		},
		[51764] = {
			["npcID"] = 26280,
		},
		[32063] = {
			["npcID"] = 18716,
		},
		[6535] = {
			["npcID"] = 3273,
		},
		[59167] = {
			["npcID"] = 28826,
		},
		[5187] = {
			["npcID"] = 3671,
		},
		[59994] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30623,
		},
		[48054] = {
			["npcID"] = 26737,
		},
		[35159] = {
			["encounterName"] = "Mechano-Lord Capacitus",
			["npcID"] = 19219,
			["encounterID"] = 1932,
		},
		[15124] = {
			["npcID"] = 17892,
		},
		[35964] = {
			["npcID"] = 19705,
		},
		[54102] = {
			["encounterName"] = "Xevozz",
			["npcID"] = 29266,
			["encounterID"] = 2661,
		},
		[7588] = {
			["npcID"] = 4275,
		},
		[54195] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dajik the Wasp Hunter",
			["npcID"] = 28215,
		},
		[28353] = {
			["npcID"] = 16145,
		},
		[52660] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stratholme Resident",
			["npcID"] = 28341,
		},
		[50677] = {
			["npcID"] = 25334,
		},
		[3815] = {
			["npcID"] = 4829,
		},
		[36476] = {
			["npcID"] = 22016,
		},
		[9143] = {
			["npcID"] = 8897,
		},
		[5605] = {
			["npcID"] = 10759,
		},
		[53044] = {
			["encounterName"] = "Erekem",
			["npcID"] = 29315,
			["encounterID"] = 2658,
		},
		[87761] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Executor of the Caliph",
			["npcID"] = 45928,
		},
		[32735] = {
			["npcID"] = 16946,
		},
		[59377] = {
			["encounterName"] = "Mage-Lord Urom",
			["encounterID"] = 532,
			["npcID"] = 27655,
		},
		[24611] = {
			["source"] = "Mad Servant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 15111,
		},
		[55334] = {
			["npcID"] = 16163,
		},
		[38881] = {
			["npcID"] = 26735,
		},
		[59633] = {
			["npcID"] = 31746,
		},
		[34170] = {
			["npcID"] = 18420,
		},
		[59761] = {
			["source"] = "Blight Spreader",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31831,
		},
		[28993] = {
			["npcID"] = 27680,
		},
		[35325] = {
			["npcID"] = 20198,
		},
		[12890] = {
			["npcID"] = 5709,
		},
		[20805] = {
			["source"] = "Lord Pythas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3670,
		},
		[11397] = {
			["npcID"] = 7332,
		},
		[37628] = {
			["npcID"] = 20872,
		},
		[75992] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Tempest Witch",
			["npcID"] = 40634,
		},
		[87762] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Minister of Air",
			["npcID"] = 45930,
		},
		[83796] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verlok Shroomtender",
			["npcID"] = 43368,
		},
		[15620] = {
			["npcID"] = 17815,
		},
		[51336] = {
			["encounterName"] = "Drakos the Interrogator",
			["encounterID"] = 528,
			["npcID"] = 27654,
		},
		[5781] = {
			["npcID"] = 2958,
		},
		[15668] = {
			["npcID"] = 9938,
		},
		[34302] = {
			["npcID"] = 16975,
		},
		[38204] = {
			["npcID"] = 33422,
		},
		[49161] = {
			["npcID"] = 27629,
		},
		[9591] = {
			["npcID"] = 5280,
		},
		[78807] = {
			["encounterName"] = "Ozruk",
			["source"] = "Ozruk",
			["encounterID"] = 1058,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42188,
		},
		[56862] = {
			["npcID"] = 30419,
		},
		[29505] = {
			["source"] = "Night Lord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184259,
		},
		[93520] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["encounterID"] = 1072,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46964,
		},
		[17287] = {
			["source"] = "Grand Crusader Dathrohan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10812,
		},
		[39419] = {
			["npcID"] = 18213,
		},
		[81530] = {
			["source"] = "Stonecore Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43537,
		},
		[36623] = {
			["npcID"] = 22113,
		},
		[55348] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakkari Battle Rider",
			["npcID"] = 29836,
		},
		[7948] = {
			["npcID"] = 5761,
		},
		[12747] = {
			["npcID"] = 3261,
		},
		[58948] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Onyx Sanctum Guardian",
			["npcID"] = 30453,
		},
		[53493] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prophet of Akali",
			["npcID"] = 29028,
		},
		[37500] = {
			["npcID"] = 19554,
		},
		[35198] = {
			["npcID"] = 20455,
		},
		[54878] = {
			["encounterName"] = "Drakkari Colossus",
			["npcID"] = 29573,
			["encounterID"] = 385,
		},
		[8004] = {
			["npcID"] = 3434,
		},
		[51766] = {
			["npcID"] = 26280,
		},
		[47736] = {
			["encounterName"] = "Grand Magus Telestra",
			["npcID"] = 26929,
			["encounterID"] = 520,
		},
		[54323] = {
			["npcID"] = 29338,
		},
		[421] = {
			["npcID"] = 1062,
		},
		[59800] = {
			["encounterName"] = "Ionar",
			["npcID"] = 28546,
			["encounterID"] = 559,
		},
		[16100] = {
			["npcID"] = 17820,
		},
		[75610] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corla, Herald of Twilight",
			["npcID"] = 39679,
		},
		[59362] = {
			["npcID"] = 29335,
		},
		[38205] = {
			["npcID"] = 17870,
		},
		[33919] = {
			["encounterName"] = "Tavarok",
			["encounterID"] = 1901,
			["npcID"] = 18343,
		},
		[40124] = {
			["npcID"] = 23090,
		},
		[80344] = {
			["source"] = "Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43014,
		},
		[52534] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Anub'ar Shadowcaster",
			["encounterID"] = 216,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28733,
		},
		[22651] = {
			["npcID"] = 11490,
		},
		[76634] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tainted Sentry",
			["npcID"] = 40925,
		},
		[44538] = {
			["npcID"] = 24698,
		},
		[28450] = {
			["npcID"] = 16215,
		},
		[40636] = {
			["npcID"] = 23269,
		},
		[54965] = {
			["encounterName"] = "Prince Keleseth",
			["npcID"] = 23960,
			["encounterID"] = 571,
		},
		[61170] = {
			["npcID"] = 31242,
		},
		[16340] = {
			["npcID"] = 10661,
		},
		[59251] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Binder",
			["npcID"] = 30918,
		},
		[24612] = {
			["source"] = "Mad Servant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 15111,
		},
		[2052] = {
			["npcID"] = 2990,
		},
		[34879] = {
			["npcID"] = 17994,
		},
		[54673] = {
			["npcID"] = 28387,
		},
		[34358] = {
			["encounterName"] = "Commander Sarannis",
			["encounterID"] = 1925,
			["npcID"] = 19486,
		},
		[22661] = {
			["npcID"] = 11492,
		},
		[16552] = {
			["npcID"] = 7447,
		},
		[49528] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 375,
		},
		[57780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Air Elemental",
			["npcID"] = 44885,
		},
		[59102] = {
			["npcID"] = 30278,
		},
		[547] = {
			["npcID"] = 3271,
		},
		[35946] = {
			["npcID"] = 24696,
		},
		[8376] = {
			["npcID"] = 4440,
		},
		[50648] = {
			["npcID"] = 25316,
		},
		[95826] = {
			["source"] = "Brave Running Wolf",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3213,
		},
		[36582] = {
			["npcID"] = 19735,
		},
		[15537] = {
			["npcID"] = 7275,
		},
		[33792] = {
			["encounterName"] = "Lieutenant Drake",
			["source"] = "Lieutenant Drake",
			["npcID"] = 17848,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1905,
		},
		[30643] = {
			["encounterName"] = "Watchkeeper Gargolmar",
			["encounterID"] = 1893,
			["npcID"] = 17309,
		},
		[82137] = {
			["source"] = "Rom'ogg Bonecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39665,
		},
		[36127] = {
			["encounterName"] = "Zereketh the Unbound",
			["encounterID"] = 1916,
			["npcID"] = 20870,
		},
		[27267] = {
			["npcID"] = 416,
		},
		[30741] = {
			["npcID"] = 16807,
		},
		[134] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Minor Manifestation of Fire",
			["npcID"] = 5893,
		},
		[44475] = {
			["npcID"] = 24683,
		},
		[50744] = {
			["encounterName"] = "Mage-Lord Urom",
			["source"] = "Phantasmal Fire",
			["npcID"] = 27651,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 532,
		},
		[8600] = {
			["npcID"] = 7272,
		},
		[20829] = {
			["npcID"] = 8551,
		},
		[43083] = {
			["npcID"] = 23668,
		},
		[12742] = {
			["npcID"] = 8910,
		},
		[60236] = {
			["npcID"] = 28547,
		},
		[59252] = {
			["npcID"] = 26694,
		},
		[31713] = {
			["npcID"] = 4292,
		},
		[59331] = {
			["encounterName"] = "Skadi the Ruthless",
			["encounterID"] = 581,
			["npcID"] = 26693,
		},
		[51384] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Avenger Metz",
			["npcID"] = 28178,
		},
		[34639] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunseeker Harvester",
			["npcID"] = 19509,
		},
		[35008] = {
			["encounterName"] = "Rokmar the Crackler",
			["encounterID"] = 1941,
			["npcID"] = 17991,
		},
		[57589] = {
			["encounterName"] = "Herald Volazj",
			["encounterID"] = 215,
			["npcID"] = 30622,
		},
		[36604] = {
			["npcID"] = 20774,
		},
		[5137] = {
			["npcID"] = 21911,
		},
		[35328] = {
			["npcID"] = 20197,
		},
		[43516] = {
			["npcID"] = 24255,
		},
		[51768] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Broodmother Slivina",
			["npcID"] = 28467,
		},
		[51832] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unrelenting Construct",
			["npcID"] = 27971,
		},
		[60084] = {
			["source"] = "Khanok the Impassable",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 32160,
		},
		[32129] = {
			["npcID"] = 18328,
		},
		[35892] = {
			["npcID"] = 24972,
		},
		[28099] = {
			["encounterName"] = "Thaddius",
			["source"] = "Tesla Coil",
			["encounterID"] = 1120,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16218,
		},
		[56491] = {
			["npcID"] = 30270,
		},
		[33793] = {
			["encounterName"] = "Vazruden the Herald",
			["encounterID"] = 1892,
			["npcID"] = 17307,
		},
		[38753] = {
			["npcID"] = 19754,
		},
		[40062] = {
			["npcID"] = 17414,
		},
		[56935] = {
			["encounterName"] = "Grand Magus Telestra",
			["npcID"] = 26731,
			["encounterID"] = 520,
		},
		[32424] = {
			["encounterName"] = "Exarch Maladaar",
			["npcID"] = 18373,
			["encounterID"] = 1889,
		},
		[6605] = {
			["npcID"] = 9166,
		},
		[80604] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tortolla",
			["npcID"] = 40999,
		},
		[15253] = {
			["source"] = "Crimson Battle Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10425,
		},
		[60916] = {
			["npcID"] = 32353,
		},
		[48698] = {
			["source"] = "Dragonflayer Seer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26554,
		},
		[20295] = {
			["source"] = "Lady Anacondra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3671,
		},
		[48264] = {
			["npcID"] = 23656,
		},
		[7978] = {
			["npcID"] = 19295,
		},
		[52770] = {
			["encounterName"] = "Ionar",
			["npcID"] = 28546,
			["encounterID"] = 559,
		},
		[36736] = {
			["npcID"] = 20875,
		},
		[30707] = {
			["encounterName"] = "Omor the Unscarred",
			["encounterID"] = 1891,
			["npcID"] = 17308,
		},
		[59381] = {
			["encounterName"] = "Ley-Guardian Eregos",
			["encounterID"] = 534,
			["npcID"] = 27656,
		},
		[79965] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gidwin Goldbraids",
			["npcID"] = 45677,
		},
		[43133] = {
			["npcID"] = 4378,
		},
		[6685] = {
			["npcID"] = 7155,
		},
		[53496] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prophet of Akali",
			["npcID"] = 29028,
		},
		[49309] = {
			["npcID"] = 32340,
		},
		[76026] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[54021] = {
			["encounterName"] = "Anub'Rekhan",
			["npcID"] = 15956,
			["encounterID"] = 1107,
		},
		[6725] = {
			["npcID"] = 7335,
		},
		[68989] = {
			["encounterName"] = "Krick",
			["source"] = "Ick",
			["encounterID"] = 835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36476,
		},
		[11431] = {
			["npcID"] = 7874,
		},
		[28995] = {
			["npcID"] = 16168,
		},
		[93655] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mekgineer Thermaplugg",
			["npcID"] = 7800,
		},
		[39082] = {
			["npcID"] = 22076,
		},
		[53765] = {
			["source"] = "Lady Alistra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29195,
		},
		[57047] = {
			["npcID"] = 26737,
		},
		[39337] = {
			["npcID"] = 17870,
		},
		[56919] = {
			["npcID"] = 26805,
		},
		[59108] = {
			["npcID"] = 30279,
		},
		[20831] = {
			["npcID"] = 30376,
		},
		[44285] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24555,
		},
		[58678] = {
			["encounterName"] = "Archavon the Stone Watcher",
			["encounterID"] = 772,
			["npcID"] = 31125,
		},
		[36225] = {
			["npcID"] = 19756,
		},
		[44477] = {
			["npcID"] = 11788,
		},
		[38400] = {
			["npcID"] = 22122,
		},
		[67301] = {
			["source"] = "Talrendis Saboteur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 35312,
		},
		[31554] = {
			["npcID"] = 17958,
		},
		[15797] = {
			["npcID"] = 7448,
		},
		[9672] = {
			["npcID"] = 18087,
		},
		[35010] = {
			["encounterName"] = "Mennu the Betrayer",
			["encounterID"] = 1939,
			["npcID"] = 17941,
		},
		[59254] = {
			["npcID"] = 28368,
		},
		[6909] = {
			["npcID"] = 5475,
		},
		[6917] = {
			["npcID"] = 19350,
		},
		[72163] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Mage",
			["npcID"] = 38172,
		},
		[32194] = {
			["npcID"] = 27555,
		},
		[13878] = {
			["npcID"] = 17088,
		},
		[59638] = {
			["npcID"] = 31216,
		},
		[86620] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hogger",
			["npcID"] = 46254,
		},
		[59266] = {
			["encounterName"] = "Mage-Lord Urom",
			["encounterID"] = 532,
			["npcID"] = 27653,
		},
		[11895] = {
			["source"] = "Antu'sul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8127,
		},
		[59894] = {
			["npcID"] = 31280,
		},
		[35394] = {
			["npcID"] = 18129,
		},
		[56632] = {
			["npcID"] = 30276,
		},
		[19816] = {
			["npcID"] = 19657,
		},
		[11975] = {
			["npcID"] = 19494,
		},
		[52026] = {
			["encounterName"] = "General Bjarngrim",
			["source"] = "General Bjarngrim",
			["encounterID"] = 555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28586,
		},
		[54137] = {
			["encounterName"] = "Xevozz",
			["encounterID"] = 2661,
			["npcID"] = 29266,
		},
		[79351] = {
			["encounterName"] = "High Priestess Azil",
			["source"] = "High Priestess Azil",
			["encounterID"] = 1057,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42333,
		},
		[12039] = {
			["encounterName"] = "Watchkeeper Gargolmar",
			["encounterID"] = 1893,
			["npcID"] = 17309,
		},
		[68988] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["npcID"] = 36497,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 829,
		},
		[33923] = {
			["encounterName"] = "Murmur",
			["encounterID"] = 1910,
			["npcID"] = 18708,
		},
		[56504] = {
			["npcID"] = 30301,
		},
		[38401] = {
			["npcID"] = 21207,
		},
		[38209] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cabal Acolyte",
			["npcID"] = 18633,
		},
		[61558] = {
			["npcID"] = 28200,
		},
		[49084] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Ymirjar Witch Doctor",
			["encounterID"] = 581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26691,
		},
		[12167] = {
			["encounterName"] = "Tribunal of Ages",
			["source"] = "Dark Rune Stormcaller",
			["npcID"] = 27984,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 567,
		},
		[44606] = {
			["npcID"] = 24685,
		},
		[20296] = {
			["source"] = "Scarlet Evoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4289,
		},
		[11642] = {
			["npcID"] = 4285,
		},
		[43135] = {
			["npcID"] = 4394,
		},
		[32674] = {
			["npcID"] = 18321,
		},
		[59255] = {
			["npcID"] = 28368,
		},
		[30691] = {
			["encounterName"] = "Vazruden the Herald",
			["encounterID"] = 1892,
			["npcID"] = 17307,
		},
		[16554] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blighted Surge",
			["npcID"] = 8519,
		},
		[12471] = {
			["npcID"] = 17478,
		},
		[57464] = {
			["encounterName"] = "The Four Horsemen",
			["npcID"] = 16065,
			["encounterID"] = 1121,
		},
		[59575] = {
			["encounterName"] = "Skarvold & Dalronn",
			["encounterID"] = 573,
			["npcID"] = 24201,
		},
		[30851] = {
			["npcID"] = 17395,
		},
		[22695] = {
			["source"] = "Petrified Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14303,
		},
		[36099] = {
			["npcID"] = 20409,
		},
		[35267] = {
			["npcID"] = 19168,
		},
		[35331] = {
			["npcID"] = 18283,
		},
		[33796] = {
			["npcID"] = 16896,
		},
		[56505] = {
			["encounterName"] = "Malygos",
			["source"] = "Malygos",
			["npcID"] = 28859,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 734,
		},
		[22887] = {
			["npcID"] = 17729,
		},
		[51963] = {
			["npcID"] = 27829,
		},
		[9483] = {
			["npcID"] = 2716,
		},
		[54138] = {
			["encounterName"] = "Xevozz",
			["npcID"] = 29266,
			["encounterID"] = 2661,
		},
		[72166] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Mage",
			["npcID"] = 38172,
		},
		[52219] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Har'koa",
			["npcID"] = 28401,
		},
		[33860] = {
			["npcID"] = 18429,
		},
		[33924] = {
			["npcID"] = 19424,
		},
		[50364] = {
			["npcID"] = 25622,
		},
		[84448] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aeosera",
			["npcID"] = 43641,
		},
		[76516] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gilgoblin Hunter",
			["npcID"] = 40935,
		},
		[36227] = {
			["npcID"] = 20887,
		},
		[44479] = {
			["npcID"] = 24684,
		},
		[60919] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Archavon Warder",
			["npcID"] = 32353,
		},
		[17194] = {
			["npcID"] = 22074,
		},
		[37179] = {
			["npcID"] = 20928,
		},
		[54970] = {
			["encounterName"] = "Slad'ran",
			["source"] = "Slad'ran",
			["npcID"] = 29304,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 383,
		},
		[17290] = {
			["npcID"] = 26727,
		},
		[55098] = {
			["encounterName"] = "Moorabi",
			["npcID"] = 29305,
			["encounterID"] = 387,
		},
		[22924] = {
			["source"] = "Tendris Warpwood",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11489,
		},
		[37580] = {
			["npcID"] = 19755,
		},
		[31747] = {
			["npcID"] = 16844,
		},
		[79971] = {
			["source"] = "Tarenar Sunstrike",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45445,
		},
		[57465] = {
			["encounterName"] = "The Four Horsemen",
			["npcID"] = 16063,
			["encounterID"] = 1121,
		},
		[76133] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["npcID"] = 40792,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[40076] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilskar Wrangler",
			["npcID"] = 22877,
		},
		[48599] = {
			["npcID"] = 23796,
		},
		[35204] = {
			["npcID"] = 18116,
		},
		[57785] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30621,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 215,
		},
		[55802] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 15990,
			["encounterID"] = 1114,
		},
		[57799] = {
			["encounterName"] = "Herald Volazj",
			["encounterID"] = 215,
			["npcID"] = 30621,
		},
		[21832] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Princess Theradras",
			["npcID"] = 12201,
		},
		[53425] = {
			["npcID"] = 25804,
		},
		[51500] = {
			["npcID"] = 27363,
		},
		[11016] = {
			["npcID"] = 7247,
		},
		[172] = {
			["npcID"] = 3204,
		},
		[15254] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18431,
		},
		[88032] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Vortex",
			["npcID"] = 45912,
		},
		[54331] = {
			["npcID"] = 16029,
		},
		[20297] = {
			["npcID"] = 31813,
		},
		[44224] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["npcID"] = 24664,
			["encounterID"] = 1894,
		},
		[28293] = {
			["source"] = "Living Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16021,
		},
		[59521] = {
			["encounterName"] = "Ichoron",
			["npcID"] = 29313,
			["encounterID"] = 2660,
		},
		[56698] = {
			["npcID"] = 30278,
		},
		[9081] = {
			["source"] = "Shadowforge Darkcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4848,
		},
		[15238] = {
			["source"] = "Crimson Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10423,
		},
		[38467] = {
			["npcID"] = 21648,
		},
		[66795] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reprogrammed Shredder",
			["npcID"] = 35129,
		},
		[7645] = {
			["npcID"] = 4813,
		},
		[48894] = {
			["encounterName"] = "Trollgore",
			["encounterID"] = 369,
			["npcID"] = 26639,
		},
		[15493] = {
			["npcID"] = 9056,
		},
		[32707] = {
			["npcID"] = 21902,
		},
		[34829] = {
			["npcID"] = 27377,
		},
		[36868] = {
			["npcID"] = 20883,
		},
		[34359] = {
			["npcID"] = 19486,
		},
		[36996] = {
			["npcID"] = 19738,
		},
		[61168] = {
			["npcID"] = 31242,
		},
		[72169] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Mage",
			["npcID"] = 38172,
		},
		[53333] = {
			["npcID"] = 29064,
		},
		[16587] = {
			["npcID"] = 8548,
		},
		[36609] = {
			["npcID"] = 20859,
		},
		[41440] = {
			["npcID"] = 23441,
		},
		[59009] = {
			["npcID"] = 26638,
		},
		[2860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Antu'sul",
			["npcID"] = 8127,
		},
		[51901] = {
			["npcID"] = 27254,
		},
		[13748] = {
			["npcID"] = 8913,
		},
		[52740] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hardened Steel Berserker",
			["npcID"] = 28579,
		},
		[57454] = {
			["npcID"] = 29974,
		},
		[50760] = {
			["encounterName"] = "Maiden of Grief",
			["source"] = "Maiden of Grief",
			["npcID"] = 27975,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 565,
		},
		[9481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Inquisitor Whitemane",
			["npcID"] = 3977,
		},
		[76008] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[90337] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "BOMBACLAT",
			["npcID"] = 48441,
		},
		[28297] = {
			["source"] = "Lightning Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16385,
		},
		[29317] = {
			["encounterName"] = "Gothik the Harvester",
			["npcID"] = 16060,
			["encounterID"] = 1109,
		},
		[36333] = {
			["npcID"] = 20990,
		},
		[52356] = {
			["npcID"] = 28768,
		},
		[50293] = {
			["npcID"] = 25454,
		},
		[29477] = {
			["source"] = "Night Lord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184259,
		},
		[17195] = {
			["npcID"] = 19168,
		},
		[43619] = {
			["npcID"] = 24638,
		},
		[59257] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Spellbreaker",
			["npcID"] = 31009,
		},
		[48895] = {
			["npcID"] = 26639,
		},
		[51103] = {
			["encounterName"] = "Mage-Lord Urom",
			["encounterID"] = 532,
			["npcID"] = 27655,
		},
		[87779] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Temple Adept",
			["npcID"] = 45935,
		},
		[33961] = {
			["npcID"] = 18318,
		},
		[15869] = {
			["npcID"] = 18080,
		},
		[57467] = {
			["encounterName"] = "The Four Horsemen",
			["npcID"] = 16064,
			["encounterID"] = 1121,
		},
		[32903] = {
			["npcID"] = 21515,
		},
		[72171] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Mage",
			["npcID"] = 38172,
		},
		[51454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Inquisitor",
			["npcID"] = 27633,
		},
		[59706] = {
			["encounterName"] = "Ingvar the Plunderer",
			["encounterID"] = 575,
			["npcID"] = 23954,
		},
		[8005] = {
			["npcID"] = 4404,
		},
		[29928] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
		},
		[16006] = {
			["npcID"] = 13236,
		},
		[36840] = {
			["npcID"] = 20897,
		},
		[59001] = {
			["npcID"] = 26637,
		},
		[22686] = {
			["encounterName"] = "King Dred",
			["encounterID"] = 373,
			["npcID"] = 27483,
		},
		[55815] = {
			["encounterName"] = "Eck the Ferocious",
			["npcID"] = 29932,
			["encounterID"] = 1988,
		},
		[7162] = {
			["npcID"] = 5661,
		},
		[16102] = {
			["npcID"] = 19797,
		},
		[59346] = {
			["npcID"] = 28922,
		},
		[38085] = {
			["npcID"] = 27898,
		},
		[54333] = {
			["npcID"] = 16385,
		},
		[50495] = {
			["npcID"] = 27655,
		},
		[22121] = {
			["npcID"] = 13359,
		},
		[28294] = {
			["npcID"] = 16021,
		},
		[34119] = {
			["npcID"] = 19502,
		},
		[70381] = {
			["encounterName"] = "Forgemaster Garfrost",
			["source"] = "Forgemaster Garfrost",
			["encounterID"] = 833,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36494,
		},
		[69368] = {
			["source"] = "Ticker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36750,
		},
		[61568] = {
			["npcID"] = 30111,
		},
		[31623] = {
			["encounterName"] = "Swamplord Musel'ek",
			["encounterID"] = 1947,
			["npcID"] = 17826,
		},
		[36486] = {
			["npcID"] = 20798,
		},
		[52926] = {
			["npcID"] = 29001,
		},
		[12248] = {
			["npcID"] = 17771,
		},
		[55101] = {
			["encounterName"] = "Moorabi",
			["source"] = "Moorabi",
			["encounterID"] = 387,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29305,
		},
		[59259] = {
			["npcID"] = 28579,
		},
		[34759] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["npcID"] = 17975,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1926,
		},
		[56326] = {
			["npcID"] = 29368,
		},
		[59515] = {
			["source"] = "Lady Sylvanas Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31651,
		},
		[61562] = {
			["npcID"] = 30319,
		},
		[30853] = {
			["npcID"] = 17395,
		},
		[59643] = {
			["npcID"] = 31785,
		},
		[47425] = {
			["npcID"] = 26841,
		},
		[16588] = {
			["npcID"] = 17084,
		},
		[59835] = {
			["encounterName"] = "Loken",
			["npcID"] = 28923,
			["encounterID"] = 561,
		},
		[49816] = {
			["npcID"] = 25479,
		},
		[59963] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["encounterID"] = 375,
			["npcID"] = 26632,
		},
		[8362] = {
			["encounterName"] = "Watchkeeper Gargolmar",
			["encounterID"] = 1893,
			["npcID"] = 17309,
		},
		[57061] = {
			["encounterName"] = "Amanitar",
			["npcID"] = 30435,
			["encounterID"] = 1989,
		},
		[46018] = {
			["npcID"] = 25784,
		},
		[6254] = {
			["npcID"] = 3674,
		},
		[60667] = {
			["npcID"] = 32492,
		},
		[6270] = {
			["npcID"] = 3678,
		},
		[6278] = {
			["npcID"] = 3267,
		},
		[54334] = {
			["npcID"] = 16021,
		},
		[44163] = {
			["npcID"] = 24558,
		},
		[60923] = {
			["npcID"] = 32353,
		},
		[54526] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scion of Quetz'lun",
			["npcID"] = 28477,
		},
		[50496] = {
			["npcID"] = 27655,
		},
		[21068] = {
			["npcID"] = 18094,
		},
		[46150] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Air Elemental",
			["npcID"] = 30418,
		},
		[44547] = {
			["source"] = "Sister of Torment",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24697,
		},
		[23337] = {
			["npcID"] = 4624,
		},
		[59004] = {
			["encounterName"] = "Novos the Summoner",
			["encounterID"] = 371,
			["npcID"] = 26627,
		},
		[6358] = {
			["npcID"] = 1863,
		},
		[48920] = {
			["encounterName"] = "King Dred",
			["encounterID"] = 373,
			["npcID"] = 27483,
		},
		[3635] = {
			["npcID"] = 4150,
		},
		[59260] = {
			["encounterName"] = "Mage-Lord Urom",
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantasmal Naga",
			["npcID"] = 27648,
		},
		[31717] = {
			["encounterName"] = "The Black Stalker",
			["encounterID"] = 1948,
			["npcID"] = 17882,
		},
		[14887] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skeletal Acolyte",
			["npcID"] = 1789,
		},
		[3636] = {
			["source"] = "Jadespine Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4863,
		},
		[32905] = {
			["npcID"] = 18648,
		},
		[66290] = {
			["source"] = "Gjalerbron Sleep-Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23989,
		},
		[8363] = {
			["npcID"] = 4803,
		},
		[59708] = {
			["encounterName"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["encounterID"] = 575,
		},
		[57725] = {
			["encounterName"] = "Salram the Fleshcrafter",
			["source"] = "Salramm the Fleshcrafter",
			["npcID"] = 26530,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 294,
		},
		[70512] = {
			["source"] = "Lady Sylvanas Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36990,
		},
		[6350] = {
			["npcID"] = 3902,
		},
		[8858] = {
			["npcID"] = 7607,
		},
		[33417] = {
			["npcID"] = 18949,
		},
		[44164] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24656,
		},
		[20716] = {
			["npcID"] = 26277,
		},
		[3256] = {
			["npcID"] = 21306,
		},
		[32197] = {
			["npcID"] = 17371,
		},
		[3264] = {
			["npcID"] = 3452,
		},
		[10346] = {
			["source"] = "Mechano-Tank",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6225,
		},
		[8986] = {
			["source"] = "Haunting Phantasm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6427,
		},
		[48258] = {
			["encounterName"] = "Svala Sorrowgrave",
			["encounterID"] = 577,
			["npcID"] = 26668,
		},
		[54399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakkari Water Binder",
			["npcID"] = 28303,
		},
		[36104] = {
			["npcID"] = 19543,
		},
		[86633] = {
			["source"] = "Lord Overheat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46264,
		},
		[51587] = {
			["npcID"] = 28410,
		},
		[34249] = {
			["npcID"] = 19191,
		},
		[15095] = {
			["npcID"] = 9024,
		},
		[60988] = {
			["npcID"] = 31746,
		},
		[20299] = {
			["npcID"] = 24696,
		},
		[47378] = {
			["npcID"] = 26654,
		},
		[57408] = {
			["npcID"] = 29323,
		},
		[69362] = {
			["source"] = "Newt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36782,
		},
		[34697] = {
			["encounterName"] = "Laj",
			["source"] = "Laj",
			["npcID"] = 17980,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1927,
		},
		[34761] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["encounterID"] = 1926,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17975,
		},
		[59389] = {
			["encounterName"] = "Prince Keleseth",
			["encounterID"] = 571,
			["npcID"] = 23953,
		},
		[16429] = {
			["npcID"] = 18401,
		},
		[59517] = {
			["source"] = "Thrall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31650,
		},
		[34763] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["npcID"] = 17975,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1926,
		},
		[30633] = {
			["encounterName"] = "Warbringer O'mrogg",
			["encounterID"] = 1937,
			["npcID"] = 16809,
		},
		[49922] = {
			["npcID"] = 25496,
		},
		[70386] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deathwhisper Shadowcaster",
			["npcID"] = 37712,
		},
		[15575] = {
			["npcID"] = 8907,
		},
		[15495] = {
			["npcID"] = 8899,
		},
		[53824] = {
			["npcID"] = 23745,
		},
		[11433] = {
			["npcID"] = 7872,
		},
		[3396] = {
			["npcID"] = 2350,
		},
		[56063] = {
			["npcID"] = 15981,
		},
		[47939] = {
			["npcID"] = 27061,
		},
		[21067] = {
			["source"] = "Poison Sprite",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 12216,
		},
		[85867] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verlok Grubthumper",
			["npcID"] = 43367,
		},
		[9482] = {
			["source"] = "Galgann Firehammer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7291,
		},
		[35913] = {
			["npcID"] = 24999,
		},
		[13608] = {
			["npcID"] = 24819,
		},
		[33487] = {
			["npcID"] = 18794,
		},
		[38045] = {
			["npcID"] = 21802,
		},
		[36846] = {
			["npcID"] = 20285,
		},
		[3356] = {
			["source"] = "Shadowforge Geologist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7030,
		},
		[80750] = {
			["source"] = "Balnazzar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10813,
		},
		[50690] = {
			["npcID"] = 27633,
		},
		[17293] = {
			["source"] = "Instructor Galford",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10811,
		},
		[65147] = {
			["source"] = "Silvermoon Champion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33746,
		},
		[15799] = {
			["npcID"] = 25446,
		},
		[29575] = {
			["encounterName"] = "Attumen the Huntsman",
			["source"] = "Spectral Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16424,
		},
		[36519] = {
			["npcID"] = 20778,
		},
		[6950] = {
			["npcID"] = 3268,
		},
		[49091] = {
			["encounterName"] = "Skadi the Ruthless",
			["encounterID"] = 581,
			["npcID"] = 26692,
		},
		[51202] = {
			["npcID"] = 26493,
		},
		[57407] = {
			["encounterName"] = "Malygos",
			["source"] = "Malygos",
			["npcID"] = 28859,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 734,
		},
		[86636] = {
			["source"] = "Lord Overheat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46264,
		},
		[7054] = {
			["npcID"] = 3873,
		},
		[43270] = {
			["npcID"] = 23796,
		},
		[59710] = {
			["npcID"] = 10181,
		},
		[31942] = {
			["npcID"] = 17820,
		},
		[51586] = {
			["npcID"] = 28410,
		},
		[6982] = {
			["npcID"] = 2963,
		},
		[78832] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ghost Howl",
			["npcID"] = 3056,
		},
		[60030] = {
			["encounterName"] = "Jedoga Shadowseeker",
			["npcID"] = 29310,
			["encounterID"] = 214,
		},
		[32325] = {
			["encounterName"] = "Pandemonius",
			["encounterID"] = 1900,
			["npcID"] = 18341,
		},
		[60158] = {
			["npcID"] = 30668,
		},
		[49987] = {
			["npcID"] = 25758,
		},
		[56064] = {
			["npcID"] = 15981,
		},
		[30695] = {
			["encounterName"] = "Omor the Unscarred",
			["encounterID"] = 1891,
			["npcID"] = 17308,
		},
		[48132] = {
			["encounterName"] = "Gortok Palehoof",
			["encounterID"] = 579,
			["npcID"] = 26685,
		},
		[92266] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irradiated Pillager",
			["npcID"] = 6329,
		},
		[60542] = {
			["npcID"] = 31721,
		},
		[32358] = {
			["encounterName"] = "Pandemonius",
			["encounterID"] = 1900,
			["npcID"] = 18341,
		},
		[34762] = {
			["encounterName"] = "High Botanist Freywinn",
			["source"] = "High Botanist Freywinn",
			["encounterID"] = 1926,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17975,
		},
		[32422] = {
			["encounterName"] = "Exarch Maladaar",
			["npcID"] = 18373,
			["encounterID"] = 1889,
		},
		[59006] = {
			["npcID"] = 26639,
		},
		[37788] = {
			["npcID"] = 21797,
		},
		[12745] = {
			["npcID"] = 7728,
		},
		[81008] = {
			["source"] = "Crystalspawn Giant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42810,
		},
		[88170] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Turbulent Squall",
			["npcID"] = 45924,
		},
		[68982] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["npcID"] = 36502,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 831,
		},
		[57088] = {
			["encounterName"] = "Amanitar",
			["npcID"] = 30258,
			["encounterID"] = 1989,
		},
		[59965] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["encounterID"] = 375,
		},
		[57854] = {
			["source"] = "Malas the Corrupter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28255,
		},
		[3584] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blighted Zombie",
			["npcID"] = 4475,
		},
		[51203] = {
			["npcID"] = 26360,
		},
		[53314] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Rune Elementalist",
			["npcID"] = 27962,
		},
		[59519] = {
			["source"] = "Thrall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31650,
		},
		[49348] = {
			["npcID"] = 27677,
		},
		[70513] = {
			["source"] = "Lady Sylvanas Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36990,
		},
		[17294] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ezra Grimm",
			["npcID"] = 11058,
		},
		[16590] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Summoner",
			["npcID"] = 8551,
		},
		[59839] = {
			["encounterName"] = "Slad'ran",
			["npcID"] = 29304,
			["encounterID"] = 383,
		},
		[49668] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Crystal Handler",
			["npcID"] = 26627,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 371,
		},
		[51779] = {
			["npcID"] = 26232,
		},
		[55937] = {
			["source"] = "Orinoko Tuskbreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30020,
		},
		[51584] = {
			["npcID"] = 26283,
		},
		[56065] = {
			["npcID"] = 15981,
		},
		[49537] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 375,
		},
		[3644] = {
			["source"] = "Kin'weelay",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2519,
		},
		[10277] = {
			["npcID"] = 18452,
		},
		[39945] = {
			["npcID"] = 22377,
		},
		[54338] = {
			["npcID"] = 16020,
		},
		[38026] = {
			["npcID"] = 19768,
		},
		[48325] = {
			["npcID"] = 27003,
		},
		[38154] = {
			["npcID"] = 19826,
		},
		[58688] = {
			["encounterName"] = "Cyanigosa",
			["source"] = "Cyanigosa",
			["encounterID"] = 545,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31134,
		},
		[52611] = {
			["npcID"] = 27732,
		},
		[54722] = {
			["npcID"] = 16168,
		},
		[8282] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Inquisitor Fairbanks",
			["npcID"] = 4542,
		},
		[54850] = {
			["encounterName"] = "Drakkari Colossus",
			["npcID"] = 29307,
			["encounterID"] = 385,
		},
		[59696] = {
			["npcID"] = 24082,
		},
		[52931] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lafoo",
			["npcID"] = 28120,
		},
		[29576] = {
			["encounterName"] = "Attumen the Huntsman",
			["source"] = "Spectral Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16424,
		},
		[12470] = {
			["npcID"] = 15438,
		},
		[46982] = {
			["npcID"] = 26414,
		},
		[38858] = {
			["npcID"] = 24938,
		},
		[37480] = {
			["npcID"] = 21702,
		},
		[59376] = {
			["encounterName"] = "Mage-Lord Urom",
			["encounterID"] = 532,
			["npcID"] = 27655,
		},
		[46987] = {
			["npcID"] = 11949,
		},
		[33643] = {
			["npcID"] = 18969,
		},
		[61353] = {
			["npcID"] = 29476,
		},
		[57665] = {
			["npcID"] = 30645,
		},
		[34945] = {
			["npcID"] = 18317,
		},
		[31975] = {
			["npcID"] = 18113,
		},
		[19725] = {
			["npcID"] = 28939,
		},
		[13895] = {
			["npcID"] = 9016,
		},
		[59514] = {
			["source"] = "Lady Sylvanas Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31651,
		},
		[32103] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fordragon Marksman",
			["npcID"] = 27540,
		},
		[14033] = {
			["npcID"] = 9018,
		},
		[184] = {
			["npcID"] = 4037,
		},
		[24011] = {
			["source"] = "Razzashi Adder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11372,
		},
		[44639] = {
			["npcID"] = 24696,
		},
		[33805] = {
			["npcID"] = 19384,
		},
		[48198] = {
			["npcID"] = 31282,
		},
		[48262] = {
			["npcID"] = 23656,
		},
		[27641] = {
			["npcID"] = 18325,
		},
		[11082] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Electrocutioner 6000",
			["npcID"] = 6235,
		},
		[54524] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zuramat the Obliterator",
			["npcID"] = 29314,
		},
		[55984] = {
			["npcID"] = 28006,
		},
		[58817] = {
			["npcID"] = 28341,
		},
		[76790] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Invader",
			["npcID"] = 39616,
		},
		[56898] = {
			["npcID"] = 30319,
		},
		[66811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reprogrammed Shredder",
			["npcID"] = 35129,
		},
		[43649] = {
			["encounterName"] = "Skarvold & Dalronn",
			["npcID"] = 24201,
			["encounterID"] = 573,
		},
		[55931] = {
			["encounterName"] = "Prince Taldaram",
			["npcID"] = 29308,
			["encounterID"] = 213,
		},
		[51218] = {
			["npcID"] = 23750,
		},
		[46983] = {
			["npcID"] = 25040,
		},
		[38859] = {
			["npcID"] = 22274,
		},
		[13321] = {
			["npcID"] = 17401,
		},
		[15043] = {
			["npcID"] = 12876,
		},
		[80117] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorged Gyreworm",
			["npcID"] = 44259,
		},
		[38595] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24558,
		},
		[44644] = {
			["npcID"] = 24685,
		},
		[8137] = {
			["npcID"] = 6553,
		},
		[76535] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gilgoblin Aquamage",
			["npcID"] = 40943,
		},
		[8275] = {
			["npcID"] = 4532,
		},
		[55811] = {
			["npcID"] = 29984,
		},
		[50512] = {
			["npcID"] = 27377,
		},
		[20813] = {
			["npcID"] = 10760,
		},
		[68987] = {
			["encounterName"] = "Krick",
			["source"] = "Ick",
			["encounterID"] = 835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36476,
		},
		[56067] = {
			["npcID"] = 15981,
		},
		[9435] = {
			["npcID"] = 6487,
		},
		[17162] = {
			["source"] = "Crimson Conjuror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10419,
		},
		[46024] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24556,
		},
		[33806] = {
			["npcID"] = 19384,
		},
		[54340] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Putrid Abomination",
			["npcID"] = 28564,
		},
		[5262] = {
			["npcID"] = 3197,
		},
		[12551] = {
			["npcID"] = 8920,
		},
		[54532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frozen Earth",
			["npcID"] = 28411,
		},
		[36173] = {
			["encounterName"] = "Dalliah the Doomsayer",
			["encounterID"] = 1913,
			["npcID"] = 20885,
		},
		[50566] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Spellbinder",
			["npcID"] = 27635,
		},
		[34254] = {
			["npcID"] = 18422,
		},
		[7125] = {
			["npcID"] = 4274,
		},
		[48700] = {
			["source"] = "Dragonflayer Seer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26554,
		},
		[54916] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sparktouched Oracle",
			["npcID"] = 28112,
		},
		[15800] = {
			["source"] = "Shadowforge Darkcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4848,
		},
		[57091] = {
			["encounterName"] = "Keristrasza",
			["npcID"] = 26723,
			["encounterID"] = 526,
		},
		[75746] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Erunak Stonespeaker",
			["npcID"] = 40601,
		},
		[81654] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bristleback Gun Thief",
			["npcID"] = 36708,
		},
		[65279] = {
			["encounterName"] = "Emalon the Storm Watcher",
			["source"] = "Emalon the Storm Watcher",
			["npcID"] = 33993,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 774,
		},
		[9739] = {
			["npcID"] = 18079,
		},
		[11802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Iron Agent",
			["npcID"] = 6212,
		},
		[17353] = {
			["source"] = "Crimson Rifleman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11054,
		},
		[50810] = {
			["encounterName"] = "Krystallus",
			["source"] = "Krystallus",
			["npcID"] = 27977,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 563,
		},
		[42526] = {
			["npcID"] = 23876,
		},
		[56934] = {
			["encounterName"] = "Grand Magus Telestra",
			["npcID"] = 26731,
			["encounterID"] = 520,
		},
		[47496] = {
			["npcID"] = 26125,
		},
		[59842] = {
			["encounterName"] = "Slad'ran",
			["source"] = "Slad'ran",
			["encounterID"] = 383,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29304,
		},
		[45577] = {
			["npcID"] = 25451,
		},
		[14515] = {
			["npcID"] = 4428,
		},
		[46317] = {
			["npcID"] = 25743,
		},
		[11962] = {
			["npcID"] = 19411,
		},
		[33551] = {
			["encounterName"] = "Ambassador Hellmaw",
			["encounterID"] = 1908,
			["npcID"] = 18731,
		},
		[35329] = {
			["npcID"] = 18133,
		},
		[69373] = {
			["source"] = "Ticker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36750,
		},
		[22662] = {
			["npcID"] = 11492,
		},
		[50183] = {
			["npcID"] = 24539,
		},
		[12058] = {
			["npcID"] = 18080,
		},
		[88308] = {
			["encounterName"] = "Altairus",
			["source"] = "Altairus",
			["npcID"] = 43873,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1041,
		},
		[50375] = {
			["npcID"] = 24601,
		},
		[56580] = {
			["npcID"] = 30279,
		},
		[6063] = {
			["npcID"] = 4820,
		},
		[36238] = {
			["npcID"] = 22461,
		},
		[7481] = {
			["npcID"] = 4279,
		},
		[59225] = {
			["encounterName"] = "Mage-Lord Urom",
			["encounterID"] = 532,
			["npcID"] = 27651,
		},
		[8142] = {
			["npcID"] = 5775,
		},
		[43562] = {
			["npcID"] = 24019,
		},
		[59416] = {
			["encounterName"] = "King Dred",
			["encounterID"] = 373,
			["npcID"] = 27483,
		},
		[1026] = {
			["npcID"] = 4278,
		},
		[69246] = {
			["encounterName"] = "Overlrod Tyrannus",
			["source"] = "Rimefang",
			["npcID"] = 36661,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 837,
		},
		[69374] = {
			["source"] = "Volt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36781,
		},
		[38861] = {
			["npcID"] = 23440,
		},
		[59395] = {
			["source"] = "Treacherous Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31532,
		},
		[53318] = {
			["source"] = "Anub'ar Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28922,
		},
		[56860] = {
			["npcID"] = 26728,
		},
		[16496] = {
			["source"] = "Cannon Master Willey",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10997,
		},
		[76508] = {
			["source"] = "Crazed Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39982,
		},
		[33507] = {
			["encounterName"] = "Grandmaster Vorpil",
			["npcID"] = 18634,
		},
		[49544] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 375,
		},
		[35234] = {
			["npcID"] = 18137,
		},
		[45578] = {
			["npcID"] = 25244,
		},
		[60211] = {
			["npcID"] = 24079,
		},
		[8364] = {
			["source"] = "Blackfathom Sea Witch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4805,
		},
		[37582] = {
			["npcID"] = 19984,
		},
		[58912] = {
			["npcID"] = 31268,
		},
		[60227] = {
			["npcID"] = 23956,
		},
		[69375] = {
			["source"] = "Grit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36783,
		},
		[46026] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24553,
		},
		[57076] = {
			["source"] = "Yggdras",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30014,
		},
		[48201] = {
			["npcID"] = 27248,
		},
		[38030] = {
			["npcID"] = 19784,
		},
		[38094] = {
			["npcID"] = 21979,
		},
		[5403] = {
			["npcID"] = 2624,
		},
		[50504] = {
			["npcID"] = 25721,
		},
		[61338] = {
			["encounterName"] = "Xevozz",
			["npcID"] = 29266,
			["encounterID"] = 2661,
		},
		[36279] = {
			["npcID"] = 21148,
		},
		[56837] = {
			["npcID"] = 26727,
		},
		[6351] = {
			["npcID"] = 3903,
		},
		[25420] = {
			["npcID"] = 25421,
		},
		[59122] = {
			["source"] = "Apothecary Chemist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31482,
		},
		[21390] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hakkari Shadow Hunter",
			["npcID"] = 11339,
		},
		[51016] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prince Navarius",
			["npcID"] = 29821,
		},
		[61315] = {
			["npcID"] = 30353,
		},
		[75645] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corla, Herald of Twilight",
			["npcID"] = 39679,
		},
		[36879] = {
			["npcID"] = 20977,
		},
		[57413] = {
			["npcID"] = 11832,
		},
		[57477] = {
			["npcID"] = 30575,
		},
		[52341] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lightning Construct",
			["npcID"] = 27972,
		},
		[29054] = {
			["npcID"] = 18864,
		},
		[59716] = {
			["npcID"] = 4949,
		},
		[47059] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stars' Rest Sentinel",
			["npcID"] = 26448,
		},
		[51805] = {
			["npcID"] = 27966,
		},
		[55814] = {
			["encounterName"] = "Eck the Ferocious",
			["npcID"] = 29932,
			["encounterID"] = 1988,
		},
		[61402] = {
			["npcID"] = 27639,
		},
		[60848] = {
			["npcID"] = 30414,
		},
		[58053] = {
			["npcID"] = 30189,
		},
		[7121] = {
			["npcID"] = 3853,
		},
		[54087] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overlord Drakuru",
			["npcID"] = 28998,
		},
		[61015] = {
			["npcID"] = 31283,
		},
		[37839] = {
			["npcID"] = 21033,
		},
		[69633] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spectral Warden",
			["npcID"] = 36666,
		},
		[8988] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcanist Doan",
			["npcID"] = 6487,
		},
		[32329] = {
			["npcID"] = 17871,
		},
		[24173] = {
			["encounterName"] = "High Priest Thekal",
			["source"] = "Zealot Zath",
			["npcID"] = 11348,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 789,
		},
		[70145] = {
			["encounterName"] = "Escaped from Arthas",
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Witch Doctor",
			["npcID"] = 36941,
		},
		[36176] = {
			["npcID"] = 22862,
		},
		[34974] = {
			["encounterName"] = "Swamplord Musel'ek",
			["encounterID"] = 1947,
			["npcID"] = 17826,
		},
		[11131] = {
			["npcID"] = 7273,
		},
		[54791] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maleki the Pallid",
			["npcID"] = 10438,
		},
		[50761] = {
			["encounterName"] = "Maiden of Grief",
			["source"] = "Maiden of Grief",
			["npcID"] = 27975,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 565,
		},
		[59013] = {
			["encounterName"] = "Trollgore",
			["encounterID"] = 369,
			["npcID"] = 26636,
		},
		[54983] = {
			["npcID"] = 24082,
		},
		[15305] = {
			["npcID"] = 8983,
		},
		[50092] = {
			["npcID"] = 27791,
		},
		[49034] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 371,
		},
		[20463] = {
			["source"] = "Lady Sylvanas Windrunner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31651,
		},
		[13322] = {
			["npcID"] = 2964,
		},
		[55638] = {
			["encounterName"] = "Gothik the Harvester",
			["npcID"] = 16126,
			["encounterID"] = 1109,
		},
		[76031] = {
			["encounterName"] = "Beauty",
			["source"] = "Beauty",
			["npcID"] = 39700,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1037,
		},
		[68950] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["npcID"] = 36497,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 829,
		},
		[57606] = {
			["npcID"] = 27881,
		},
		[72321] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ghostly Priest",
			["npcID"] = 38175,
		},
		[14146] = {
			["npcID"] = 6557,
		},
		[15530] = {
			["npcID"] = 19258,
		},
		[45580] = {
			["npcID"] = 25444,
		},
		[59973] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["encounterID"] = 375,
			["npcID"] = 26632,
		},
		[20815] = {
			["source"] = "Scarlet Evoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4289,
		},
		[34787] = {
			["npcID"] = 18088,
		},
		[59033] = {
			["npcID"] = 27964,
		},
		[32093] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Emperor Cobra",
			["npcID"] = 28011,
		},
		[48276] = {
			["encounterName"] = "Svala Sorrowgrave",
			["encounterID"] = 577,
			["npcID"] = 26668,
		},
		[37840] = {
			["npcID"] = 22038,
		},
		[51363] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Risen Shadowcaster",
			["npcID"] = 27600,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 371,
		},
		[88186] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Empyrean Assassin",
			["npcID"] = 45922,
		},
		[38032] = {
			["npcID"] = 21059,
		},
		[50378] = {
			["encounterName"] = "Trollgore",
			["source"] = "Scourge Reanimator",
			["npcID"] = 26626,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 369,
		},
		[59727] = {
			["encounterName"] = "Maiden of Grief",
			["npcID"] = 27975,
			["encounterID"] = 565,
		},
		[72322] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ghostly Priest",
			["npcID"] = 38175,
		},
		[37624] = {
			["source"] = "Perfidious Dreadlord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31531,
		},
		[56775] = {
			["npcID"] = 26722,
		},
		[17169] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crypt Horror",
			["npcID"] = 8557,
		},
		[60880] = {
			["encounterName"] = "Archavon the Stone Watcher",
			["encounterID"] = 772,
			["npcID"] = 31125,
		},
		[15785] = {
			["npcID"] = 19306,
		},
		[15801] = {
			["npcID"] = 11600,
		},
		[29579] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
		},
		[34642] = {
			["npcID"] = 19507,
		},
		[46988] = {
			["npcID"] = 11949,
		},
		[17393] = {
			["npcID"] = 29109,
		},
		[2602] = {
			["source"] = "Earthen Sculptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7012,
		},
		[38239] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cabal Familiar",
			["npcID"] = 18641,
		},
		[29459] = {
			["source"] = "Arch Mage Xintor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16977,
		},
		[59148] = {
			["npcID"] = 28580,
		},
		[32690] = {
			["npcID"] = 18328,
		},
		[55624] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakkari God Hunter",
			["npcID"] = 29820,
		},
		[38498] = {
			["npcID"] = 21050,
		},
		[11899] = {
			["npcID"] = 5650,
		},
		[59910] = {
			["encounterName"] = "Novos the Summoner",
			["encounterID"] = 371,
			["npcID"] = 26631,
		},
		[21807] = {
			["npcID"] = 29181,
		},
		[52270] = {
			["source"] = "Frenzyheart Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28079,
		},
		[17204] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cauldron Lord Malvinious",
			["npcID"] = 11077,
		},
		[30091] = {
			["npcID"] = 16165,
		},
		[29492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
		},
		[56933] = {
			["encounterName"] = "Frozen Commander",
			["source"] = "Alliance Ranger",
			["npcID"] = 26802,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 519,
		},
		[37841] = {
			["npcID"] = 20749,
		},
		[48140] = {
			["encounterName"] = "Gortok Palehoof",
			["source"] = "Ravenous Furbolg",
			["encounterID"] = 579,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26684,
		},
		[31405] = {
			["npcID"] = 17771,
		},
		[38033] = {
			["npcID"] = 25073,
		},
		[22127] = {
			["npcID"] = 13442,
		},
		[55597] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakkari Medicine Man",
			["npcID"] = 29826,
		},
		[54601] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quetz'lun Worshipper",
			["npcID"] = 28747,
		},
		[87622] = {
			["encounterName"] = "Asaad",
			["source"] = "Asaad",
			["npcID"] = 43875,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1042,
		},
		[34259] = {
			["npcID"] = 17014,
		},
		[57644] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30621,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 215,
		},
		[29564] = {
			["encounterName"] = "Moroes",
			["source"] = "Lady Catriona Von'Indi",
			["npcID"] = 19872,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 653,
		},
		[60511] = {
			["source"] = "Lady Jaina Proudmoore",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31418,
		},
		[30493] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Talrendis Raider",
			["npcID"] = 35177,
		},
		[22415] = {
			["npcID"] = 11464,
		},
		[32682] = {
			["npcID"] = 18320,
		},
		[59271] = {
			["encounterName"] = "Gortok Palehoof",
			["encounterID"] = 579,
			["npcID"] = 26685,
		},
		[27572] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kwee Q. Peddlefeet",
			["npcID"] = 38042,
		},
		[88061] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Armored Mistral",
			["npcID"] = 45915,
		},
		[75907] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["npcID"] = 40633,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[57480] = {
			["npcID"] = 30184,
		},
		[16498] = {
			["npcID"] = 7442,
		},
		[29456] = {
			["source"] = "Arch Mage Xintor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16977,
		},
		[55625] = {
			["npcID"] = 29820,
		},
		[10348] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Leprous Technician",
			["npcID"] = 6222,
		},
		[59991] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30622,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 215,
		},
		[47629] = {
			["npcID"] = 26865,
		},
		[51787] = {
			["npcID"] = 26336,
		},
		[8365] = {
			["npcID"] = 4812,
		},
		[24049] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gurubashi Headhunter",
			["npcID"] = 11351,
		},
		[12491] = {
			["npcID"] = 7795,
		},
		[7279] = {
			["npcID"] = 3295,
		},
		[69564] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soulguard Adept",
			["npcID"] = 36620,
		},
		[7295] = {
			["npcID"] = 3914,
		},
		[54282] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lavanthor",
			["npcID"] = 29312,
		},
		[70074] = {
			["source"] = "Crown Sprayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 38032,
		},
		[53717] = {
			["source"] = "Lady Alistra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29195,
		},
		[5280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Razormane Quilboar",
			["npcID"] = 3111,
		},
		[331] = {
			["npcID"] = 3206,
		},
		[36179] = {
			["npcID"] = 20397,
		},
		[332] = {
			["npcID"] = 2965,
		},
		[17138] = {
			["source"] = "Crimson Initiate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10420,
		},
		[35316] = {
			["npcID"] = 18286,
		},
		[81026] = {
			["source"] = "Enslaved Son of Arkkoroc",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36868,
		},
		[68872] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["npcID"] = 36497,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 829,
		},
		[24314] = {
			["encounterName"] = "Bloodlord Mandokir",
			["source"] = "Bloodlord Mandokir",
			["encounterID"] = 787,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11382,
		},
		[29580] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
		},
		[12739] = {
			["npcID"] = 17371,
		},
		[49037] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 371,
		},
		[33844] = {
			["npcID"] = 19294,
		},
		[37554] = {
			["npcID"] = 31003,
		},
		[55700] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spitting Cobra",
			["npcID"] = 29774,
		},
		[59528] = {
			["encounterName"] = "Volkhan",
			["npcID"] = 28587,
			["encounterID"] = 557,
		},
		[68774] = {
			["encounterName"] = "Forgemaster Garfrost",
			["source"] = "Forgemaster Garfrost",
			["encounterID"] = 833,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36494,
		},
		[46608] = {
			["npcID"] = 11949,
		},
		[51110] = {
			["encounterName"] = "Mage-Lord Urom",
			["source"] = "Mage-Lord Urom",
			["npcID"] = 27655,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 532,
		},
		[49549] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Ring Guardian",
			["npcID"] = 27638,
		},
		[88959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Temple Adept",
			["npcID"] = 45935,
		},
		[32011] = {
			["npcID"] = 20089,
		},
		[413091] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirror Image",
			["npcID"] = 205999,
		},
		[66868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reprogrammed Shredder",
			["npcID"] = 35129,
		},
		[33493] = {
			["npcID"] = 18848,
		},
		[49696] = {
			["encounterName"] = "Trollgore",
			["source"] = "Risen Drakkari Soulmage",
			["npcID"] = 26636,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 369,
		},
		[56138] = {
			["npcID"] = 16299,
		},
		[52754] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hardened Steel Skycaller",
			["npcID"] = 28580,
		},
		[28306] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mad Scientist",
			["npcID"] = 16020,
		},
		[16001] = {
			["source"] = "Risen Drakkari Bat Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26638,
		},
		[69263] = {
			["encounterName"] = "Krick",
			["source"] = "Ick",
			["encounterID"] = 835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36476,
		},
		[40082] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilskar Harpooner",
			["npcID"] = 22874,
		},
		[32363] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18344,
		},
		[28301] = {
			["source"] = "Mad Scientist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16020,
		},
		[9053] = {
			["npcID"] = 4038,
		},
		[348] = {
			["npcID"] = 3183,
		},
		[46035] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Magister",
			["npcID"] = 24685,
		},
		[60936] = {
			["encounterName"] = "Malygos",
			["source"] = "Malygos",
			["npcID"] = 28859,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 734,
		},
		[52812] = {
			["npcID"] = 27292,
		},
		[59017] = {
			["encounterName"] = "Trollgore",
			["encounterID"] = 369,
			["npcID"] = 26626,
		},
		[59081] = {
			["npcID"] = 26554,
		},
		[46181] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Apoko",
			["npcID"] = 24553,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[59209] = {
			["npcID"] = 27633,
		},
		[59273] = {
			["encounterName"] = "Gortok Palehoof",
			["encounterID"] = 579,
			["npcID"] = 26684,
		},
		[39647] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Onyx Sanctum Guardian",
			["npcID"] = 30453,
		},
		[13323] = {
			["npcID"] = 18315,
		},
		[70080] = {
			["encounterName"] = "Escaped from Arthas",
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Witch Doctor",
			["npcID"] = 36941,
		},
		[59529] = {
			["encounterName"] = "Volkhan",
			["npcID"] = 28587,
			["encounterID"] = 557,
		},
		[20824] = {
			["source"] = "Razorfen Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4520,
		},
		[51469] = {
			["source"] = "Shaman Vekjik",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28315,
		},
		[68664] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zapper Gnome",
			["npcID"] = 36384,
		},
		[34785] = {
			["npcID"] = 18405,
		},
		[70291] = {
			["source"] = "Ymirjar Skycaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31260,
		},
		[15498] = {
			["npcID"] = 28594,
		},
		[46043] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Warlock",
			["npcID"] = 24686,
		},
		[43665] = {
			["npcID"] = 24071,
		},
		[18802] = {
			["npcID"] = 23883,
		},
		[69131] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soulguard Animator",
			["npcID"] = 36516,
		},
		[82362] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Evolved Twilight Zealot",
			["npcID"] = 39987,
		},
		[7799] = {
			["npcID"] = 416,
		},
		[38556] = {
			["npcID"] = 25764,
		},
		[52237] = {
			["encounterName"] = "Volkhan",
			["source"] = "Volkhan",
			["npcID"] = 28587,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 557,
		},
		[88194] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Young Storm Dragon",
			["npcID"] = 45919,
		},
		[76815] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Spiritmender",
			["npcID"] = 41096,
		},
		[79413] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gilblin Collector",
			["npcID"] = 41017,
		},
		[90625] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enormous Gyreworm",
			["npcID"] = 48533,
		},
		[7855] = {
			["npcID"] = 30632,
		},
		[44433] = {
			["source"] = "Scuttle Frostprow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24784,
		},
		[38356] = {
			["source"] = "Plagued Felbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31528,
		},
		[50702] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Spellbinder",
			["npcID"] = 27635,
		},
		[52813] = {
			["npcID"] = 27377,
		},
		[17235] = {
			["source"] = "Nerub'enkan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10437,
		},
		[15802] = {
			["source"] = "Eldreth Phantasm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11475,
		},
		[59146] = {
			["npcID"] = 29820,
		},
		[65351] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wolvar Orphan",
			["npcID"] = 33532,
		},
		[77576] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Redstone Basilisk",
			["npcID"] = 5990,
		},
		[69516] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ymirjar Deathbringer",
			["npcID"] = 36892,
		},
		[52705] = {
			["npcID"] = 28938,
		},
		[61513] = {
			["npcID"] = 27971,
		},
		[61577] = {
			["npcID"] = 26406,
		},
		[59594] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lavanthor",
			["npcID"] = 29312,
		},
		[13899] = {
			["npcID"] = 9017,
		},
		[35158] = {
			["encounterName"] = "Mechano-Lord Capacitus",
			["npcID"] = 19219,
			["encounterID"] = 1932,
		},
		[31948] = {
			["encounterName"] = "Rokmar the Crackler",
			["encounterID"] = 1941,
			["npcID"] = 17991,
		},
		[61897] = {
			["npcID"] = 31267,
		},
		[88201] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Young Storm Dragon",
			["npcID"] = 45919,
		},
		[47696] = {
			["npcID"] = 26737,
		},
		[51854] = {
			["source"] = "Thalgran Blightbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28443,
		},
		[51918] = {
			["npcID"] = 28534,
		},
		[93697] = {
			["encounterName"] = "Lord Walden",
			["source"] = "Lord Walden",
			["encounterID"] = 1073,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46963,
		},
		[17843] = {
			["npcID"] = 23179,
		},
		[81439] = {
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43391,
		},
		[83861] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stonescale Matriarch",
			["npcID"] = 44148,
		},
		[52238] = {
			["encounterName"] = "Volkhan",
			["npcID"] = 28587,
			["encounterID"] = 557,
		},
		[48208] = {
			["npcID"] = 27169,
		},
		[50319] = {
			["npcID"] = 25465,
		},
		[32364] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18344,
		},
		[24208] = {
			["encounterName"] = "High Priest Thekal",
			["source"] = "Zealot Lor'Khan",
			["encounterID"] = 789,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11347,
		},
		[6064] = {
			["npcID"] = 4303,
		},
		[36246] = {
			["npcID"] = 19541,
		},
		[76682] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Element Warden",
			["npcID"] = 40017,
		},
		[80780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shrieking Banshee",
			["npcID"] = 10463,
		},
		[56908] = {
			["encounterName"] = "Sartharion",
			["source"] = "Sartharion",
			["npcID"] = 28860,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 742,
		},
		[59019] = {
			["npcID"] = 29774,
		},
		[59083] = {
			["npcID"] = 26554,
		},
		[16564] = {
			["npcID"] = 25387,
		},
	},
}
PlaterLanguage = {
	["language"] = "enUS",
	["version"] = 1,
}
PlaterLogs = {
	["_general_logs"] = {
		"2024-05-31 20:19:56 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Moolatz", -- [1]
		"2024-05-31 20:02:53 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Vermina", -- [2]
		"2024-05-31 19:39:46 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Vermin", -- [3]
		"2024-05-31 19:39:14 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Battlearm", -- [4]
		"2024-05-31 19:15:45 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Battlearm", -- [5]
		"2024-05-31 19:08:44 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Battlearm", -- [6]
		"2024-05-31 19:08:23 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Battlearm", -- [7]
		"2024-05-31 19:05:35 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Battlearm", -- [8]
		"2024-05-31 18:22:46 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Battlearm", -- [9]
		"2024-05-31 18:15:22 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Battlearm", -- [10]
		"2024-05-31 18:12:35 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Vermin", -- [11]
		"2024-05-30 16:17:13 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Mxzq", -- [12]
		"2024-05-30 16:14:09 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Vermina", -- [13]
		"2024-05-30 16:12:53 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Battlearm", -- [14]
		"2024-05-30 16:11:12 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Moolatz", -- [15]
		"2024-05-30 16:10:41 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Vermin", -- [16]
		"2024-05-30 16:08:32 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Vermin", -- [17]
		"2024-05-30 16:07:51 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Moolatz", -- [18]
		"2024-05-30 15:26:23 | INIT | Plater-v580-Cata | Framework v537 | 4.4.0 | enUS | Moolatz", -- [19]
	},
	["_error_logs"] = {
	},
}
